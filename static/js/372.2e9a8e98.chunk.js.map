{"version":3,"file":"static/js/372.2e9a8e98.chunk.js","mappings":"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","sources":["configs/basics.config.ts","configs/env.ts","configs/index.ts","configs/sol.config.ts","helpers/providers/ui.provider.tsx","helpers/providers/pool.provider.tsx","helpers/providers/wallet.provider.tsx","helpers/providers/account.provider.tsx","helpers/tokenProvider/supplementary.ts","helpers/tokenProvider/index.ts","helpers/providers/mint.provider.tsx","store/mints.reducer.ts","store/ui.reducer.tsx","helpers/util.ts"],"sourcesContent":["import { Env } from './env'\n\nif (\n  typeof process.env.REACT_APP_ID !== 'string' ||\n  typeof process.env.REACT_APP_URL !== 'string'\n)\n  throw new Error('Please add REACT_APP_ID, REACT_APP_URL in .env!')\n\n/**\n * Contructor\n */\n\ntype Config = {\n  appId: string\n  url: string\n}\n\nconst shared = {\n  appId: process.env.REACT_APP_ID,\n  url: process.env.REACT_APP_URL,\n}\n\nconst configs: Record<Env, Config> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    ...shared,\n  },\n\n  /**\n   * Staging configurations\n   */\n  staging: {\n    ...shared,\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    ...shared,\n  },\n}\n\n/**\n * Module exports\n */\nexport default configs\n","export type Env = 'development' | 'staging' | 'production'\nconst env: Env =\n  (process.env.REACT_APP_ENV as Env) ||\n  (process.env.NODE_ENV as Env) ||\n  'development'\nexport default env\n","import env from './env'\nimport basics from './basics.config'\nimport sol from './sol.config'\n\nconst configs = {\n  env,\n  basics: basics[env],\n  sol: sol[env],\n}\n\n/**\n * Module exports\n */\nexport default configs\n","import { Env } from './env'\n\nconst SOLVARS = {\n  spltAddress: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n  splataAddress: 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n}\n\n/**\n * Contructor\n */\ntype Config = {\n  node: string\n  cluster: 'devnet' | 'testnet' | 'mainnet'\n  chainId: 101 | 102 | 103\n  senAddress: string\n  swapAddress: string\n  taxmanAddress: string\n} & typeof SOLVARS\n\nconst configs: Record<Env, Config> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    node: 'https://api.devnet.solana.com',\n    chainId: 103,\n    cluster: 'devnet',\n    senAddress: '5YwUkPdXLoujGkZuo9B4LsLKj3hdkDcfP4derpspifSJ',\n    ...SOLVARS,\n    swapAddress: '4erFSLP7oBFSVC1t35jdxmbfxEhYCKfoM6XdG2BLR3UF',\n    taxmanAddress: '8UaZw2jDhJzv5V53569JbCd3bD4BnyCfBH3sjwgajGS9',\n  },\n\n  /**\n   * Staging configurations\n   */\n  staging: {\n    node: 'https://api.devnet.solana.com',\n    cluster: 'devnet',\n    chainId: 103,\n    senAddress: '5YwUkPdXLoujGkZuo9B4LsLKj3hdkDcfP4derpspifSJ',\n    ...SOLVARS,\n    swapAddress: '4erFSLP7oBFSVC1t35jdxmbfxEhYCKfoM6XdG2BLR3UF',\n    taxmanAddress: '8UaZw2jDhJzv5V53569JbCd3bD4BnyCfBH3sjwgajGS9',\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    node: 'https://api.mainnet-beta.solana.com',\n    cluster: 'mainnet',\n    chainId: 101,\n    senAddress: 'SENBBKVCM7homnf5RX9zqpf1GFe935hnbU4uVzY1Y6M',\n    ...SOLVARS,\n    swapAddress: 'SSW7ooZ1EbEognq5GosbygA3uWW1Hq1NsFq6TsftCFV',\n    taxmanAddress: '9doo2HZQEmh2NgfT3Yx12M89aoBheycYqH1eaR5gKb3e',\n  },\n}\n\n/**\n * Module exports\n */\nexport default configs\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  useCallback,\n  ReactNode,\n} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { RootState, RootDispatch } from 'store'\nimport { notify as _notify, State as UIState } from 'store/ui.reducer'\n\nconst Context = createContext<UIProvider>({} as UIProvider)\n\nexport type UIProvider = {\n  ui: UIState\n  notify: (...agrs: Parameters<typeof _notify>) => Promise<{}>\n}\n\n/**\n * UI Context Provider\n */\nconst UIContextProvider = ({ children }: { children: ReactNode }) => {\n  const dispatch = useDispatch<RootDispatch>()\n  const ui = useSelector((state: RootState) => state.ui)\n  const notify = useCallback(\n    async (...agrs: Parameters<typeof _notify>) =>\n      await dispatch(_notify(...agrs)).unwrap(),\n    [dispatch],\n  )\n  const provider = { ui, notify }\n  return <Context.Provider value={provider}>{children}</Context.Provider>\n}\nexport default UIContextProvider\n\n/**\n * UI Context Consumer\n */\nconst UIComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * UI HOC\n */\nexport const withUI = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <UIComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </UIComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * UI Hook\n */\nexport const useUI = () => {\n  return useContext<UIProvider>(Context)\n}\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  ReactNode,\n} from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { RootState } from 'store'\nimport { State as PoolState } from 'store/pools.reducer'\n\nconst Context = createContext<PoolProvider>({} as PoolProvider)\n\nexport type PoolProvider = {\n  pools: PoolState\n}\n\n/**\n * Pool Context Provider\n */\nconst PoolContextProvider = ({ children }: { children: ReactNode }) => {\n  const pools = useSelector((state: RootState) => state.pools)\n  const provider = {\n    pools,\n  }\n  return <Context.Provider value={provider}>{children}</Context.Provider>\n}\nexport default PoolContextProvider\n\n/**\n * Pool Context Consumer\n */\nconst PoolContextComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * Pool HOC\n */\nexport const withPool = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <PoolContextComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </PoolContextComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * Pool Hook\n */\nexport const usePool = () => {\n  return useContext<PoolProvider>(Context)\n}\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  ReactNode,\n} from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { RootState } from 'store'\nimport { State as WalletState } from 'store/wallet.reducer'\n\nconst Context = createContext<WalletProvider>({} as WalletProvider)\n\nexport type WalletProvider = {\n  wallet: WalletState\n}\n\n/**\n * Wallet Context Provider\n */\nconst WalletContextProvider = ({ children }: { children: ReactNode }) => {\n  const wallet = useSelector((state: RootState) => state.wallet)\n  const provider = {\n    wallet,\n  }\n  return <Context.Provider value={provider}>{children}</Context.Provider>\n}\nexport default WalletContextProvider\n\n/**\n * Wallet Context Consumer\n */\nconst WalletContextComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * Wallet HOC\n */\nexport const withWallet = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <WalletContextComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </WalletContextComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * Wallet Hook\n */\nexport const useWallet = () => {\n  return useContext<WalletProvider>(Context)\n}\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  ReactNode,\n} from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { RootState } from 'store'\nimport { State as AccountsState } from 'store/accounts.reducer'\n\nconst Context = createContext<AccountProvider>({} as AccountProvider)\n\nexport type AccountProvider = {\n  accounts: AccountsState\n}\n\n/**\n * Account Context Provider\n */\nconst AccountContextProvider = ({ children }: { children: ReactNode }) => {\n  const accounts = useSelector((state: RootState) => state.accounts)\n  const provider = {\n    accounts,\n  }\n  return <Context.Provider value={provider}>{children}</Context.Provider>\n}\nexport default AccountContextProvider\n\n/**\n * Account Context Consumer\n */\nconst AccountContextComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * Account HOC\n */\nexport const withAccount = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <AccountContextComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </AccountContextComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * Account Hook\n */\nexport const useAccount = () => {\n  return useContext<AccountProvider>(Context)\n}\n","export const sen = [\n  {\n    symbol: 'SEN',\n    name: 'Sen',\n    address: 'SENBBKVCM7homnf5RX9zqpf1GFe935hnbU4uVzY1Y6M',\n    decimals: 9,\n    chainId: 103,\n    extensions: {},\n    logoURI:\n      'https://raw.githubusercontent.com/DescartesNetwork/sen-static/master/logo.png',\n  },\n]\n\nconst supplementary = [\n  {\n    symbol: 'wBTC',\n    name: 'Wrapped Bitcoin',\n    address: '8jk4eJymMfNZV9mkRNxJEt2VJ3pRvdJvD5FE94GXGBPM',\n    decimals: 9,\n    chainId: 103,\n    extensions: {\n      coingeckoId: 'bitcoin',\n    },\n    logoURI: 'https://assets.coingecko.com/coins/images/1/large/bitcoin.png',\n  },\n  {\n    symbol: 'wETH',\n    name: 'Ethereum',\n    address: '27hdcZv7RtuMp75vupThR3T4KLsL61t476eosMdoec4c',\n    decimals: 9,\n    chainId: 103,\n    extensions: {\n      coingeckoId: 'ethereum',\n    },\n    logoURI: 'https://assets.coingecko.com/coins/images/279/large/ethereum.png',\n  },\n  {\n    symbol: 'SEN',\n    name: 'Sen',\n    address: '5YwUkPdXLoujGkZuo9B4LsLKj3hdkDcfP4derpspifSJ',\n    decimals: 9,\n    chainId: 103,\n    extensions: {\n      coingeckoId: 'dai',\n    },\n    logoURI:\n      'https://raw.githubusercontent.com/DescartesNetwork/sen-static/master/logo.png',\n  },\n  {\n    symbol: 'UNI',\n    name: 'Uniswap',\n    address: 'FVZFSXu3yn17YdcxLD72TFDUqkdE5xZvcW18EUpRQEbe',\n    decimals: 9,\n    chainId: 103,\n    extensions: {\n      coingeckoId: 'uniswap',\n    },\n    logoURI:\n      'https://assets.coingecko.com/coins/images/12504/large/uniswap-uni.png',\n  },\n  {\n    symbol: 'CAKE',\n    name: 'PancakeSwap',\n    address: '2z6Ci38Cx6PyL3tFrT95vbEeB3izqpoLdxxBkJk2euyj',\n    decimals: 9,\n    chainId: 103,\n    extensions: {\n      coingeckoId: 'pancakeswap-token',\n    },\n    logoURI:\n      'https://assets.coingecko.com/coins/images/12632/large/IMG_0440.PNG',\n  },\n]\n\nexport default supplementary\n","import { Document } from 'flexsearch'\nimport { TokenListProvider, TokenInfo } from '@solana/spl-token-registry'\n\nimport configs from 'configs'\nimport supplementary, { sen } from './supplementary'\n\nconst {\n  sol: { chainId, cluster },\n} = configs\nconst DELIMITER = /[\\W_]+/g\nconst PRESET = {\n  tokenize: 'full',\n  context: true,\n  minlength: 3,\n}\nconst DOCUMENT = {\n  document: {\n    id: 'address',\n    index: [\n      { field: 'symbol', ...PRESET },\n      { field: 'name', ...PRESET },\n    ],\n  },\n}\n\nclass TokenProvider {\n  private tokenList: TokenInfo[]\n  private engine: typeof Document | undefined\n  readonly chainId: typeof chainId\n  readonly cluster: typeof cluster\n\n  constructor() {\n    this.tokenList = []\n    this.engine = undefined\n    this.chainId = chainId\n    this.cluster = cluster\n    // Init\n    this._init()\n  }\n\n  private _init = async (): Promise<TokenInfo[]> => {\n    if (this.tokenList.length) return this.tokenList\n    const tokenList = await (await new TokenListProvider().resolve())\n      .filterByChainId(this.chainId)\n      .getList()\n    if (this.cluster === 'devnet')\n      this.tokenList = tokenList.concat(supplementary)\n    else this.tokenList = tokenList.concat(sen)\n    return this.tokenList\n  }\n\n  private _engine = async () => {\n    if (this.engine) return this.engine\n    const tl = await this._init()\n    this.engine = new Document(DOCUMENT)\n    tl.forEach(({ address, ...doc }) => this.engine.add(address, doc))\n    return this.engine\n  }\n\n  all = async (): Promise<TokenInfo[]> => {\n    return await this._init()\n  }\n\n  findByAddress = async (addr: string): Promise<TokenInfo | undefined> => {\n    const tl = await this._init()\n    return tl.find(({ address }) => address === addr)\n  }\n\n  find = async (keyword: string, limit?: 10): Promise<TokenInfo[]> => {\n    const tl = await this._init()\n    const engine = await this._engine()\n    let tokens: TokenInfo[] = []\n    keyword.split(DELIMITER).forEach((key) => {\n      const raw: Array<{ result: string[] }> = engine.search(key, limit)\n      return raw.forEach(({ result }) => {\n        return result.forEach((id: string) => {\n          if (tokens.findIndex(({ address }) => address === id) < 0) {\n            const token = tl.find(({ address }) => address === id)\n            if (token) tokens.push(token)\n          }\n        })\n      })\n    })\n    return tokens\n  }\n}\n\nexport default TokenProvider\n","import {\n  createContext,\n  useContext,\n  Children,\n  cloneElement,\n  Component,\n  forwardRef,\n  useCallback,\n  ReactNode,\n} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { RootState, RootDispatch } from 'store'\nimport { getMint as _getMint, State as MintState } from 'store/mints.reducer'\nimport TokenProvider from 'helpers/tokenProvider'\n\nconst tokenProvider = new TokenProvider()\nconst Context = createContext<MintProvider>({} as MintProvider)\n\nexport type MintProvider = {\n  mints: MintState\n  getMint: (...agrs: Parameters<typeof _getMint>) => Promise<MintState>\n  tokenProvider: TokenProvider\n}\n\n/**\n * Mint Context Provider\n */\nconst MintContextProvider = ({ children }: { children: ReactNode }) => {\n  const dispatch = useDispatch<RootDispatch>()\n  const mints = useSelector((state: RootState) => state.mints)\n  const getMint = useCallback(\n    async (...agrs: Parameters<typeof _getMint>) =>\n      await dispatch(_getMint(...agrs)).unwrap(),\n    [dispatch],\n  )\n  const provider = {\n    mints,\n    getMint,\n    tokenProvider,\n  }\n  // Context provider\n  return <Context.Provider value={provider}>{children}</Context.Provider>\n}\nexport default MintContextProvider\n\n/**\n * Mint Context Consumer\n */\nconst MintContextComsumer = ({ children }: { children: JSX.Element }) => {\n  return (\n    <Context.Consumer>\n      {(value) =>\n        Children.map(children, (child) => cloneElement(child, { ...value }))\n      }\n    </Context.Consumer>\n  )\n}\n\n/**\n * Mint HOC\n */\nexport const withMint = (WrappedComponent: typeof Component) => {\n  class HOC extends Component<any, any> {\n    render() {\n      const { forwardedRef, ...rest } = this.props\n      return (\n        <MintContextComsumer>\n          <WrappedComponent ref={forwardedRef} {...rest} />\n        </MintContextComsumer>\n      )\n    }\n  }\n  return forwardRef<HTMLElement, any>((props, ref) => (\n    <HOC {...props} ref={ref} />\n  ))\n}\n\n/**\n * Mint Hook\n */\nexport const useMint = () => {\n  return useContext<MintProvider>(Context)\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account, MintData } from '@senswap/sen-js'\n\n/**\n * Interface & Utility\n */\n\nexport type State = Record<string, MintData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'mints'\nconst initialState: State = {}\n\n/**\n * Actions\n */\n\nexport const getMint = createAsyncThunk<\n  State,\n  { address: string; force: boolean },\n  { state: any }\n>(`${NAME}/getMint`, async ({ address, force }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid mint address')\n  if (!force) {\n    const {\n      accounts: { [address]: data },\n    } = getState()\n    if (data) return { [address]: data }\n  }\n  const { splt } = window.senos\n  const raw = await splt.getMintData(address)\n  return { [address]: raw }\n})\n\nexport const upsetMint = createAsyncThunk<\n  State,\n  { address: string; data: MintData },\n  { state: any }\n>(`${NAME}/upsetMint`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteMint = createAsyncThunk(\n  `${NAME}/deleteMint`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getMint.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetMint.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteMint.fulfilled,\n        (state, { payload }) => void delete state[payload.address],\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { notification } from 'antd'\n\nimport { isTouchable } from 'helpers/util'\n\n/**\n * Interface & Utility\n */\n\nexport type Infix = 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'\n\nexport type Notification = {\n  type: 'error' | 'warning' | 'success' | 'info'\n  description: string\n  onClick?: () => void\n}\n\nexport type State = {\n  width: number\n  infix: Infix\n  touchable: boolean\n}\n\nconst getInfix = (): Infix => {\n  const width = window.innerWidth\n  if (width < 576) return 'xs'\n  if (width < 768) return 'sm'\n  if (width < 992) return 'md'\n  if (width < 1200) return 'lg'\n  if (width < 1400) return 'xl'\n  return 'xxl'\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'ui'\nconst initialState: State = {\n  width: window.innerWidth,\n  infix: getInfix(),\n  touchable: isTouchable(),\n}\n\n/**\n * Actions\n */\n\nexport const resize = createAsyncThunk(`${NAME}/resize`, async () => {\n  const width = window.innerWidth\n  const infix = getInfix()\n  return { width, infix }\n})\n\nexport const notify = createAsyncThunk(\n  `${NAME}/notify`,\n  async ({ type, description, onClick }: Notification) => {\n    if (!type) throw new Error('Notification type is not provided')\n    if (!description) throw new Error('Description is not provided')\n    // Parse icon\n    let icon = (\n      <ion-icon name=\"information-circle\" style={{ color: '#37CDFA' }} />\n    )\n    if (type === 'error')\n      icon = <ion-icon name=\"alert-circle\" style={{ color: '#F2323F' }} />\n    if (type === 'warning')\n      icon = <ion-icon name=\"warning\" style={{ color: '#FCB017' }} />\n    if (type === 'success')\n      icon = <ion-icon name=\"checkmark-circle\" style={{ color: '#3DBA4E' }} />\n    notification[type]({\n      message: type.toUpperCase(),\n      description,\n      onClick,\n      closeIcon: <ion-icon name=\"close-outline\" />,\n      icon,\n      style: { cursor: 'pointer' },\n    })\n    return {}\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        resize.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        notify.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","export const isTouchable = () => {\n  return 'ontouchstart' in window || navigator.maxTouchPoints > 0\n}\n\nexport const asyncWait = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nexport const openNewTab = (href: string) => {\n  return window.open(href, '_blank')\n}\n"],"names":["shared","appId","process","url","configs","development","staging","production","env","basics","sol","SOLVARS","spltAddress","splataAddress","node","chainId","cluster","senAddress","swapAddress","taxmanAddress","Context","createContext","UIComsumer","children","Consumer","value","Children","child","cloneElement","withUI","WrappedComponent","HOC","this","props","forwardedRef","rest","ref","Component","forwardRef","useUI","useContext","PoolContextComsumer","withPool","usePool","WalletContextComsumer","withWallet","useWallet","AccountContextComsumer","withAccount","useAccount","sen","symbol","name","address","decimals","extensions","logoURI","coingeckoId","DELIMITER","PRESET","tokenize","context","minlength","DOCUMENT","document","id","index","field","tokenList","engine","_init","length","TokenListProvider","resolve","filterByChainId","getList","concat","supplementary","_engine","tl","Document","forEach","doc","add","all","findByAddress","addr","find","keyword","limit","tokens","split","key","search","result","findIndex","token","push","undefined","TokenProvider","MintContextComsumer","withMint","useMint","NAME","getMint","createAsyncThunk","force","getState","account","Error","data","accounts","splt","window","senos","getMintData","raw","upsetMint","deleteMint","slice","createSlice","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","payload","Object","assign","getInfix","width","innerWidth","infix","touchable","navigator","maxTouchPoints","resize","notify","type","description","onClick","icon","style","color","notification","message","toUpperCase","closeIcon","cursor"],"sourceRoot":""}