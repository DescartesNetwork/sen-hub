{"version":3,"file":"static/js/399.95d45f03.chunk.js","mappings":"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","sources":["os/components/privateRoute.tsx","shared/ionicon.tsx","shared/storage.ts","shared/runtime.ts","os/configs/sol.config.ts","os/configs/index.ts","os/store/wallet.reducer.ts","shared/session.ts","os/view/header/wallet/lib/baseWallet.ts","os/view/header/wallet/lib/secretkeyWallet.ts","os/view/header/wallet/lib/keystoreWallet.ts","os/view/header/wallet/lib/coin98Wallet.ts","os/view/header/wallet/lib/phantomWallet.ts","os/view/header/wallet/lib/solletWallet.ts","os/view/header/wallet/lib/slopeWallet.ts","os/view/header/wallet/login/coin98/index.tsx","os/view/header/wallet/login/phantom/index.tsx","os/view/header/wallet/login/sollet/index.tsx","os/view/header/wallet/login/keystore/newKeystore.tsx","os/view/header/wallet/login/keystore/index.tsx","os/view/header/wallet/login/secretKey/index.tsx","os/static/images/slope.svg","os/view/header/wallet/login/slope/index.tsx","os/view/header/wallet/login/index.tsx","os/view/header/wallet/index.tsx","os/components/brand.tsx","shared/util.ts","os/view/header/actionCenter/applications/walletIntro.tsx","os/components/errorBoundary.tsx","os/components/appLoader.tsx","app/configs/manifest.config.ts","senhub.register.ts","app/configs/index.ts","app/configs/sol.config.ts","os/components/appIcon.tsx","os/view/header/actionCenter/applications/widgetLayout/droppablePage.tsx","os/view/header/actionCenter/applications/widgetLayout/draggableIcon.tsx","os/store/ui.reducer.ts","shared/pdb/ipfs.ts","os/view/header/actionCenter/settings/network/index.tsx","os/view/market/search/index.tsx","shared/pdb/index.ts","os/store/page.reducer.ts","os/view/header/actionCenter/applications/widgetLayout/draggableAction.tsx","os/view/header/actionCenter/applications/widgetLayout/index.tsx","os/view/header/actionCenter/applications/index.tsx","os/store/flags.reducer.ts","os/view/header/actionCenter/settings/mode.tsx","os/view/header/actionCenter/settings/network/netSwitch.tsx","os/view/header/actionCenter/settings/sync/index.tsx","os/view/header/actionCenter/settings/index.tsx","os/view/header/actionCenter/index.tsx","os/view/header/contextMenu/more.tsx","os/view/header/contextMenu/index.tsx","os/view/header/index.tsx","os/view/welcome/index.tsx","os/view/dashboard/index.tsx","os/view/page/index.tsx","os/view/market/search/engine.ts","os/view/market/index.tsx","os/components/appReadme.tsx","os/components/appPanel.tsx","os/view/market/appViewer/heroPanel.tsx","os/view/market/appViewer/index.tsx","os/view/watcher/ui.watcher.tsx","os/view/watcher/wallet.watcher.ts","os/store/accounts.reducer.ts","os/view/watcher/account.watcher.tsx","os/store/pools.reducer.ts","os/view/watcher/pool.watcher.tsx","os/view/watcher/index.tsx","os/view/index.tsx","shared/devTools.ts","os/store/mints.reducer.ts","os/store/index.ts","reportWebVitals.ts","bootstrap.tsx"],"sourcesContent":["import { ComponentProps, ElementType, useCallback } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Route, Redirect } from 'react-router-dom'\nimport { account } from '@senswap/sen-js'\n\nimport { RootState } from 'os/store'\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}: {\n  component: ElementType\n} & ComponentProps<typeof Route>) => {\n  const { address: walletAddress } = useSelector(\n    (state: RootState) => state.wallet,\n  )\n\n  const render = useCallback(\n    (props) => {\n      const pathname = encodeURI(\n        window.location.href.replace(window.location.origin, ''),\n      )\n      if (!account.isAddress(walletAddress))\n        return <Redirect to={'/welcome?redirect=' + pathname} />\n      return <Component {...props} />\n    },\n    [walletAddress, Component],\n  )\n\n  return <Route {...rest} render={render} />\n}\n\nexport default PrivateRoute\n","import { forwardRef } from 'react'\n\nconst IonIcon = forwardRef<\n  HTMLElement,\n  { name: string; className?: string } & any\n>(({ name, className, ...props }, ref) => {\n  const cln = className ? 'anticon ' + className : 'anticon'\n  return (\n    <span className={cln} {...props}>\n      <ion-icon ref={ref} name={name} />\n    </span>\n  )\n})\n\nexport default IonIcon\n","const KEY = 'sentre'\nconst driver = window.localStorage\n\nconst convert = (value: string | null) => {\n  if (!value) return null\n  try {\n    return JSON.parse(value)\n  } catch (e) {\n    return null\n  }\n}\n\nconst storage = {\n  set: (key: string, value: any) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') data = {}\n    data[key] = value\n    driver.setItem(KEY, JSON.stringify(data))\n  },\n  get: (key: string) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') return null\n    return data[key]\n  },\n  clear: (key: string) => {\n    storage.set(key, null)\n  },\n}\n\nexport default storage\n","import storage from './storage'\n\n/**\n * Environment\n */\nconst getEnv = () => {\n  switch (process.env.REACT_APP_ENV) {\n    case 'development':\n      return 'development'\n    case 'staging':\n      return 'staging'\n    case 'production':\n      return 'production'\n    default:\n      return 'development'\n  }\n}\nexport type Env = 'development' | 'staging' | 'production'\nexport const env: Env = getEnv()\n\n/**\n * Network\n */\nconst getNetwork = () => {\n  switch (storage.get('network')) {\n    case 'devnet':\n      return 'devnet'\n    case 'testnet':\n      return 'testnet'\n    case 'mainnet':\n      return 'mainnet'\n    default:\n      return 'mainnet'\n  }\n}\nexport type Net = 'devnet' | 'testnet' | 'mainnet'\nexport const net: Net = getNetwork()\n\nexport const onSwitchNetwork = (value: Net) => {\n  storage.set('network', value)\n  return window.location.reload()\n}\n","import { Net } from 'shared/runtime'\n\nconst SOLVARS = {\n  spltAddress: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n  splataAddress: 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n}\n\n/**\n * Contructor\n */\ntype Conf = {\n  node: string\n  chainId: 101 | 102 | 103\n  senAddress: string\n  swapAddress: string\n  taxmanAddress: string\n} & typeof SOLVARS\n\nconst conf: Record<Net, Conf> = {\n  /**\n   * Development configurations\n   */\n  devnet: {\n    ...SOLVARS,\n    node: 'https://api.devnet.solana.com',\n    chainId: 103,\n    senAddress: '5YwUkPdXLoujGkZuo9B4LsLKj3hdkDcfP4derpspifSJ',\n    swapAddress: '4erFSLP7oBFSVC1t35jdxmbfxEhYCKfoM6XdG2BLR3UF',\n    taxmanAddress: '8UaZw2jDhJzv5V53569JbCd3bD4BnyCfBH3sjwgajGS9',\n  },\n\n  /**\n   * Staging configurations\n   */\n  testnet: {\n    ...SOLVARS,\n    node: 'https://api.testnet.solana.com',\n    chainId: 102,\n    senAddress: '',\n    swapAddress: '',\n    taxmanAddress: '',\n  },\n\n  /**\n   * Production configurations\n   */\n  mainnet: {\n    ...SOLVARS,\n    node: 'https://api.mainnet-beta.solana.com',\n    chainId: 101,\n    senAddress: 'SENBBKVCM7homnf5RX9zqpf1GFe935hnbU4uVzY1Y6M',\n    swapAddress: 'SSW7ooZ1EbEognq5GosbygA3uWW1Hq1NsFq6TsftCFV',\n    taxmanAddress: '9doo2HZQEmh2NgfT3Yx12M89aoBheycYqH1eaR5gKb3e',\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { net } from 'shared/runtime'\nimport sol from './sol.config'\n\nconst configs = {\n  sol: sol[net],\n}\n\n/**\n * Module exports\n */\nexport default configs\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { Lamports, SPLT, Swap } from '@senswap/sen-js'\n\nimport configs from 'os/configs'\n\n/**\n * Interface & Utility\n */\n\nexport type State = {\n  visible: boolean\n  address: string\n  lamports: bigint\n}\n\nconst initializeWindowSenOs = async (wallet: any) => {\n  const {\n    sol: { node, spltAddress, splataAddress, swapAddress },\n  } = configs\n  window.sentre = {\n    wallet: wallet,\n    lamports: new Lamports(node),\n    splt: new SPLT(spltAddress, splataAddress, node),\n    swap: new Swap(swapAddress, spltAddress, splataAddress, node),\n  }\n}\n\nconst destroyWindowSenOs = async () => {\n  if (window.sentre?.wallet) window.sentre.wallet.disconnect()\n  await initializeWindowSenOs(null)\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'wallet'\nconst initialState: State = {\n  visible: false,\n  address: '',\n  lamports: BigInt(0),\n}\n\n/**\n * Actions\n */\n\nexport const openWallet = createAsyncThunk(`${NAME}/openWallet`, async () => {\n  return { visible: true }\n})\n\nexport const closeWallet = createAsyncThunk(`${NAME}/closeWallet`, async () => {\n  return { visible: false }\n})\n\nexport const connectWallet = createAsyncThunk(\n  `${NAME}/connectWallet`,\n  async (wallet: any) => {\n    if (!wallet) throw new Error('Invalid wallet instance')\n    await initializeWindowSenOs(wallet)\n    const address = await wallet.getAddress()\n    const lamports = await window.sentre.lamports.getLamports(address)\n    return { address, lamports: BigInt(lamports), visible: false }\n  },\n)\n\nexport const updateWallet = createAsyncThunk(\n  `${NAME}/updateWallet`,\n  async ({ lamports }: Partial<State>) => {\n    return { lamports }\n  },\n)\n\nexport const disconnectWallet = createAsyncThunk(\n  `${NAME}/disconnectWallet`,\n  async () => {\n    await destroyWindowSenOs()\n    window.location.reload() // Reset all redux store\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        openWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        closeWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        connectWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        updateWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        disconnectWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","const KEY = 'sentre'\nconst driver = window.sessionStorage\n\nconst convert = (value: string | null) => {\n  try {\n    if (!value) return null\n    return JSON.parse(value)\n  } catch (e) {\n    return false\n  }\n}\n\nconst session = {\n  set: (key: string, value: any) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') data = {}\n    data[key] = value\n    driver.setItem(KEY, JSON.stringify(data))\n  },\n\n  get: (key: string) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') return null\n    return data[key]\n  },\n\n  clear: (key: string) => {\n    session.set(key, null)\n  },\n}\n\nexport default session\n","import { Transaction } from '@solana/web3.js'\nimport {\n  WalletInterface,\n  Provider,\n  Signature,\n  SignedMessage,\n} from '@senswap/sen-js'\n\nimport session from 'shared/session'\n\nclass BaseWallet implements WalletInterface {\n  readonly walletType: string\n\n  constructor(walletType: string) {\n    this.walletType = walletType\n    session.set('WalletType', this.walletType)\n  }\n\n  getProvider = async (): Promise<Provider> => {\n    throw new Error('Wallet is not connected')\n  }\n\n  getAddress = async (): Promise<string> => {\n    throw new Error('Wallet is not connected')\n  }\n\n  signTransaction = async (transaction: Transaction): Promise<Transaction> => {\n    const { signature, publicKey } = await this.rawSignTransaction(transaction)\n    transaction.addSignature(publicKey, signature)\n    return transaction\n  }\n\n  rawSignTransaction = async (transaction: Transaction): Promise<Signature> => {\n    throw new Error('Wallet is not connected')\n  }\n\n  signMessage = async (message: string): Promise<SignedMessage> => {\n    throw new Error('Wallet is not connected')\n  }\n\n  verifySignature = async (\n    signature: string,\n    message: string,\n    address?: string,\n  ): Promise<boolean> => {\n    throw new Error('Wallet is not connected')\n  }\n\n  disconnect = async (): Promise<void> => {\n    session.clear('WalletType')\n    const provider = await this.getProvider()\n    provider.disconnect()\n  }\n}\n\nexport default BaseWallet\n","import { Transaction, Keypair } from '@solana/web3.js'\nimport * as nacl from 'tweetnacl'\nimport { account, Provider, Signature } from '@senswap/sen-js'\n\nimport BaseWallet from './baseWallet'\nimport session from 'shared/session'\n\ntype ExpanedProvider = Provider & { keypair: Keypair }\n\nclass SecretKeyWallet extends BaseWallet {\n  constructor(secretKey: string) {\n    super('SecretKey')\n\n    this._setSecretKey(secretKey)\n  }\n\n  private _setSecretKey = (secretKey: string): void => {\n    if (!secretKey) throw new Error('Invalid secret key')\n    session.set('SecretKey', secretKey)\n  }\n\n  getProvider = async (): Promise<ExpanedProvider> => {\n    const secretKey = session.get('SecretKey')\n    const keypair = account.fromSecretKey(secretKey)\n    if (!keypair) throw new Error('Cannot get the keystore-based provider')\n    const provider = {\n      keypair,\n      disconnect: () => session.clear('SecretKey'),\n    }\n    return provider\n  }\n\n  getAddress = async () => {\n    const { keypair } = await this.getProvider()\n    return keypair.publicKey.toBase58()\n  }\n\n  rawSignTransaction = async (transaction: Transaction) => {\n    const confirmed = window.confirm('Please confirm to sign the traction!')\n    if (!confirmed) throw new Error('User rejects to sign the transaction')\n    const { keypair } = await this.getProvider()\n    const signData = transaction.serializeMessage()\n    const publicKey = keypair.publicKey\n    const signature = nacl.sign.detached(signData, keypair.secretKey)\n    return { publicKey, signature } as Signature\n  }\n\n  signMessage = async (message: string) => {\n    if (!message) throw new Error('Message must be a non-empty string')\n    const confirmed = window.confirm(\n      `Please confirm to sign the message! Message: ${message}`,\n    )\n    if (!confirmed) throw new Error('User rejects to sign the message')\n    const { keypair } = await this.getProvider()\n    const secretKey = Buffer.from(keypair.secretKey).toString('hex')\n    const data = account.signMessage(message, secretKey)\n    return { ...data }\n  }\n\n  verifySignature = async (\n    signature: string,\n    message: string,\n    address?: string,\n  ) => {\n    address = address || (await this.getAddress())\n    const valid = account.verifySignature(address, signature, message)\n    return valid as boolean\n  }\n}\n\nexport default SecretKeyWallet\n","import { Transaction, Keypair } from '@solana/web3.js'\nimport * as nacl from 'tweetnacl'\nimport { account, Keystore, Provider, Signature } from '@senswap/sen-js'\n\nimport BaseWallet from './baseWallet'\nimport session from 'shared/session'\n\ntype ExpanedProvider = Provider & { keypair: Keypair }\n\nclass KeystoreWallet extends BaseWallet {\n  constructor(keystore: Keystore, password: string) {\n    super('SecretKey')\n\n    this._setSecretKey(keystore, password)\n  }\n\n  private _setSecretKey = (keystore: Keystore, password: string): void => {\n    const keypair = account.fromKeystore(keystore, password)\n    if (!keypair) throw new Error('Invalid ketstore or password')\n    const secretKey = Buffer.from(keypair.secretKey).toString('hex')\n    session.set('SecretKey', secretKey)\n  }\n\n  getProvider = async (): Promise<ExpanedProvider> => {\n    const secretKey = session.get('SecretKey')\n    const keypair = account.fromSecretKey(secretKey)\n    if (!keypair) throw new Error('Cannot get the keystore-based provider')\n    const provider = {\n      keypair,\n      disconnect: () => session.clear('SecretKey'),\n    }\n    return provider\n  }\n\n  getAddress = async () => {\n    const { keypair } = await this.getProvider()\n    return keypair.publicKey.toBase58()\n  }\n\n  rawSignTransaction = async (transaction: Transaction) => {\n    const confirmed = window.confirm('Please confirm to sign the traction!')\n    if (!confirmed) throw new Error('User rejects to sign the transaction')\n    const { keypair } = await this.getProvider()\n    const signData = transaction.serializeMessage()\n    const publicKey = keypair.publicKey\n    const signature = nacl.sign.detached(signData, keypair.secretKey)\n    return { publicKey, signature } as Signature\n  }\n\n  signMessage = async (message: string) => {\n    if (!message) throw new Error('Message must be a non-empty string')\n    const confirmed = window.confirm(\n      `Please confirm to sign the message! Message: ${message}`,\n    )\n    if (!confirmed) throw new Error('User rejects to sign the message')\n    const { keypair } = await this.getProvider()\n    const secretKey = Buffer.from(keypair.secretKey).toString('hex')\n    const data = account.signMessage(message, secretKey)\n    return { ...data }\n  }\n\n  verifySignature = async (\n    signature: string,\n    message: string,\n    address?: string,\n  ) => {\n    address = address || (await this.getAddress())\n    const valid = account.verifySignature(address, signature, message)\n    return valid as boolean\n  }\n}\n\nexport default KeystoreWallet\n","import { Transaction } from '@solana/web3.js'\nimport { account, Signature, SignedMessage } from '@senswap/sen-js'\nimport { decode } from 'bs58'\n\nimport BaseWallet from './baseWallet'\n\n\nclass Coin98Wallet extends BaseWallet {\n  constructor() {\n    super('Coin98')\n  }\n\n  getProvider = async () => {\n    const { sol } = window?.coin98 || {}\n    if (!sol) throw new Error('Wallet is not connected')\n    return sol\n  }\n\n  getAddress = async () => {\n    const provider = await this.getProvider()\n    const [address] = (await provider.request({ method: 'sol_accounts' })) || []\n    if (!account.isAddress(address))\n      throw new Error('There is no Solana account')\n    return address\n  }\n\n  rawSignTransaction = async (transaction: Transaction) => {\n    const provider = await this.getProvider()\n    const address = await this.getAddress()\n    const publicKey = account.fromAddress(address)\n    transaction.feePayer = publicKey\n    const { signature: sig } = await provider.request({\n      method: 'sol_sign',\n      params: [transaction],\n    })\n    const signature = decode(sig)\n    return { publicKey, signature } as Signature\n  }\n\n  signMessage = async (message: string) => {\n    if (!message) throw new Error('Message must be a non-empty string')\n    const provider = await this.getProvider()\n    const data = await provider.request({\n      method: 'sol_sign',\n      params: [message],\n    })\n    return data as SignedMessage\n  }\n\n  verifySignature = async (\n    signature: string,\n    message: string,\n    address?: string,\n  ) => {\n    address = address || (await this.getAddress())\n    const valid = await account.verifySignature(address, signature, message)\n    return valid as boolean\n  }\n}\n\nexport default Coin98Wallet\n","import { Transaction } from '@solana/web3.js'\nimport * as nacl from 'tweetnacl'\nimport { account, Signature, SignedMessage } from '@senswap/sen-js'\n\nimport BaseWallet from './baseWallet'\n\nclass PhantomWallet extends BaseWallet {\n  constructor() {\n    super('Phantom')\n  }\n\n  getProvider = async () => {\n    const { solana } = window\n    if (!solana?.isPhantom) throw new Error('Wallet is not connected')\n    if (solana.isConnected) return solana\n    solana.connect()\n    return await new Promise((resolve) =>\n      solana.on('connect', () => resolve(solana)),\n    )\n  }\n\n  getAddress = async () => {\n    const provider = await this.getProvider()\n    const address = provider.publicKey.toString()\n    if (!account.isAddress(address))\n      throw new Error('There is no Solana account')\n    return address\n  }\n\n  rawSignTransaction = async (transaction: Transaction) => {\n    const provider = await this.getProvider()\n    const address = await this.getAddress()\n    const publicKey = account.fromAddress(address)\n    transaction.feePayer = publicKey\n    const { signature } = await provider.signTransaction(transaction)\n    return { publicKey, signature } as Signature\n  }\n\n  signMessage = async (message: string) => {\n    if (!message) throw new Error('Message must be a non-empty string')\n    const provider = await this.getProvider()\n    const address = await this.getAddress()\n    const encodedMsg = new TextEncoder().encode(message)\n    const { signature: sig } = await provider.signMessage(encodedMsg, 'utf8')\n    const signature = Buffer.from(sig).toString('hex')\n    const data = { address, signature, message }\n    return data as SignedMessage\n  }\n\n  verifySignature = async (\n    signature: string,\n    message: string,\n    address?: string,\n  ) => {\n    address = address || (await this.getAddress())\n    const publicKey = account.fromAddress(address)\n    const bufSig = Buffer.from(signature, 'hex')\n    const encodedMsg = new TextEncoder().encode(message)\n    const valid = nacl.sign.detached.verify(\n      encodedMsg,\n      bufSig,\n      publicKey.toBuffer(),\n    )\n    return valid\n  }\n}\n\nexport default PhantomWallet\n","import { Transaction } from '@solana/web3.js'\nimport * as nacl from 'tweetnacl'\nimport { account, Provider, Signature, SignedMessage } from '@senswap/sen-js'\nimport WalletAdapter from '@project-serum/sol-wallet-adapter'\n\nimport BaseWallet from './baseWallet'\nimport configs from 'os/configs'\n\nconst PROVIDER_URL = 'https://www.sollet.io'\n\nclass SolletWallet extends BaseWallet {\n  private provider: WalletAdapter & Provider\n\n  constructor() {\n    super('Sollet')\n\n    const {\n      sol: { node },\n    } = configs\n    this.provider = new WalletAdapter(PROVIDER_URL, node)\n  }\n\n  getProvider = async () => {\n    if (!this.provider.connected) await this.provider.connect()\n    return this.provider\n  }\n\n  getAddress = async () => {\n    const provider = await this.getProvider()\n    if (!provider.publicKey) throw new Error('Cannot connect to Sollet')\n    return provider.publicKey.toBase58()\n  }\n\n  rawSignTransaction = async (transaction: Transaction) => {\n    const provider = await this.getProvider()\n    const address = await this.getAddress()\n    const publicKey = account.fromAddress(address)\n    transaction.feePayer = publicKey\n    const { signature } = await provider.signTransaction(transaction)\n    return { publicKey, signature } as Signature\n  }\n\n  signMessage = async (message: string) => {\n    if (!message) throw new Error('Message must be a non-empty string')\n    const provider = await this.getProvider()\n    const address = await this.getAddress()\n    const encodedMsg = new TextEncoder().encode(message)\n    const { signature: sig } = await provider.sign(encodedMsg, 'utf8')\n    const signature = Buffer.from(sig).toString('hex')\n    const data = { address, signature, message }\n    return data as SignedMessage\n  }\n\n  verifySignature = async (\n    signature: string,\n    message: string,\n    address?: string,\n  ) => {\n    address = address || (await this.getAddress())\n    const publicKey = account.fromAddress(address)\n    const bufSig = Buffer.from(signature, 'hex')\n    const encodedMsg = new TextEncoder().encode(message)\n    const valid = nacl.sign.detached.verify(\n      encodedMsg,\n      bufSig,\n      publicKey.toBuffer(),\n    )\n    return valid\n  }\n}\n\nexport default SolletWallet\n","import { Transaction, PublicKey } from '@solana/web3.js'\nimport * as nacl from 'tweetnacl'\nimport { account, Signature } from '@senswap/sen-js'\nimport { decode, encode } from 'bs58'\n\nimport BaseWallet from './baseWallet'\n\nclass SlopeWallet extends BaseWallet {\n  private provider: any\n  constructor() {\n    super('Slope')\n    this.provider = null\n  }\n\n  getProvider = async () => {\n    const { Slope } = window || {}\n    if (!Slope) throw new Error('Cannot connect to Slope')\n    if (this.provider) return this.provider\n    this.provider = new Slope()\n    await this.provider.connect()\n    return this.provider\n  }\n\n  getAddress = async () => {\n    const provider = await this.getProvider()\n    const { data } = await provider.connect()\n    if (!data.publicKey) throw new Error('Wallet is not connected')\n    return data.publicKey\n  }\n\n  rawSignTransaction = async (transaction: Transaction) => {\n    const provider = await this.getProvider()\n    const message = encode(transaction.serializeMessage())\n    const { msg, data } = await provider.signTransaction(message)\n\n    if (!data.publicKey) throw new Error(msg)\n    const publicKey = new PublicKey(data.publicKey)\n    const signature = decode(data.signature)\n\n    return { publicKey, signature } as Signature\n  }\n\n  verifySignature = async (\n    signature: string,\n    message: string,\n    address?: string,\n  ) => {\n    const slopeAddress = address || (await this.getAddress())\n    const publicKey = account.fromAddress(slopeAddress)\n    const bufSig = Buffer.from(signature, 'hex')\n    const encodedMsg = new TextEncoder().encode(message)\n    const valid = nacl.sign.detached.verify(\n      encodedMsg,\n      bufSig,\n      publicKey.toBuffer(),\n    )\n    return valid\n  }\n}\n\nexport default SlopeWallet\n","import { useDispatch } from 'react-redux'\n\nimport { Row, Card, Col, Avatar } from 'antd'\n\nimport COIN98 from 'os/static/images/coin98.png'\nimport { RootDispatch } from 'os/store'\nimport { connectWallet } from 'os/store/wallet.reducer'\nimport { Coin98Wallet } from '../../lib'\n\nconst Coin98 = () => {\n  const dispatch = useDispatch<RootDispatch>()\n\n  const connect = async () => {\n    const { coin98 } = window\n    if (!coin98)\n      return window.notify({\n        type: 'warning',\n        description:\n          'Coin98 Wallet is not installed. If this is the first time you install Coin98 wallet, please restart your browser to complete the setup.',\n      })\n    const wallet = new Coin98Wallet()\n    try {\n      await dispatch(connectWallet(wallet)).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: (er as Error).message,\n      })\n    }\n  }\n\n  return (\n    <Card\n      onClick={connect}\n      style={{ cursor: 'pointer' }}\n      bordered={false}\n      hoverable\n    >\n      <Row gutter={[16, 16]} justify=\"center\">\n        <Col>\n          <Avatar size={64} shape=\"square\" src={COIN98} />\n        </Col>\n        <Col span={24}>\n          <p style={{ margin: 0, textAlign: 'center' }}>Coin98</p>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default Coin98\n","import { useDispatch } from 'react-redux'\n\nimport { Row, Card, Col, Avatar } from 'antd'\n\nimport PHANTOM from 'os/static/images/phantom.png'\nimport { RootDispatch } from 'os/store'\nimport { connectWallet } from 'os/store/wallet.reducer'\nimport { PhantomWallet } from '../../lib'\n\nconst Phantom = () => {\n  const dispatch = useDispatch<RootDispatch>()\n\n  const connect = async () => {\n    const { solana } = window\n    if (!solana?.isPhantom)\n      return window.notify({\n        type: 'warning',\n        description:\n          'Phantom Wallet is not installed. If this is the first time you install Phantom wallet, please restart your browser to complete the setup.',\n      })\n    const wallet = new PhantomWallet()\n    try {\n      await dispatch(connectWallet(wallet)).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: (er as Error).message,\n      })\n    }\n  }\n\n  return (\n    <Card\n      onClick={connect}\n      style={{ cursor: 'pointer' }}\n      bordered={false}\n      hoverable\n    >\n      <Row gutter={[16, 16]} justify=\"center\">\n        <Col>\n          <Avatar size={64} shape=\"square\" src={PHANTOM} />\n        </Col>\n        <Col span={24}>\n          <p style={{ margin: 0, textAlign: 'center' }}>Phantom</p>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default Phantom\n","import { useDispatch } from 'react-redux'\n\nimport { Row, Card, Col, Avatar } from 'antd'\n\nimport SOLLET from 'os/static/images/sollet.png'\nimport { RootDispatch } from 'os/store'\nimport { connectWallet } from 'os/store/wallet.reducer'\nimport { SolletWallet } from '../../lib'\n\nconst Sollet = () => {\n  const dispatch = useDispatch<RootDispatch>()\n\n  const connect = async () => {\n    const wallet = new SolletWallet()\n    try {\n      await dispatch(connectWallet(wallet)).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: (er as Error).message,\n      })\n    }\n  }\n\n  return (\n    <Card\n      onClick={connect}\n      style={{ cursor: 'pointer' }}\n      bordered={false}\n      hoverable\n    >\n      <Row gutter={[16, 16]} justify=\"center\">\n        <Col>\n          <Avatar size={64} shape=\"square\" src={SOLLET} />\n        </Col>\n        <Col span={24}>\n          <p style={{ margin: 0, textAlign: 'center' }}>Sollet</p>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default Sollet\n","import { ChangeEvent, useState, useEffect } from 'react'\nimport fileDownload from 'js-file-download'\nimport { keystore as ks, Keystore } from '@senswap/sen-js'\n\nimport { Row, Col, Button, Typography, Input, Modal } from 'antd'\nimport IonIcon from 'shared/ionicon'\n\nconst NewKeyStore = ({\n  visible = false,\n  onClose = () => {},\n}: {\n  visible: boolean\n  onClose: () => void\n}) => {\n  const [password, setPassword] = useState('')\n  const [keystore, setKeystore] = useState<Keystore | null>(null)\n\n  useEffect(() => {\n    setPassword('')\n    setKeystore(null)\n  }, [visible])\n  useEffect(() => {\n    setKeystore(ks.gen(password))\n  }, [password])\n\n  const onDownload = () => {\n    if (!keystore)\n      return window.notify({\n        type: 'error',\n        description: 'Cannot download a empty keystore',\n      })\n    fileDownload(\n      JSON.stringify(keystore),\n      `senwallet-keystore-${keystore.publicKey}.json`,\n    )\n    return onClose()\n  }\n\n  return (\n    <Modal\n      visible={visible}\n      onCancel={onClose}\n      closeIcon={<IonIcon name=\"close\" />}\n      footer={null}\n    >\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Typography.Title>New Keystore</Typography.Title>\n          <Typography.Text>\n            The password is used to encrypt your keystore. You will need this\n            password to unlock your keystore later.\n          </Typography.Text>\n        </Col>\n        <Col span={24}>\n          <Input.Password\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e: ChangeEvent<HTMLInputElement>) =>\n              setPassword(e.target.value || '')\n            }\n            iconRender={(visible) =>\n              visible ? <IonIcon name=\"eye-off\" /> : <IonIcon name=\"eye\" />\n            }\n          />\n        </Col>\n        <Col span={24}>\n          <Row gutter={[16, 16]} justify=\"end\">\n            <Col>\n              <Button\n                type=\"primary\"\n                icon={<IonIcon name=\"cloud-download\" />}\n                onClick={onDownload}\n                disabled={!keystore || !keystore.publicKey}\n              >\n                Download\n              </Button>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Modal>\n  )\n}\n\nexport default NewKeyStore\n","import { ChangeEvent, useRef, useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { Row, Col, Space, Button, Typography, Input } from 'antd'\nimport IonIcon from 'shared/ionicon'\nimport NewKeyStore from './newKeystore'\n\nimport { RootDispatch } from 'os/store'\nimport { connectWallet } from 'os/store/wallet.reducer'\nimport { KeystoreWallet } from '../../lib'\n\nconst KeyStore = () => {\n  const [password, setPassword] = useState('')\n  const [filename, setFilename] = useState('')\n  const [keystore, setKeystore] = useState(null)\n  const [visible, setVisible] = useState(false)\n\n  const refFile = useRef<HTMLInputElement>(null)\n  const dispatch = useDispatch<RootDispatch>()\n\n  const onKeystore = (e: ChangeEvent<HTMLInputElement>) => {\n    const [file]: any = e?.target?.files\n    if (file) {\n      const reader = new FileReader()\n      reader.readAsText(file)\n      reader.onloadend = () => {\n        setFilename(file.name)\n        setKeystore(JSON.parse(reader.result as string) || {})\n      }\n    }\n  }\n\n  const connect = async () => {\n    if (!keystore)\n      return window.notify({\n        type: 'warning',\n        description: 'Please upload your keystore',\n      })\n    if (!password)\n      return window.notify({\n        type: 'warning',\n        description: 'Please enter your password to unlock your wallet',\n      })\n    try {\n      const wallet = new KeystoreWallet(keystore as any, password)\n      await dispatch(connectWallet(wallet)).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: (er as Error).message,\n      })\n    }\n  }\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Space align=\"center\">\n          <IonIcon name=\"document-lock\" />\n          <Typography.Text>\n            {`Keystore ( `}\n            <Typography.Link\n              href=\"https://solflare.com\"\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              SolFlare\n            </Typography.Link>{' '}\n            {`compatible )`}\n          </Typography.Text>\n        </Space>\n      </Col>\n      <Col xs={{ span: 24 }} md={{ span: 12 }}>\n        <Input\n          placeholder=\"Filename\"\n          value={filename}\n          suffix={\n            <Button\n              type=\"text\"\n              icon={<IonIcon name=\"cloud-upload\" />}\n              style={{ marginRight: -8 }}\n              onClick={() => refFile.current?.click()}\n            >\n              Upload\n            </Button>\n          }\n          readOnly\n        />\n        <input\n          ref={refFile}\n          type=\"file\"\n          accept=\"application/json\"\n          onChange={onKeystore}\n          style={{ display: 'none' }}\n        />\n      </Col>\n      <Col xs={{ span: 24 }} md={{ span: 12 }}>\n        <Input\n          placeholder=\"Password\"\n          type=\"password\"\n          value={password}\n          onChange={(e: ChangeEvent<HTMLInputElement>) =>\n            setPassword(e.target.value || '')\n          }\n          suffix={\n            <Button\n              type=\"primary\"\n              onClick={connect}\n              icon={<IonIcon name=\"lock-open\" />}\n              style={{ marginRight: -8 }}\n            />\n          }\n        />\n      </Col>\n      <Col span={24} style={{ marginTop: -8 }}>\n        <Typography.Link onClick={() => setVisible(true)}>\n          <Space>\n            <IonIcon name=\"add-circle-outline\" />\n            <span>Create a keystore</span>\n          </Space>\n        </Typography.Link>\n      </Col>\n      <NewKeyStore visible={visible} onClose={() => setVisible(false)} />\n    </Row>\n  )\n}\n\nexport default KeyStore\n","import { ChangeEvent, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { account } from '@senswap/sen-js'\n\nimport { Row, Col, Typography, Input, Button, Space } from 'antd'\nimport IonIcon from 'shared/ionicon'\n\nimport { RootDispatch } from 'os/store'\nimport { connectWallet } from 'os/store/wallet.reducer'\nimport { SecretKeyWallet } from '../../lib'\n\nconst SecretKey = () => {\n  const [secretKey, setSecretKey] = useState('')\n  const dispatch = useDispatch<RootDispatch>()\n\n  const connect = async () => {\n    if (!secretKey)\n      return window.notify({\n        type: 'warning',\n        description: 'Please enter your secret key',\n      })\n    const wallet = new SecretKeyWallet(secretKey)\n    try {\n      await dispatch(connectWallet(wallet)).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: (er as Error).message,\n      })\n    }\n  }\n\n  const onGen = () => {\n    const acc = account.createAccount()\n    const secretKey = Buffer.from(acc.secretKey).toString('hex')\n    return setSecretKey(secretKey)\n  }\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Space align=\"center\">\n          <IonIcon name=\"key\" />\n          <Typography.Text>Secret Key</Typography.Text>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Input\n          placeholder=\"Secret Key\"\n          onChange={(e: ChangeEvent<HTMLInputElement>) =>\n            setSecretKey(e.target.value || '')\n          }\n          value={secretKey}\n          suffix={\n            <Button\n              type=\"primary\"\n              onClick={connect}\n              icon={<IonIcon name=\"lock-open\" />}\n              style={{ marginRight: -8 }}\n            />\n          }\n        />\n      </Col>\n      <Col span={24} style={{ marginTop: -8 }}>\n        <Typography.Link onClick={onGen}>\n          <Space>\n            <IonIcon name=\"add-circle-outline\" />\n            <span>Create a secret key</span>\n          </Space>\n        </Typography.Link>\n      </Col>\n    </Row>\n  )\n}\n\nexport default SecretKey\n","var _path, _path2, _path3, _path4, _path5, _path6;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSlope(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 100,\n    height: 100,\n    viewBox: \"0 0 100 100\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.1234 42.1235H26.3713V57.8756H42.1234V42.1235Z\",\n    fill: \"#8179F2\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M57.8744 42.1237L42.1223 57.8758V42.1237L57.8744 26.3717V42.1237Z\",\n    fill: \"#7269F0\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M57.8744 57.8756L42.1223 73.6277V57.8756L57.8744 42.1235V57.8756Z\",\n    fill: \"#B6B1FF\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M73.6287 42.1235H57.8766V57.8756H73.6287V42.1235Z\",\n    fill: \"#8179F2\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.1234 26.372L57.8755 10.6199V26.372L42.1234 42.1241H26.3713L42.1234 26.372Z\",\n    fill: \"#B6B1FF\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M57.8729 73.6281L42.1208 89.3802V73.6281L57.8729 57.876H73.625L57.8729 73.6281Z\",\n    fill: \"#7269F0\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSlope);\nexport default __webpack_public_path__ + \"static/media/slope.de08dadb3988dd770e2d0d58acf15a09.svg\";\nexport { ForwardRef as ReactComponent };","import { useDispatch } from 'react-redux'\n\nimport { Row, Card, Col, Avatar } from 'antd'\n\nimport SLOPE from 'os/static/images/slope.svg'\nimport { RootDispatch } from 'os/store'\nimport { connectWallet } from 'os/store/wallet.reducer'\nimport { SlopeWallet } from '../../lib'\n\nconst Slope = () => {\n  const dispatch = useDispatch<RootDispatch>()\n\n  const connect = async () => {\n    const { Slope } = window\n    if (!Slope)\n      return window.notify({\n        type: 'warning',\n        description:\n          'Slope Wallet is not installed. If this is the first time you install Slope wallet, please restart your browser to complete the setup.',\n      })\n    const wallet = new SlopeWallet()\n    try {\n      await dispatch(connectWallet(wallet)).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: (er as Error).message,\n      })\n    }\n  }\n\n  return (\n    <Card\n      onClick={connect}\n      style={{ cursor: 'pointer' }}\n      bordered={false}\n      hoverable\n    >\n      <Row gutter={[16, 16]} justify=\"center\">\n        <Col>\n          <Avatar size={64} shape=\"square\" src={SLOPE} />\n        </Col>\n        <Col span={24}>\n          <p style={{ margin: 0, textAlign: 'center' }}>Slope</p>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default Slope\n","import { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Row, Col, Modal, Tooltip, Switch, Divider, Typography } from 'antd'\nimport IonIcon from 'shared/ionicon'\nimport Coin98 from './coin98'\nimport Phantom from './phantom'\nimport Sollet from './sollet'\nimport Keystore from './keystore'\nimport SecretKey from './secretKey'\nimport Slope from './slope'\n\nimport { RootState, RootDispatch } from 'os/store'\nimport { closeWallet } from 'os/store/wallet.reducer'\n\nconst Login = () => {\n  const [advance, setAdvance] = useState(false)\n  const { visible } = useSelector((state: RootState) => state.wallet)\n  const dispatch = useDispatch<RootDispatch>()\n\n  return (\n    <Modal\n      visible={visible}\n      onCancel={() => dispatch(closeWallet())}\n      closeIcon={<IonIcon name=\"close\" />}\n      footer={null}\n    >\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Typography.Title level={5}>Wallet Connection</Typography.Title>\n        </Col>\n        <Col xs={{ span: 12 }} md={{ span: 8 }}>\n          <Coin98 />\n        </Col>\n        <Col xs={{ span: 12 }} md={{ span: 8 }}>\n          <Phantom />\n        </Col>\n        <Col xs={{ span: 12 }} md={{ span: 8 }}>\n          <Sollet />\n        </Col>\n        <Col xs={{ span: 12 }} md={{ span: 8 }}>\n          <Slope />\n        </Col>\n        <Col span={24}>\n          <Row gutter={[16, 16]} align=\"middle\">\n            <Col flex=\"auto\">\n              <Divider plain orientation=\"left\">\n                Other methods\n              </Divider>\n            </Col>\n            <Col>\n              <Tooltip title=\"Caution! These methods is not recommended due to lack of cryptographical protection. By switching the button, you agree that you will use this function at your own risk.\">\n                <Switch\n                  size=\"small\"\n                  checked={advance}\n                  onChange={setAdvance}\n                  checkedChildren={<IonIcon name=\"warning\" />}\n                  unCheckedChildren={<IonIcon name=\"help-circle\" />}\n                />\n              </Tooltip>\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          {advance ? (\n            <Row gutter={[16, 16]}>\n              <Col span={24}>\n                <Keystore />\n              </Col>\n              <Col span={24} style={{ height: 16 }} /> {/* Safe space */}\n              <Col span={24}>\n                <SecretKey />\n              </Col>\n            </Row>\n          ) : null}\n        </Col>\n      </Row>\n    </Modal>\n  )\n}\n\nexport default Login\n","import { Fragment, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\n\nimport { Button } from 'antd'\nimport IonIcon from 'shared/ionicon'\nimport Login from './login'\n\nimport session from 'shared/session'\nimport { RootDispatch, RootState } from 'os/store'\nimport {\n  connectWallet,\n  openWallet,\n  disconnectWallet,\n} from 'os/store/wallet.reducer'\nimport {\n  Coin98Wallet,\n  PhantomWallet,\n  SecretKeyWallet,\n  SolletWallet,\n  SlopeWallet,\n} from './lib'\n\nconst Wallet = () => {\n  const dispatch = useDispatch<RootDispatch>()\n  const { address } = useSelector((state: RootState) => state.wallet)\n\n  const reconnect = () => {\n    const walletType = session.get('WalletType')\n    if (walletType === 'SecretKey')\n      return new SecretKeyWallet(session.get('SecretKey'))\n    if (walletType === 'Keystore')\n      return new SecretKeyWallet(session.get('SecretKey'))\n    if (walletType === 'Coin98') return new Coin98Wallet()\n    if (walletType === 'Phantom') return new PhantomWallet()\n    if (walletType === 'Sollet') return new SolletWallet()\n    if (walletType === 'Slope') return new SlopeWallet()\n    return null\n  }\n\n  useEffect(() => {\n    const wallet = reconnect()\n    try {\n      if (wallet) dispatch(connectWallet(wallet)).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: (er as Error).message,\n      })\n    }\n  }, [dispatch])\n\n  if (!account.isAddress(address))\n    return (\n      <Fragment>\n        <Button\n          type=\"primary\"\n          icon={<IonIcon name=\"wallet-outline\" />}\n          onClick={() => dispatch(openWallet())}\n        >\n          Connect Wallet\n        </Button>\n        <Login />\n      </Fragment>\n    )\n\n  return (\n    <Button\n      type=\"text\"\n      icon={<IonIcon name=\"power-outline\" />}\n      onClick={() => dispatch(disconnectWallet())}\n      block\n    >\n      Disconnect\n    </Button>\n  )\n}\n\nexport default Wallet\n","import { CSSProperties } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport fullLogo from 'os/static/images/sen-full.png'\nimport liteLogo from 'os/static/images/sen-lite.png'\n\nconst Brand = ({\n  style,\n  lite = false,\n}: {\n  lite?: boolean\n  style: CSSProperties\n}) => {\n  const history = useHistory()\n\n  return (\n    <img\n      src={lite ? liteLogo : fullLogo}\n      style={style}\n      alt=\"logo\"\n      onClick={() => history.push('/')}\n    />\n  )\n}\n\nexport default Brand\n","import { account } from '@senswap/sen-js'\nimport { net } from 'shared/runtime'\n\nexport const isTouchable = () => {\n  return 'ontouchstart' in window || navigator.maxTouchPoints > 0\n}\n\nexport const asyncWait = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nexport const openNewTab = (href: string) => {\n  return window.open(href, '_blank')\n}\n\nexport const shortenAddress = (address: string, num = 4, delimiter = '...') => {\n  return (\n    address.substring(0, num) +\n    delimiter +\n    address.substring(address.length - num, address.length)\n  )\n}\n\nexport const explorer = (addressOrTxId: string): string => {\n  if (account.isAddress(addressOrTxId)) {\n    return `https://explorer.solana.com/address/${addressOrTxId}?cluster=${net}`\n  }\n  return `https://explorer.solana.com/tx/${addressOrTxId}?cluster=${net}`\n}\n","import { Fragment } from 'react'\nimport { useSelector } from 'react-redux'\nimport { account, utils } from '@senswap/sen-js'\nimport numbro from 'numbro'\n\nimport { Row, Col, Typography, Tooltip, Space, Card } from 'antd'\nimport IonIcon from 'shared/ionicon'\nimport Wallet from '../../wallet'\n\nimport { explorer, shortenAddress } from 'shared/util'\nimport { RootState } from 'os/store'\n\nconst WalletIntro = () => {\n  const { address, lamports } = useSelector((state: RootState) => state.wallet)\n\n  const balance = numbro(utils.undecimalize(lamports, 9)).format('0.[00]')\n  const explore = () => window.open(explorer(address), '_blank')\n\n  if (!account.isAddress(address)) return <Fragment />\n  return (\n    <Card bodyStyle={{ padding: 16 }} hoverable>\n      <Row gutter={[16, 16]} align=\"middle\">\n        <Col flex=\"auto\">\n          <Tooltip title={`${utils.undecimalize(lamports, 9)} SOL`}>\n            <Typography.Title level={3}>\n              {balance} <span style={{ color: '#03E1FF' }}>◎</span>\n            </Typography.Title>\n          </Tooltip>\n        </Col>\n        <Col>\n          <Typography.Title\n            level={5}\n            type=\"secondary\"\n            onClick={explore}\n            style={{ cursor: 'pointer' }}\n          >\n            <Space>\n              {shortenAddress(address, 3, '...')}\n              <IonIcon name=\"open-outline\" />\n            </Space>\n          </Typography.Title>\n        </Col>\n        <Col span={24}>\n          <Wallet />\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default WalletIntro\n","import { Component } from 'react'\n\nimport { Row, Col, Typography, Button } from 'antd'\n\ninterface Props {\n  remoteUrl: string\n}\n\ninterface State {\n  failed: boolean\n}\n\n/**\n * Error Boundary\n */\nclass ErrorBoundary extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      failed: false,\n    }\n  }\n\n  componentDidCatch(error: Error) {\n    return this.setState({ failed: Boolean(error) })\n  }\n\n  support = () => {\n    const { remoteUrl } = this.props\n    return window.open(\n      `mailto:hi@sentre.io?subject=${remoteUrl} has failed`,\n      '_blank',\n    )\n  }\n\n  render() {\n    const { failed } = this.state\n    const { remoteUrl, children } = this.props\n\n    if (failed || !children)\n      return (\n        <Row\n          gutter={[8, 8]}\n          style={{ height: '100%' }}\n          align=\"middle\"\n          justify=\"center\"\n        >\n          <Col span={24}>\n            <Typography.Title level={4} style={{ textAlign: 'center' }}>\n              {remoteUrl}\n            </Typography.Title>\n          </Col>\n          <Col span={24}>\n            <p style={{ textAlign: 'center' }}>\n              Oops! The application can't load properly\n            </p>\n          </Col>\n          <Col span={24}>\n            <Button type=\"primary\" onClick={this.support} block>\n              Support\n            </Button>\n          </Col>\n        </Row>\n      )\n    return children\n  }\n}\n\nexport default ErrorBoundary\n","import { Suspense, forwardRef, cloneElement } from 'react'\nimport { useRemoteModule } from 'react-dynamic-remote-component'\nimport { RemoteModule } from 'react-dynamic-remote-component/dist/types/types'\n\nimport { Skeleton, Spin } from 'antd'\nimport ErrorBoundary from 'os/components/errorBoundary'\n\n/**\n * Remote Static\n */\nconst RemoteStatic = forwardRef<\n  HTMLElement,\n  {\n    type?: string\n    manifest: RemoteModule\n    render: (src: string) => JSX.Element\n  }\n>(({ type = 'default', manifest, render }, ref) => {\n  const { [type]: src } = useRemoteModule(manifest)\n  return cloneElement(render(src), ref ? { ref } : {})\n})\n\n/**\n * Static Loader\n */\nexport const StaticLoader = forwardRef<\n  HTMLElement,\n  {\n    type: 'logo' | 'panel' | 'readme'\n    render: (url: string) => JSX.Element\n  } & ComponentManifest\n>(({ type, url, appId, render }, ref) => {\n  const manifest = { url, scope: appId, module: './static' }\n  return (\n    <ErrorBoundary remoteUrl={url || 'Unknown'}>\n      <Suspense fallback={<Spin />}>\n        <RemoteStatic\n          type={type}\n          manifest={manifest}\n          render={render}\n          ref={ref}\n        />\n      </Suspense>\n    </ErrorBoundary>\n  )\n})\n\n/**\n * Remote component\n */\nconst RemoteComponent = forwardRef<HTMLElement, { manifest: RemoteModule }>(\n  ({ manifest, ...props }, ref) => {\n    const { default: Component } = useRemoteModule(manifest)\n    return <Component {...props} ref={ref} />\n  },\n)\n\n/**\n * Page Loader\n */\nexport const PageLoader = forwardRef<HTMLElement, ComponentManifest>(\n  ({ url, appId, ...props }, ref) => {\n    const manifest = { url, scope: appId, module: './page' }\n    return (\n      <ErrorBoundary remoteUrl={url || 'Unknown'}>\n        <Suspense fallback={<Skeleton active />}>\n          <RemoteComponent manifest={manifest} {...props} ref={ref} />\n        </Suspense>\n      </ErrorBoundary>\n    )\n  },\n)\n\n/**\n * Widget Loader\n */\nexport const WidgetLoader = forwardRef<HTMLElement, ComponentManifest>(\n  ({ url, appId, ...props }, ref) => {\n    const manifest = { url, scope: appId, module: './widget' }\n    return (\n      <ErrorBoundary remoteUrl={url || 'Unknown'}>\n        <Suspense fallback={<Skeleton active />}>\n          <RemoteComponent manifest={manifest} {...props} ref={ref} />\n        </Suspense>\n      </ErrorBoundary>\n    )\n  },\n)\n","import { Env } from 'shared/runtime'\n\nif (\n  typeof process.env.REACT_APP_ID !== 'string' ||\n  typeof process.env.REACT_APP_URL !== 'string' ||\n  typeof process.env.REACT_APP_SENHUB !== 'string'\n)\n  throw new Error('Please add REACT_APP_ID, REACT_APP_URL in .env!')\n\n/**\n * Contructor\n */\n\ntype Conf = {\n  appId: string\n  url: string\n  senhub: string\n}\n\nconst shared = {\n  appId: process.env.REACT_APP_ID,\n  url: process.env.REACT_APP_URL,\n  senhub: process.env.REACT_APP_SENHUB,\n}\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    ...shared,\n  },\n\n  /**\n   * Staging configurations\n   */\n  staging: {\n    ...shared,\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    ...shared,\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import configs from 'app/configs'\n\nconst {\n  manifest: { url, appId },\n} = configs\n\nconst register: SenHubRegister = {\n  [appId]: {\n    url: `${url}/index.js`,\n    appId,\n    name: 'My App',\n    author: {\n      name: 'Sentre',\n      email: 'hi@sentre.io',\n    },\n    description: 'A sample project for Sentre developers',\n  },\n  bulksender: {\n    url: 'https://descartesnetwork.github.io/bulksender/index.js',\n    appId: 'bulksender',\n    name: 'Bulk Sender',\n    author: {\n      name: 'Tu Phan',\n      email: 'tuphan@descartes.network',\n    },\n    description: 'Single sign, multiple transactions',\n  },\n}\n\nexport default register\n","import { env, net } from 'shared/runtime'\nimport manifest from './manifest.config'\nimport sol from './sol.config'\n\nconst configs = {\n  manifest: manifest[env],\n  sol: sol[net],\n}\n\n/**\n * Module exports\n */\nexport default configs\n","import { Net } from 'shared/runtime'\n\n/**\n * Contructor\n */\ntype Conf = {\n  node: string\n  spltAddress: string\n  splataAddress: string\n}\n\nconst conf: Record<Net, Conf> = {\n  /**\n   * Development configurations\n   */\n  devnet: {\n    node: 'https://api.devnet.solana.com',\n    spltAddress: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n    splataAddress: 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n  },\n\n  /**\n   * Staging configurations\n   */\n  testnet: {\n    node: 'https://api.testnet.solana.com',\n    spltAddress: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n    splataAddress: 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n  },\n\n  /**\n   * Production configurations\n   */\n  mainnet: {\n    node: 'https://api.mainnet-beta.solana.com',\n    spltAddress: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n    splataAddress: 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { Space, Avatar, Typography } from 'antd'\nimport { StaticLoader } from 'os/components/appLoader'\nimport IonIcon from 'shared/ionicon'\n\nimport register from 'senhub.register'\n\nconst AppIcon = ({\n  appId,\n  size = 64,\n  onClick = () => {},\n  name = true,\n}: {\n  appId: string\n  size?: number\n  onClick?: () => void\n  name?: boolean\n}) => {\n  return (\n    <StaticLoader\n      type=\"logo\"\n      {...register[appId]}\n      render={(src) => (\n        <Space\n          direction=\"vertical\"\n          style={{ width: size, textAlign: 'center' }}\n          onClick={onClick}\n        >\n          <Avatar\n            src={src}\n            shape=\"square\"\n            size={size}\n            style={{ cursor: 'pointer' }}\n          >\n            <IonIcon name=\"image-outline\" />\n          </Avatar>\n          {name ? (\n            <Typography.Text\n              style={{\n                fontSize: Math.floor(size / 4.5),\n              }}\n            >\n              {register[appId].name}\n            </Typography.Text>\n          ) : null}\n        </Space>\n      )}\n    />\n  )\n}\n\nexport default AppIcon\n","import { ReactNode } from 'react'\nimport { useDroppable } from '@dnd-kit/core'\nimport { SortableContext } from '@dnd-kit/sortable'\n\nimport { Row, Col } from 'antd'\n\n/**\n * DroppablePage render as a Row\n */\nconst DroppablePage = ({\n  index,\n  items,\n  children,\n  disabled = false,\n}: {\n  index: number\n  items: string[]\n  children: ReactNode\n  disabled?: boolean\n}) => {\n  const { setNodeRef } = useDroppable({\n    id: `droppable-${index}`,\n    data: { isDroppableZone: true, index },\n    disabled,\n  })\n  const style = disabled\n    ? { transition: 'all 0.25s ease-in-out' }\n    : {\n        transition: 'all 0.25s ease-in-out',\n        background: '#00000010',\n        padding: 16,\n        borderRadius: 16,\n        minHeight: 100,\n      }\n\n  return (\n    <SortableContext items={items}>\n      <Row id={`droppable-${index}`} gutter={[16, 16]} ref={setNodeRef}>\n        <Col span={24}>\n          <div style={style}>\n            <Row gutter={[16, 16]}>{children}</Row>\n          </div>\n        </Col>\n      </Row>\n    </SortableContext>\n  )\n}\n\nexport default DroppablePage\n","import { useSortable } from '@dnd-kit/sortable'\nimport { CSS } from '@dnd-kit/utilities'\n\nimport { Col } from 'antd'\nimport AppIcon from 'os/components/appIcon'\n\n/**\n * DraggableIcon render as a Col\n */\nconst DraggableIcon = ({\n  appId,\n  size = 64,\n  onClick = () => {},\n  disabled = false,\n}: {\n  appId: string\n  size?: number\n  onClick?: () => void\n  disabled?: boolean\n}) => {\n  const { attributes, listeners, setNodeRef, transform, transition } =\n    useSortable({\n      id: appId,\n      disabled,\n    })\n\n  const style = {\n    transform: CSS.Translate.toString(transform),\n    transition: transition,\n  }\n\n  return (\n    <Col\n      id={appId}\n      style={style}\n      {...listeners}\n      {...attributes}\n      ref={setNodeRef}\n    >\n      <AppIcon appId={appId} size={size} onClick={onClick} />\n    </Col>\n  )\n}\n\nexport default DraggableIcon\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\nimport { isTouchable } from 'shared/util'\n\n/**\n * Interface & Utility\n */\n\nexport type Infix = 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'\n\nexport type State = {\n  width: number\n  infix: Infix\n  touchable: boolean\n  actionCenterVisible: boolean\n}\n\nconst getInfix = (): Infix => {\n  const width = window.innerWidth\n  if (width < 576) return 'xs'\n  if (width < 768) return 'sm'\n  if (width < 992) return 'md'\n  if (width < 1200) return 'lg'\n  if (width < 1400) return 'xl'\n  return 'xxl'\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'ui'\nconst initialState: State = {\n  width: window.innerWidth,\n  infix: getInfix(),\n  touchable: isTouchable(),\n  actionCenterVisible: false,\n}\n\n/**\n * Actions\n */\n\nexport const resize = createAsyncThunk(`${NAME}/resize`, async () => {\n  const width = window.innerWidth\n  const infix = getInfix()\n  return { width, infix }\n})\n\nexport const setActionCenterVisible = createAsyncThunk(\n  `${NAME}/setActionCenterVisible`,\n  async (visible: boolean) => {\n    return { actionCenterVisible: visible }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        resize.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setActionCenterVisible.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { create, isIPFS } from 'ipfs-core'\nimport { asyncWait } from 'shared/util'\n\nclass IPFS {\n  private _ipfs: any = async () => {\n    try {\n      if (!window.sentre?.ipfs) window.sentre.ipfs = await create()\n      return window.sentre.ipfs\n    } catch (er) {\n      await asyncWait(500)\n      return await this._ipfs()\n    }\n  }\n\n  static isCID = (cid: string): boolean => {\n    try {\n      return isIPFS.multihash(cid)\n    } catch (er) {\n      return false\n    }\n  }\n\n  get = async (cid: string) => {\n    if (!IPFS.isCID(cid)) throw new Error('Invalid CID')\n    const ipfs = await this._ipfs()\n    const stream = await ipfs.cat(cid)\n    let raw = ''\n    for await (const chunk of stream) raw += Buffer.from(chunk).toString()\n    const data = JSON.parse(raw)\n    return data\n  }\n\n  set = async (data: object): Promise<string> => {\n    if (!data) throw new Error('Empty data')\n    const raw = JSON.stringify(data)\n    const ipfs = await this._ipfs()\n    const { path: cid } = await ipfs.add(raw)\n    return cid as string\n  }\n}\n\nexport default IPFS\n","import { useCallback, useState, useEffect } from 'react'\nimport { Connection } from '@solana/web3.js'\n\nimport { Row, Col, Typography, Space, Badge, Card } from 'antd'\nimport NetSwitch from './netSwitch'\n\nimport configs from 'os/configs'\n\nconst {\n  sol: { node },\n} = configs\nconst connection = new Connection(node)\n// 0: Failed, 1: Poor, 2: Moderate, 3: Good\ntype NetworkStatus = 0 | 1 | 2 | 3\nlet intervalId: ReturnType<typeof setTimeout> | undefined\n\nconst parseType = (status: number) => {\n  return status === 3\n    ? 'success'\n    : status === 2\n    ? 'warning'\n    : status === 1\n    ? 'error'\n    : 'default'\n}\n\nconst parseMessage = (status: number) => {\n  return status === 3\n    ? 'Good'\n    : status === 2\n    ? 'Moderate'\n    : status === 1\n    ? 'Poor'\n    : 'No'\n}\n\nconst Network = () => {\n  const [networkStatus, setNetworkStatus] = useState<NetworkStatus>(0)\n\n  // Intervally ping solana cluster\n  const ping = useCallback(async () => {\n    try {\n      if (!window.navigator.onLine) return setNetworkStatus(0)\n      const start = Date.now()\n      await connection.getVersion()\n      const end = Date.now()\n      const duration = end - start\n      if (duration < 250) return setNetworkStatus(3)\n      if (duration < 1000) return setNetworkStatus(2)\n      return setNetworkStatus(1)\n    } catch (er) {\n      return setNetworkStatus(0)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (intervalId) clearInterval(intervalId)\n    ping() // Init the network status\n    intervalId = setInterval(ping, 1000)\n    return () => {\n      if (intervalId) clearInterval(intervalId)\n      intervalId = undefined\n    }\n  }, [ping])\n\n  return (\n    <Card bodyStyle={{ padding: 16 }} hoverable>\n      <Row gutter={[8, 8]}>\n        <Col span={24}>\n          <Row gutter={[8, 8]} wrap={false}>\n            <Col flex=\"auto\">\n              <Typography.Text>Solana Network</Typography.Text>\n            </Col>\n            <Col>\n              <NetSwitch />\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Space size={0}>\n            <Badge status={parseType(networkStatus)} dot />\n            <Typography.Text type=\"secondary\">\n              {`${parseMessage(networkStatus)} connection`}\n            </Typography.Text>\n          </Space>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default Network\n","import { ChangeEvent, useCallback, useEffect, useState } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\n\nimport { Row, Col, Card, Input, Button, Typography } from 'antd'\nimport IonIcon from 'shared/ionicon'\nimport AppIcon from 'os/components/appIcon'\n\nimport register from 'senhub.register'\nimport SearchEngine from './engine'\nimport './style.less'\n\nlet searching: ReturnType<typeof setTimeout> | undefined\n\nconst Search = () => {\n  const [loading, setLoading] = useState(false)\n  const [keywords, setKeywords] = useState('')\n  const [appIds, setAppIds] = useState<string[]>()\n\n  const { search } = useLocation()\n  const history = useHistory()\n\n  const onSearch = useCallback(\n    async (keywords: string) => {\n      const engine = new SearchEngine(register)\n      await setKeywords(keywords)\n      await setLoading(true)\n      if (searching) {\n        clearTimeout(searching)\n        searching = undefined\n      }\n      if (!keywords) {\n        await setAppIds(undefined)\n        await setLoading(false)\n        return history.push('/store')\n      }\n      searching = setTimeout(async () => {\n        const appIds = engine.search(keywords)\n        await setAppIds(appIds)\n        await setLoading(false)\n        return window.scrollTo(0, 0)\n      }, 1000)\n    },\n    [history],\n  )\n\n  const parseParams = useCallback(async () => {\n    const params = new URLSearchParams(search) || {}\n    const keywords = params.get('search') || ''\n    await onSearch(keywords)\n  }, [search, onSearch])\n\n  const to = (appId = '') => history.push(`/store/${encodeURI(appId)}`)\n\n  useEffect(() => {\n    parseParams()\n  }, [parseParams])\n\n  return (\n    <Card\n      className={`search-card ${keywords ? 'active' : 'passive'}`}\n      bodyStyle={{ padding: 12 }}\n    >\n      <Row gutter={[12, 12]}>\n        <Col span={24}>\n          <Input\n            placeholder=\"Search\"\n            value={keywords}\n            size=\"small\"\n            bordered={false}\n            suffix={\n              keywords ? (\n                <Button\n                  type=\"text\"\n                  style={{ marginRight: -7 }}\n                  icon={<IonIcon name=\"close-circle-outline\" />}\n                  loading={loading}\n                  onClick={() => onSearch('')}\n                />\n              ) : (\n                <Button\n                  type=\"text\"\n                  style={{ marginRight: -7 }}\n                  icon={<IonIcon name=\"search-outline\" />}\n                  loading={loading}\n                />\n              )\n            }\n            onChange={(e: ChangeEvent<HTMLInputElement>) =>\n              onSearch(e.target.value || '')\n            }\n          />\n        </Col>\n        {appIds && !appIds.length ? (\n          <Col span={24}>\n            <Typography.Text style={{ marginLeft: 8 }} type=\"secondary\">\n              No Result\n            </Typography.Text>\n          </Col>\n        ) : null}\n        {appIds?.map((appId) => (\n          <Col key={appId}>\n            <AppIcon appId={appId} onClick={() => to(appId)} />\n          </Col>\n        ))}\n      </Row>\n    </Card>\n  )\n}\n\nexport default Search\n","import localForage from 'localforage'\nimport { account } from '@senswap/sen-js'\nimport IPFS from './ipfs'\n\n/**\n * Persistent Database\n */\nclass PDB {\n  readonly dbName: string\n  private driver: any\n  private ipfs: IPFS\n\n  constructor(walletAddress: string) {\n    if (!account.isAddress(walletAddress)) throw new Error('Invalid address')\n    this.dbName = walletAddress\n    this.driver = [localForage.WEBSQL, localForage.LOCALSTORAGE]\n    this.ipfs = new IPFS()\n  }\n\n  createInstance = (appId: string): any => {\n    return localForage.createInstance({\n      driver: this.driver,\n      name: this.dbName,\n      storeName: appId,\n    })\n  }\n\n  dropInstance = async (appId: string): Promise<void> => {\n    const instance = this.createInstance(appId)\n    await instance.clear()\n    return await localForage.dropInstance({\n      name: this.dbName,\n      storeName: appId,\n    })\n  }\n\n  all = async (): Promise<any> => {\n    let data: any = {}\n    const appIds = (\n      (await this.createInstance('sentre').getItem('appIds')) || []\n    )\n      .flat()\n      .concat(['sentre'])\n    for (const appId of appIds) {\n      data[appId] = {}\n      const instance = this.createInstance(appId)\n      await instance.iterate((value: string, key: string) => {\n        data[appId][key] = value\n      })\n    }\n    return data\n  }\n\n  backup = async () => {\n    const data = await this.all()\n    return await this.ipfs.set(data)\n  }\n\n  restore = async (cid: string) => {\n    // Download data\n    const data = await this.ipfs.get(cid)\n    // Apply to storage\n    for (const appId in data) {\n      const instance = await this.createInstance(appId)\n      for (const key in data[appId]) {\n        const value = data[appId][key]\n        await instance.setItem(key, value)\n      }\n    }\n    return data\n  }\n}\n\nexport default PDB\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account } from '@senswap/sen-js'\n\nimport PDB from 'shared/pdb'\n\n/**\n * Interface & Utility\n */\n\nexport type State = {\n  appPage: AppPage\n  farvoriteAppIds: AppIds\n}\n\nconst troubleshoot = (appPage?: AppPage): AppPage => {\n  if (!appPage || !Array.isArray(appPage)) return [[]]\n  if (!appPage.length) return [[]]\n  return appPage.map((row) => row.filter((appId) => appId))\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'page'\nconst initialState: State = {\n  appPage: [[]],\n  farvoriteAppIds: [],\n}\n\n/**\n * Actions\n */\n\nexport const loadPage = createAsyncThunk<Partial<State>, void, { state: any }>(\n  `${NAME}/loadPage`,\n  async (_, { getState }) => {\n    const {\n      wallet: { address },\n    } = getState()\n    if (!account.isAddress(address))\n      throw new Error('Wallet is not connected yet')\n    const db = new PDB(address).createInstance('sentre')\n    const appPage = troubleshoot(\n      (await db.getItem('appPage')) || initialState.appPage,\n    )\n    return { appPage }\n  },\n)\n\nexport const updatePage = createAsyncThunk<\n  Partial<State>,\n  AppPage,\n  { state: any }\n>(`${NAME}/updatePage`, async (appPage, { getState }) => {\n  const {\n    wallet: { address },\n  } = getState()\n  if (!account.isAddress(address))\n    throw new Error('Wallet is not connected yet')\n  appPage = troubleshoot(appPage)\n  const pdb = new PDB(address)\n  await pdb.createInstance('sentre').setItem('appPage', appPage)\n  return { appPage }\n})\n\nexport const installApp = createAsyncThunk<\n  Partial<State>,\n  string,\n  { state: any }\n>(`${NAME}/installApp`, async (appId, { getState }) => {\n  const {\n    wallet: { address },\n    page: { appPage },\n  } = getState()\n  if (!account.isAddress(address))\n    throw new Error('Wallet is not connected yet')\n  if (appPage.flat().includes(appId)) return {}\n  const newAppPage: AppPage = appPage.map((page: string[]) => [...page])\n  newAppPage[newAppPage.length - 1].push(appId)\n  const pdb = new PDB(address)\n  await pdb.createInstance('sentre').setItem('appPage', newAppPage)\n  return { appPage: newAppPage }\n})\n\nexport const uninstallApp = createAsyncThunk<\n  Partial<State>,\n  string,\n  { state: any }\n>(`${NAME}/uninstallApp`, async (appId, { getState }) => {\n  const {\n    wallet: { address },\n    page: { appPage },\n  } = getState()\n  if (!account.isAddress(address))\n    throw new Error('Wallet is not connected yet')\n  if (!appPage.flat().includes(appId)) return {}\n  const newAppPage = appPage.map((page: string[]) =>\n    page.filter((_appId) => _appId !== appId),\n  )\n  const pdb = new PDB(address)\n  await pdb.createInstance('sentre').setItem('appPage', newAppPage)\n  await pdb.dropInstance(appId)\n  return { appPage: newAppPage }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        loadPage.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        updatePage.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        installApp.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        uninstallApp.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { useSortable } from '@dnd-kit/sortable'\nimport { Col, ColProps } from 'antd'\nimport { ReactNode } from 'react'\n\n/**\n * DraggableIcon render as a Col\n */\nconst DraggableAction = ({\n  id,\n  children,\n  ...rest\n}: {\n  id: string\n  children: ReactNode\n} & ColProps) => {\n  const { setNodeRef } = useSortable({\n    id: id,\n  })\n\n  return (\n    <Col id={id} ref={setNodeRef} {...rest}>\n      {children}\n    </Col>\n  )\n}\n\nexport default DraggableAction\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport {\n  DndContext,\n  DragEndEvent,\n  closestCorners,\n  rectIntersection,\n  MouseSensor,\n  TouchSensor,\n  useSensor,\n  useSensors,\n  DragStartEvent,\n  DragOverEvent,\n  DragOverlay,\n} from '@dnd-kit/core'\nimport { arrayMove } from '@dnd-kit/sortable'\n\nimport { Row, Col, Button } from 'antd'\nimport IonIcon from 'shared/ionicon'\nimport AppIcon from 'os/components/appIcon'\nimport DroppablePage from './droppablePage'\nimport DraggableIcon from './draggableIcon'\n\nimport { RootDispatch } from 'os/store'\nimport { setActionCenterVisible } from 'os/store/ui.reducer'\nimport { uninstallApp } from 'os/store/page.reducer'\nimport DraggableAction from './draggableAction'\n\n// Mixed Strategy\nconst mixedStrategy = (\n  ...args: Parameters<typeof rectIntersection | typeof closestCorners>\n) => {\n  const intersecting = rectIntersection(...args)\n  return intersecting ? intersecting : closestCorners(...args)\n}\n\nconst WidgetLayout = ({\n  pages,\n  onChange = () => {},\n  disabled = false,\n}: {\n  pages: AppPage\n  onChange?: (pages: AppPage) => void\n  disabled?: boolean\n}) => {\n  const history = useHistory()\n  const dispatch = useDispatch<RootDispatch>()\n  const [internalPages, setInternalPages] = useState<AppPage>([])\n  const [activeId, setActiveId] = useState<string>('')\n  const [actionId, setActionId] = useState('')\n  const sensors = useSensors(useSensor(MouseSensor), useSensor(TouchSensor))\n\n  useEffect(() => {\n    setInternalPages(pages)\n  }, [pages])\n\n  const open = async (appId: string) => {\n    await dispatch(setActionCenterVisible(false))\n    return history.push(`/app/${appId}`)\n  }\n\n  // Derive container\n  const findContainer = useCallback(\n    ({ id, data }: { id: string; data: any }) => {\n      let pageIndex = null\n      let appIndex = null\n      if (data?.current?.isDroppableZone) {\n        pageIndex = data.current.index\n        appIndex = -1\n      } else {\n        internalPages.forEach((appIds, i) =>\n          appIds.forEach((appId: string, j: number) => {\n            if (appId === id) {\n              pageIndex = i\n              appIndex = j\n            }\n          }),\n        )\n      }\n      return [pageIndex, appIndex]\n    },\n    [internalPages],\n  )\n\n  const onDragStart = ({ active }: DragStartEvent) => setActiveId(active.id)\n\n  const onDragOver = useCallback(\n    ({ over, active }: DragOverEvent) => {\n      if (over?.id?.startsWith('action-')) {\n        return setActionId(over.id)\n      } else {\n        setActionId('')\n      }\n\n      const [activePageIndex, activeAppIndex] = findContainer(active)\n      const [overPageIndex, overAppIndex] = over\n        ? findContainer(over)\n        : [activePageIndex, activeAppIndex]\n      // New page instances\n      const newPages = [...internalPages]\n      const activePage = [...internalPages[activePageIndex]]\n      const overPage = [...internalPages[overPageIndex]]\n      if (activePageIndex === overPageIndex) {\n        // Sort the page\n        const newPage = arrayMove(\n          activePage,\n          activePage.indexOf(active.id),\n          activePage.indexOf(over?.id || active.id),\n        )\n        // Update new pages\n        newPages[activePageIndex] = newPage\n      } else {\n        // Remove from the source page\n        activePage.splice(activePage.indexOf(active.id), 1)\n        // Add to the destination page\n        if (overAppIndex === -1) overPage.push(active.id)\n        else overPage.splice(overAppIndex, 0, active.id)\n        // Update new pages\n        newPages[activePageIndex] = activePage\n        newPages[overPageIndex] = overPage\n      }\n      return setInternalPages(newPages)\n    },\n    [internalPages, findContainer],\n  )\n  const onDragEnd = ({ over, active }: DragEndEvent) => {\n    let newPages = internalPages\n\n    if (over?.id === 'action-remove') {\n      const activeId = active.id\n      dispatch(uninstallApp(activeId))\n\n      newPages = newPages.map((appIds) =>\n        appIds.filter((appId) => appId !== activeId),\n      )\n      setInternalPages(newPages)\n    }\n\n    setActiveId('')\n    onChange(newPages)\n  }\n\n  const onAddNewPage = () => setInternalPages([...internalPages, []])\n\n  const onRemovePage = (pageIdx: number) => {\n    onChange(internalPages.filter((val, idx) => idx !== pageIdx))\n  }\n  return (\n    <DndContext\n      sensors={sensors}\n      collisionDetection={mixedStrategy}\n      onDragStart={onDragStart}\n      onDragOver={onDragOver}\n      onDragEnd={onDragEnd}\n    >\n      <Row gutter={[16, 16]}>\n        {internalPages.map((appIds, i) => (\n          <Col key={i} span={24}>\n            <DroppablePage index={i} items={appIds} disabled={disabled}>\n              {appIds.map((appId) => (\n                <DraggableIcon\n                  key={appId}\n                  appId={appId}\n                  disabled={disabled}\n                  size={64}\n                  onClick={() => open(appId)}\n                />\n              ))}\n              {!disabled && !appIds.length && (\n                <Col flex=\"auto\" style={{ textAlign: 'end' }}>\n                  <Button\n                    type=\"text\"\n                    icon={<IonIcon name=\"close-outline\" />}\n                    onClick={() => onRemovePage(i)}\n                  />\n                </Col>\n              )}\n            </DroppablePage>\n          </Col>\n        ))}\n        {!disabled && (\n          <Col span={24}>\n            <Row gutter={[12, 12]} justify=\"space-between\">\n              <DraggableAction id=\"action-remove\" span={12}>\n                <Button\n                  block\n                  disabled={!activeId}\n                  type={actionId ? 'primary' : undefined}\n                  className=\"contained\"\n                  icon={<IonIcon name=\"trash-outline\" />}\n                >\n                  Drag to delete app\n                </Button>\n              </DraggableAction>\n              <Col span={12}>\n                <Button\n                  block\n                  className=\"contained\"\n                  icon={<IonIcon name=\"add-outline\" />}\n                  onClick={onAddNewPage}\n                >\n                  New Page\n                </Button>\n              </Col>\n            </Row>\n          </Col>\n        )}\n      </Row>\n      <DragOverlay>\n        {activeId ? (\n          <span style={{ opacity: 0.5 }}>\n            <AppIcon appId={activeId} />\n          </span>\n        ) : null}\n      </DragOverlay>\n    </DndContext>\n  )\n}\n\nexport default WidgetLayout\n","import { useCallback, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Row, Col, Switch, Typography } from 'antd'\nimport WalletIntro from './walletIntro'\nimport WidgetLayout from './widgetLayout'\n\nimport { RootDispatch, RootState } from 'os/store'\nimport { updatePage } from 'os/store/page.reducer'\n\nconst Applications = () => {\n  const dispatch = useDispatch<RootDispatch>()\n  const [editable, setEditable] = useState(false)\n  const { appPage } = useSelector((state: RootState) => state.page)\n\n  const setPages = useCallback(\n    (appPage) => {\n      return dispatch(updatePage(appPage))\n    },\n    [dispatch],\n  )\n\n  return (\n    <Row gutter={[16, 24]}>\n      <Col span={24}>\n        <WalletIntro />\n      </Col>\n      <Col flex=\"auto\">\n        <Typography.Text>To customize your workspace</Typography.Text>\n      </Col>\n      <Col>\n        <Switch onChange={setEditable} size=\"small\" />\n      </Col>\n      <Col span={24}>\n        <WidgetLayout\n          pages={appPage}\n          onChange={setPages}\n          disabled={!editable}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Applications\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account } from '@senswap/sen-js'\n\n/**\n * Interface & Utility\n */\n\nexport type WorkingMode = undefined | 'focus' | 'professional'\n\ntype State = {\n  mode: WorkingMode\n  visited: boolean\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'flags'\nconst initialState: State = {\n  mode: undefined,\n  visited: true,\n}\n\n/**\n * Actions\n */\n\nexport const setVisited = createAsyncThunk<\n  Partial<State>,\n  boolean,\n  { state: any }\n>(`${NAME}/setVisited`, async (visited, { getState }) => {\n  const {\n    wallet: { address },\n    flags: prevFlags,\n  } = getState()\n  if (!account.isAddress(address))\n    throw new Error('Wallet is not connected yet')\n  return { ...prevFlags, visited }\n})\n\nexport const setMode = createAsyncThunk<\n  Partial<State>,\n  WorkingMode,\n  { state: any }\n>(`${NAME}/setMode`, async (mode, { getState }) => {\n  const {\n    wallet: { address },\n    flags: prevFlags,\n  } = getState()\n  if (!account.isAddress(address))\n    throw new Error('Wallet is not connected yet')\n  return { ...prevFlags, mode }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        setVisited.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setMode.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nimport { Row, Col, Switch, Typography, Card } from 'antd'\n\nimport { RootDispatch, RootState } from 'os/store'\nimport { setMode } from 'os/store/flags.reducer'\n\nconst Mode = () => {\n  const dispatch = useDispatch<RootDispatch>()\n  const history = useHistory()\n  const { mode } = useSelector((state: RootState) => state.flags)\n\n  const onSwitch = async (checked: boolean) => {\n    const mode = checked ? 'professional' : 'focus'\n    const page = checked ? '/dashboard' : '/app'\n    await dispatch(setMode(mode))\n    return history.push(page)\n  }\n\n  return (\n    <Card bodyStyle={{ padding: 16 }} hoverable>\n      <Row gutter={[8, 8]}>\n        <Col span={24}>\n          <Row gutter={[8, 8]} wrap={false}>\n            <Col flex=\"auto\">\n              <Typography.Text>Pro Mode</Typography.Text>\n            </Col>\n            <Col>\n              <Switch\n                size=\"small\"\n                checked={mode === 'professional'}\n                onChange={onSwitch}\n              />\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Typography.Paragraph type=\"secondary\" style={{ fontSize: 12 }}>\n            By enabling the professional mode, your workspace will be a set of\n            widgets.\n          </Typography.Paragraph>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default Mode\n","import { Select } from 'antd'\n\nimport { net, onSwitchNetwork } from 'shared/runtime'\n\nconst NetSwitch = () => {\n  return (\n    <Select defaultValue={net} onChange={onSwitchNetwork} size=\"small\">\n      <Select.Option value=\"devnet\">Devnet</Select.Option>\n      {/* <Select.Option value=\"testnet\">Testnet</Select.Option> */}\n      <Select.Option value=\"mainnet\">Mainnet</Select.Option>\n    </Select>\n  )\n}\n\nexport default NetSwitch\n","import { Row, Col, Button, Card, Typography } from 'antd'\nimport { RootState } from 'os/store'\nimport { useSelector } from 'react-redux'\nimport IonIcon from 'shared/ionicon'\n\nimport PDB from 'shared/pdb'\n\nconst Sync = () => {\n  const { address: walletAddress } = useSelector(\n    (state: RootState) => state.wallet,\n  )\n\n  const pdb = new PDB(walletAddress)\n\n  const onBackup = async () => {\n    console.log('onBackup')\n    const re = await pdb.backup()\n    console.log(re)\n  }\n  const onRestore = async () => {\n    console.log('onRestore')\n    const re = await pdb.restore(\n      'QmYomukE7ke3kpq3bk2pBLHKWsTaGmkcbGvMYLXnXPcuL6',\n    )\n    console.log(re)\n  }\n\n  return (\n    <Card bodyStyle={{ padding: 16 }} hoverable>\n      <Row gutter={[16, 20]}>\n        <Col span={24}>\n          <Typography.Text>Backup & Restore</Typography.Text>\n        </Col>\n        <Col span={24}>\n          <Row gutter={[8, 8]}>\n            <Col span={24}>\n              <Button\n                type=\"primary\"\n                icon={<IonIcon name=\"cloud-done-outline\" />}\n                onClick={onBackup}\n                block\n              >\n                Backup\n              </Button>\n            </Col>\n            <Col span={24}>\n              <Button\n                icon={<IonIcon name=\"archive-outline\" />}\n                onClick={onRestore}\n                block\n              >\n                Restore\n              </Button>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default Sync\n","import { Row, Col } from 'antd'\nimport Mode from './mode'\nimport Network from './network'\nimport Sync from './sync'\n\nconst Settings = () => {\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={12}>\n        <Mode />\n      </Col>\n      <Col span={12}>\n        <Sync />\n      </Col>\n      <Col span={24}>\n        <Network />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Settings\n","import { Fragment } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Row, Col, Drawer, Button, Tabs } from 'antd'\nimport IonIcon from 'shared/ionicon'\nimport Applications from './applications'\nimport Settings from './settings'\n\nimport { RootDispatch, RootState } from 'os/store'\nimport { setActionCenterVisible } from 'os/store/ui.reducer'\n\nconst ActionCenter = () => {\n  const dispatch = useDispatch<RootDispatch>()\n  const { actionCenterVisible } = useSelector((state: RootState) => state.ui)\n\n  return (\n    <Fragment>\n      <Button\n        type=\"text\"\n        icon={<IonIcon name=\"menu\" style={{ fontSize: 20 }} />}\n        onClick={() => dispatch(setActionCenterVisible(!actionCenterVisible))}\n      />\n      <Drawer\n        visible={actionCenterVisible}\n        onClose={() => dispatch(setActionCenterVisible(false))}\n        closable={false}\n        contentWrapperStyle={{ width: '95%', maxWidth: 400 }}\n        destroyOnClose\n      >\n        <Row gutter={[16, 16]} style={{ marginTop: -16 }}>\n          <Col span={24}>\n            <Tabs\n              style={{ overflow: 'visible' }}\n              tabBarExtraContent={\n                <Button\n                  type=\"text\"\n                  icon={<IonIcon name=\"close-outline\" />}\n                  onClick={() => dispatch(setActionCenterVisible(false))}\n                />\n              }\n              destroyInactiveTabPane\n            >\n              <Tabs.TabPane\n                tab={\n                  <span>\n                    <IonIcon name=\"grid-outline\" />\n                    Applications\n                  </span>\n                }\n                key=\"action-center\"\n              >\n                <Applications />\n              </Tabs.TabPane>\n              <Tabs.TabPane\n                tab={\n                  <span>\n                    <IonIcon name=\"settings-outline\" />\n                    Settings\n                  </span>\n                }\n                key=\"system-settings\"\n              >\n                <Settings />\n              </Tabs.TabPane>\n            </Tabs>\n          </Col>\n        </Row>\n      </Drawer>\n    </Fragment>\n  )\n}\n\nexport default ActionCenter\n","import { useHistory } from 'react-router-dom'\n\nimport { Avatar } from 'antd'\nimport IonIcon from 'shared/ionicon'\n\nconst More = () => {\n  const history = useHistory()\n  return (\n    <span style={{ cursor: 'pointer' }} onClick={() => history.push('/store')}>\n      <Avatar shape=\"square\">\n        <IonIcon name=\"add-outline\" />\n      </Avatar>\n    </span>\n  )\n}\n\nexport default More\n","import { useSelector } from 'react-redux'\nimport { useHistory, useRouteMatch } from 'react-router-dom'\nimport { account } from '@senswap/sen-js'\n\nimport { Row, Col, Badge, Divider } from 'antd'\nimport AppIcon from 'os/components/appIcon'\nimport More from './more'\n\nimport { RootState } from 'os/store'\n\nconst ContextMenu = () => {\n  const history = useHistory()\n  const { width } = useSelector((state: RootState) => state.ui)\n  const { address } = useSelector((state: RootState) => state.wallet)\n  const { appPage } = useSelector((state: RootState) => state.page)\n  const { params } = useRouteMatch<{ appId: string }>('/app/:appId') || {}\n\n  if (!account.isAddress(address)) return null\n  return (\n    <Row gutter={[12, 12]} wrap={false} align=\"middle\">\n      <Col>\n        <Divider\n          type=\"vertical\"\n          style={{ margin: `0px ${width < 768 ? 4 : 8}px` }}\n        />\n      </Col>\n      <Col flex=\"auto\" style={{ width: 0 }} className=\"scrollbar\">\n        <Row gutter={[12, 12]} wrap={false} align=\"middle\">\n          {appPage.flat().map((appId) => (\n            <Col key={appId}>\n              <Badge dot={params?.appId === appId} color=\"cyan\" offset={[-4, 4]}>\n                <AppIcon\n                  appId={appId}\n                  size={32}\n                  name={false}\n                  onClick={() => history.push(`/app/${appId}`)}\n                />\n              </Badge>\n            </Col>\n          ))}\n          <Col>\n            <More />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ContextMenu\n","import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { account } from '@senswap/sen-js'\n\nimport { Row, Col, Space, Button } from 'antd'\nimport IonIcon from 'shared/ionicon'\nimport Wallet from 'os/view/header/wallet'\nimport Brand from 'os/components/brand'\nimport ActionCenter from './actionCenter'\nimport ContextMenu from './contextMenu'\n\nimport { RootDispatch, RootState } from 'os/store'\nimport { loadPage } from 'os/store/page.reducer'\n\nconst NavButton = ({\n  iconName,\n  title,\n  route,\n}: {\n  iconName: string\n  title: string\n  route: string\n}) => {\n  const history = useHistory()\n  const { width } = useSelector((state: RootState) => state.ui)\n\n  return (\n    <Button\n      type=\"text\"\n      icon={<IonIcon name={iconName} />}\n      onClick={() => history.push(route)}\n    >\n      {width >= 768 ? title : null}\n    </Button>\n  )\n}\n\nconst Header = () => {\n  const dispatch = useDispatch<RootDispatch>()\n  const { address } = useSelector((state: RootState) => state.wallet)\n  const { width } = useSelector((state: RootState) => state.ui)\n\n  useEffect(() => {\n    if (account.isAddress(address)) dispatch(loadPage())\n  }, [dispatch, address])\n\n  return (\n    <Row gutter={[12, 12]} align=\"middle\" wrap={false}>\n      <Col>\n        <Brand style={{ height: 24, cursor: 'pointer' }} lite={width < 768} />\n      </Col>\n      <Col flex=\"auto\">\n        <ContextMenu />\n      </Col>\n      <Col>\n        <Space align=\"center\">\n          <NavButton iconName=\"home-outline\" route=\"/dashboard\" title=\"Home\" />\n          <NavButton\n            iconName=\"bag-handle-outline\"\n            route=\"/store\"\n            title=\"Store\"\n          />\n          {!account.isAddress(address) ? <Wallet /> : <ActionCenter />}\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Header\n","import { useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\n\nimport { Row, Col } from 'antd'\n\nimport { RootState } from 'os/store'\n\nconst Welcome = () => {\n  const history = useHistory()\n  const { address: walletAddress } = useSelector(\n    (state: RootState) => state.wallet,\n  )\n\n  // Redirect callback\n  useEffect(() => {\n    const {\n      location: { search },\n    } = history\n    const params = new URLSearchParams(search)\n    const redirect = decodeURI(params.get('redirect') || '/welcome')\n    if (account.isAddress(walletAddress)) return history.push(redirect)\n  }, [walletAddress, history])\n\n  return (\n    <Row gutter={[24, 24]} justify=\"center\">\n      <Col span={24}>Welcome</Col>\n    </Row>\n  )\n}\n\nexport default Welcome\n","import { useSelector } from 'react-redux'\n\nimport { Row, Col } from 'antd'\nimport { WidgetLoader } from 'os/components/appLoader'\n\nimport register from 'senhub.register'\nimport { RootState } from 'os/store'\n\nconst Dashboard = () => {\n  const { appPage } = useSelector((state: RootState) => state.page)\n\n  return (\n    <Row gutter={[24, 24]}>\n      {appPage.flat().map((appId) => (\n        <Col key={appId}>\n          <WidgetLoader {...register[appId]} />\n        </Col>\n      ))}\n    </Row>\n  )\n}\n\nexport default Dashboard\n","import { useParams } from 'react-router-dom'\n\nimport { Row, Col } from 'antd'\nimport { PageLoader } from 'os/components/appLoader'\n\nimport register from 'senhub.register'\n\nconst Dashboard = () => {\n  const { appId } = useParams<{ appId: string }>()\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <PageLoader {...register[appId]} />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Dashboard\n","import { Document } from 'flexsearch'\n\nconst PRESET = {\n  tokenize: 'full',\n  context: true,\n  minlength: 3,\n}\n\ntype SearchResult = {\n  result: string[]\n}\n\nclass SearchEngine {\n  register: SenHubRegister\n  index: typeof Document\n\n  constructor(register: SenHubRegister) {\n    this.register = register\n    this.index = new Document({\n      document: {\n        id: 'appId',\n        index: [\n          { field: 'appId', ...PRESET },\n          { field: 'name', ...PRESET },\n          { field: 'description', ...PRESET },\n          { field: 'author:name', ...PRESET },\n          { field: 'author:email', ...PRESET },\n        ],\n      },\n    })\n    Object.keys(register).forEach((appId: string) =>\n      this.add(appId, register[appId]),\n    )\n  }\n\n  add = (id: string, doc: any) => {\n    return this.index.add(id, doc)\n  }\n\n  search = (text: string, limit = 10) => {\n    let raw: SearchResult[] = []\n    text.split(',').forEach((word) => {\n      raw = raw.concat(this.index.search(word, limit))\n    })\n    let appIds: string[] = []\n    raw.forEach(({ result }) => {\n      return result.forEach((appId: string) => {\n        if (!appIds.includes(appId)) return appIds.push(appId)\n      })\n    })\n    return appIds.map((appId) => this.register[appId].appId)\n  }\n}\n\nexport default SearchEngine\n","import { useHistory } from 'react-router-dom'\n\nimport { Row, Col } from 'antd'\nimport AppIcon from 'os/components/appIcon'\nimport Search from './search'\n\nimport register from 'senhub.register'\n\nconst Market = () => {\n  const history = useHistory()\n  const to = (appId: string) => history.push(`/store/${appId}`)\n\n  return (\n    <Row gutter={[16, 24]}>\n      <Col span={24}>\n        <Search />\n      </Col>\n      {Object.keys(register).map((appId) => (\n        <Col key={appId}>\n          <AppIcon appId={appId} onClick={() => to(appId)} />\n        </Col>\n      ))}\n    </Row>\n  )\n}\n\nexport default Market\n","import { useEffect, createRef } from 'react'\nimport { Remarkable } from 'remarkable'\n\nimport { Row, Col } from 'antd'\nimport { StaticLoader } from 'os/components/appLoader'\n\nimport register from 'senhub.register'\n\nconst Markdown = ({ src }: { src: string }) => {\n  const ref = createRef<HTMLDivElement>()\n\n  useEffect(() => {\n    ;(async () => {\n      try {\n        if (!src) throw new Error('Invalid src')\n        const txt = await (await fetch(src)).text()\n        // Parse data\n        const md = new Remarkable({ html: true })\n        if (ref.current) ref.current.innerHTML = md.render(txt)\n      } catch (er) {\n        if (ref.current)\n          ref.current.innerHTML = '<p>Cannot load the README.md</p>'\n      }\n    })()\n  }, [src, ref])\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24} ref={ref} />\n    </Row>\n  )\n}\n\nconst AppReadme = ({ appId }: { appId: string }) => {\n  return (\n    <StaticLoader\n      type=\"readme\"\n      {...register[appId]}\n      render={(src) => <Markdown src={src} />}\n    />\n  )\n}\n\nexport default AppReadme\n","import { Row, Col, Image } from 'antd'\nimport { StaticLoader } from 'os/components/appLoader'\n\nimport register from 'senhub.register'\n\nconst AppPanel = ({\n  appId,\n  onClick = () => {},\n}: {\n  appId: string\n  onClick?: () => void\n}) => {\n  return (\n    <StaticLoader\n      type=\"panel\"\n      {...register[appId]}\n      render={(src) => (\n        <Row>\n          <Col span={24} style={{ lineHeight: 0 }}>\n            <Image src={src} width=\"100%\" onClick={onClick} preview={false} />\n          </Col>\n        </Row>\n      )}\n    />\n  )\n}\n\nexport default AppPanel\n","import { Row, Col, Card, Typography, Divider } from 'antd'\nimport AppIcon from 'os/components/appIcon'\nimport AppPanel from 'os/components/appPanel'\n\nimport register from 'senhub.register'\n\nconst TitleAndValue = ({\n  title,\n  value,\n  divider = false,\n}: {\n  title: string\n  value: string\n  divider?: boolean\n}) => {\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Row gutter={[8, 8]}>\n          <Col flex=\"auto\">\n            <Typography.Text type=\"secondary\">{title}</Typography.Text>\n          </Col>\n          <Col>\n            <Typography.Text>{value}</Typography.Text>\n          </Col>\n        </Row>\n      </Col>\n      {divider ? (\n        <Col span={24}>\n          <Divider style={{ marginTop: 0, marginBottom: 8 }} />\n        </Col>\n      ) : null}\n    </Row>\n  )\n}\n\nconst HeroPanel = ({ appId }: { appId: string }) => {\n  const {\n    description,\n    author: { name, email },\n    name: appName,\n  } = register[appId]\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <AppPanel appId={appId} />\n      </Col>\n      <Col span={24}>\n        <Card>\n          <Row gutter={[16, 16]}>\n            <Col>\n              <AppIcon appId={appId} size={48} name={false} />\n            </Col>\n            <Col span={24}>\n              <TitleAndValue title=\"Name\" value={appName} divider />\n            </Col>\n            <Col span={24}>\n              <TitleAndValue title=\"Author\" value={name} divider />\n            </Col>\n            <Col span={24}>\n              <TitleAndValue title=\"Support\" value={email} divider />\n            </Col>\n            <Col span={24}>\n              <TitleAndValue title=\"Description\" value={description} />\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default HeroPanel\n","import { useDispatch, useSelector } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { account } from '@senswap/sen-js'\n\nimport { Row, Col, Button, Space } from 'antd'\nimport IonIcon from 'shared/ionicon'\nimport AppReadme from 'os/components/appReadme'\nimport HeroPanel from './heroPanel'\n\nimport { RootDispatch, RootState } from 'os/store'\nimport { installApp, uninstallApp } from 'os/store/page.reducer'\nimport { useMemo } from 'react'\n\nconst AppViewer = () => {\n  const history = useHistory()\n  const dispatch = useDispatch<RootDispatch>()\n  const { appId } = useParams<{ appId: string }>()\n  const { address } = useSelector((state: RootState) => state.wallet)\n  const { appPage } = useSelector((state: RootState) => state.page)\n\n  const installed = useMemo(() => {\n    return account.isAddress(address) && appPage.flat().includes(appId)\n  }, [address, appPage, appId])\n  const to = () => history.push(`/app/${appId}`)\n  const onBack = () => history.goBack()\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col xs={{ span: 24 }} md={{ span: 8 }}>\n        <HeroPanel appId={appId} />\n      </Col>\n      <Col xs={{ span: 24 }} md={{ span: 16 }}>\n        <Row gutter={[24, 24]}>\n          <Col flex=\"auto\">\n            <Button\n              className=\"contained\"\n              icon={<IonIcon name=\"arrow-back-outline\" />}\n              onClick={onBack}\n            >\n              Back\n            </Button>\n          </Col>\n          <Col>\n            {installed ? (\n              <Space>\n                <Button\n                  icon={<IonIcon name=\"trash-outline\" />}\n                  onClick={() => dispatch(uninstallApp(appId))}\n                >\n                  Uninstall\n                </Button>\n                <Button type=\"primary\" onClick={to}>\n                  Open\n                </Button>\n              </Space>\n            ) : (\n              <Button\n                type=\"primary\"\n                icon={<IonIcon name=\"cloud-download-outline\" />}\n                onClick={() => dispatch(installApp(appId))}\n              >\n                Install\n              </Button>\n            )}\n          </Col>\n          <Col span={24}>\n            <AppReadme appId={appId} />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default AppViewer\n","import { Fragment, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { notification } from 'antd'\n\nimport { RootDispatch } from 'os/store'\nimport { resize } from 'os/store/ui.reducer'\nimport IonIcon from 'shared/ionicon'\n\nconst UIWatcher = () => {\n  const [api, contextHolder] = notification.useNotification()\n  const dispatch = useDispatch<RootDispatch>()\n\n  // Notification system\n  window.notify = ({\n    type,\n    description,\n    onClick = () => {},\n  }: SentreNotification) => {\n    return api[type]({\n      message: type.toUpperCase(),\n      description,\n      onClick,\n      style: { cursor: 'pointer' },\n      closeIcon: <IonIcon name=\"close-outline\" />,\n    })\n  }\n\n  // Listen window events\n  useEffect(() => {\n    window.onresize = () => dispatch(resize())\n  }, [dispatch])\n\n  return <Fragment>{contextHolder}</Fragment>\n}\n\nexport default UIWatcher\n","import { useEffect, useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\n\nimport { updateWallet } from 'os/store/wallet.reducer'\nimport { RootDispatch, RootState } from 'os/store'\n\n// Watch id\nlet watchId: any = null\n\nconst WalletWatcher = () => {\n  const dispatch = useDispatch<RootDispatch>()\n  const { address } = useSelector((state: RootState) => state.wallet)\n\n  const watchData = useCallback(async () => {\n    if (!account.isAddress(address)) {\n      try {\n        await window.sentre.lamports.unwatch(watchId)\n      } catch (er) {\n        /* Nothing */\n      }\n      watchId = null\n    } else {\n      if (watchId) return console.warn('Already watched')\n      watchId = window.sentre.lamports.watch(\n        address,\n        (er: string | null, re: number | null) => {\n          if (er) return console.warn(er)\n          return dispatch(updateWallet({ lamports: BigInt(re || 0) }))\n        },\n      )\n    }\n  }, [dispatch, address])\n\n  useEffect(() => {\n    watchData()\n  }, [watchData])\n\n  return null\n}\n\nexport default WalletWatcher\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account, AccountData } from '@senswap/sen-js'\n\n/**\n * Interface & Utility\n */\n\nexport type State = Record<string, AccountData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'accounts'\nconst initialState: State = {}\n\n/**\n * Actions\n */\n\nexport const getAccounts = createAsyncThunk(\n  `${NAME}/getAccounts`,\n  async ({ owner }: { owner: string }) => {\n    if (!account.isAddress(owner))\n      throw new Error('Invalid owner/wallet address')\n    const { splt } = window.sentre\n    const ownerPublicKey = account.fromAddress(owner)\n    const { value } = await splt.connection.getTokenAccountsByOwner(\n      ownerPublicKey,\n      { programId: splt.spltProgramId },\n    )\n    let bulk: State = {}\n    value.forEach(({ pubkey, account: { data: buf } }) => {\n      const address = pubkey.toBase58()\n      const data = splt.parseAccountData(buf)\n      return (bulk[address] = data)\n    })\n    return bulk\n  },\n)\n\nexport const getAccount = createAsyncThunk<\n  State,\n  { address: string },\n  { state: any }\n>(`${NAME}/getAccount`, async ({ address }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid account address')\n  const {\n    accounts: { [address]: data },\n  } = getState()\n  if (data) return { [address]: data }\n  const { splt } = window.sentre\n  const raw = await splt.getAccountData(address)\n  return { [address]: raw }\n})\n\nexport const upsetAccount = createAsyncThunk<\n  State,\n  { address: string; data: AccountData },\n  { state: any }\n>(`${NAME}/upsetAccount`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteAccount = createAsyncThunk(\n  `${NAME}/deleteAccount`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(getAccounts.fulfilled, (state, { payload }) => payload)\n      .addCase(\n        getAccount.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetAccount.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteAccount.fulfilled,\n        (state, { payload }) => void delete state[payload.address],\n      ),\n})\n\nexport default slice.reducer\n","import { Fragment, useCallback, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\n\nimport { RootDispatch, RootState } from 'os/store'\nimport { getAccounts, upsetAccount } from 'os/store/accounts.reducer'\n\n// Watch id\nlet watchId = 0\nlet prevLamports: BigInt | undefined = undefined\n\nconst AccountWatcher = () => {\n  const dispatch = useDispatch<RootDispatch>()\n  const { address: walletAddress, lamports } = useSelector(\n    (state: RootState) => state.wallet,\n  )\n\n  // First-time fetching\n  const fetchData = useCallback(async () => {\n    try {\n      if (!account.isAddress(walletAddress)) return\n      await dispatch(getAccounts({ owner: walletAddress })).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: 'Cannot fetch data of accounts',\n      })\n    }\n  }, [dispatch, walletAddress])\n  // Watch account changes\n  const watchData = useCallback(async () => {\n    if (!account.isAddress(walletAddress))\n      return console.warn('Wallet is not connected')\n    if (watchId) return console.warn('Already watched')\n    const { splt } = window.sentre || {}\n    const filters = [{ memcmp: { bytes: walletAddress, offset: 32 } }]\n    watchId = splt?.watch((er: string | null, re: any) => {\n      if (er) return console.error(er)\n      const { address, data } = re\n      return dispatch(upsetAccount({ address, data }))\n    }, filters)\n  }, [dispatch, walletAddress])\n\n  // When we close accounts, there a high chance\n  // that the next balance will be greater than the current balance\n  // We use this trick to reload relevant list\n  useEffect(() => {\n    if (typeof prevLamports !== 'undefined' && lamports > prevLamports) {\n      dispatch(getAccounts({ owner: walletAddress }))\n    }\n    prevLamports = lamports\n  }, [dispatch, walletAddress, lamports])\n\n  useEffect(() => {\n    fetchData()\n    watchData()\n    // Unwatch (cancel socket)\n    return () => {\n      ;(async () => {\n        try {\n          await window.sentre.splt.unwatch(watchId)\n        } catch (er) {}\n      })()\n      watchId = 0\n    }\n  }, [fetchData, watchData])\n\n  return <Fragment />\n}\n\nexport default AccountWatcher\n","import { AccountInfo, PublicKey } from '@solana/web3.js'\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account, PoolData } from '@senswap/sen-js'\nimport configs from 'os/configs'\n\nconst {\n  sol: { taxmanAddress },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type State = Record<string, PoolData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'pools'\nconst initialState: State = {}\n\n/**\n * Actions\n */\n\nexport const getPools = createAsyncThunk(`${NAME}/getPools`, async () => {\n  const { swap } = window.sentre\n  // Get all pools\n  const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n    await swap.connection.getProgramAccounts(swap.swapProgramId, {\n      filters: [\n        { dataSize: 257 },\n        { memcmp: { bytes: taxmanAddress, offset: 65 } },\n      ],\n    })\n  let bulk: State = {}\n  value.forEach(({ pubkey, account: { data: buf } }) => {\n    const address = pubkey.toBase58()\n    const data = swap.parsePoolData(buf)\n    bulk[address] = data\n  })\n  return bulk\n})\n\nexport const getPool = createAsyncThunk<\n  State,\n  { address: string },\n  { state: any }\n>(`${NAME}/getPool`, async ({ address }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid pool address')\n  const {\n    pools: { [address]: data },\n  } = getState()\n  if (data) return { [address]: data }\n  const { swap } = window.sentre\n  const raw = await swap.getPoolData(address)\n  return { [address]: raw }\n})\n\nexport const upsetPool = createAsyncThunk<\n  State,\n  { address: string; data: PoolData },\n  { state: any }\n>(`${NAME}/upsetPool`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid pool address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(getPools.fulfilled, (state, { payload }) => payload)\n      .addCase(\n        getPool.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetPool.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { Fragment, useCallback, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\n\nimport { RootDispatch, RootState } from 'os/store'\nimport { getPools, upsetPool } from 'os/store/pools.reducer'\nimport configs from 'os/configs'\n\nconst {\n  sol: { taxmanAddress },\n} = configs\n\n// Watch id\nlet watchId = 0\n\nconst PoolWatcher = () => {\n  const dispatch = useDispatch<RootDispatch>()\n  const { address: walletAddress } = useSelector(\n    (state: RootState) => state.wallet,\n  )\n\n  // First-time fetching\n  const fetchData = useCallback(async () => {\n    try {\n      if (!account.isAddress(walletAddress)) return\n      await dispatch(getPools()).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: 'Cannot fetch data of pools',\n      })\n    }\n  }, [dispatch, walletAddress])\n  // Watch account changes\n  const watchData = useCallback(async () => {\n    if (watchId) return console.warn('Already watched')\n    const { swap } = window.sentre || {}\n    const filters = [{ memcmp: { bytes: taxmanAddress, offset: 65 } }]\n    watchId = swap?.watch((er: string | null, re: any) => {\n      if (er) return console.error(er)\n      const { address, data } = re\n      return dispatch(upsetPool({ address, data }))\n    }, filters)\n  }, [dispatch])\n\n  useEffect(() => {\n    fetchData()\n    watchData()\n    // Unwatch (cancel socket)\n    return () => {\n      ;(async () => {\n        try {\n          await window.sentre.swap.unwatch(watchId)\n        } catch (er) {}\n      })()\n      watchId = 0\n    }\n  }, [fetchData, watchData])\n\n  return <Fragment />\n}\n\nexport default PoolWatcher\n","import { Fragment } from 'react'\nimport UIWatcher from './ui.watcher'\nimport WalletWatcher from './wallet.watcher'\nimport AccountWatcher from './account.watcher'\nimport PoolWatcher from './pool.watcher'\n\nconst Watcher = () => {\n  return (\n    <Fragment>\n      <UIWatcher />\n      <WalletWatcher />\n      <AccountWatcher />\n      <PoolWatcher />\n    </Fragment>\n  )\n}\n\nexport default Watcher\n","import { Route, Switch, Redirect } from 'react-router-dom'\n\nimport { Layout, Row, Col, Card, Affix } from 'antd'\nimport PrivateRoute from 'os/components/privateRoute'\nimport Header from 'os/view/header'\nimport Welcome from 'os/view/welcome'\nimport Dashboard from 'os/view/dashboard'\nimport Page from 'os/view/page'\nimport Market from 'os/view/market'\nimport AppViewer from './market/appViewer'\n\nimport Watcher from 'os/view/watcher'\nimport 'os/static/styles/index.os.less'\n\nconst View = () => {\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      {/* Header */}\n      <Affix>\n        <Card\n          style={{\n            marginBottom: 12,\n            borderRadius: '0px 0px 16px 16px',\n          }}\n          bodyStyle={{ padding: 16 }}\n          bordered={false}\n        >\n          <Header />\n        </Card>\n      </Affix>\n      {/* Body */}\n      <Layout style={{ padding: 12 }}>\n        <Row gutter={[24, 24]}>\n          <Col span={24}>\n            <Switch>\n              <Route exact path=\"/welcome\" component={Welcome} />\n              <Route exact path=\"/dashboard\" component={Dashboard} />\n              <PrivateRoute exact path=\"/app/:appId\" component={Page} />\n              <Route exact path=\"/store\" component={Market} />\n              <Route exact path=\"/store/:appId\" component={AppViewer} />\n              <Redirect from=\"*\" to=\"/welcome\" />\n            </Switch>\n          </Col>\n        </Row>\n      </Layout>\n      {/* In-Background Run Jobs */}\n      <Watcher />\n    </Layout>\n  )\n}\n\nexport default View\n","// Bugfix performance\n// https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/Troubleshooting.md#excessive-use-of-memory-and-cpu\nexport const devTools = (appName: string): any => {\n  if (process.env.REACT_APP_ENV !== 'development') return false\n  return {\n    name: appName,\n    actionSanitizer: ({ payload, type }: { payload: any; type: string }) => ({\n      payload,\n      type,\n    }),\n  }\n}\n\n// BigInt Serialization Middleware\n// https://redux-toolkit.js.org/api/serializabilityMiddleware\nconst isPlain = (val: any): boolean => {\n  const isPlainObject = (obj: object): boolean => {\n    if (obj === null) return false\n    const proto = Object.getPrototypeOf(obj)\n    return proto !== null && Object.getPrototypeOf(proto) === null\n  }\n  return (\n    typeof val === 'undefined' ||\n    val === null ||\n    typeof val === 'string' ||\n    typeof val === 'boolean' ||\n    typeof val === 'number' ||\n    Array.isArray(val) ||\n    isPlainObject(val) ||\n    typeof val === 'bigint'\n  )\n}\nBigInt.prototype.toJSON = function () {\n  return this.toString() // https://github.com/GoogleChromeLabs/jsbi/issues/30\n}\nexport const bigintSerializationMiddleware = {\n  serializableCheck: {\n    isSerializable: isPlain,\n  },\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account, MintData } from '@senswap/sen-js'\n\n/**\n * Interface & Utility\n */\n\nexport type State = Record<string, MintData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'mints'\nconst initialState: State = {}\n\n/**\n * Actions\n */\n\nexport const getMint = createAsyncThunk<\n  State,\n  { address: string; force: boolean },\n  { state: any }\n>(`${NAME}/getMint`, async ({ address, force }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid mint address')\n  if (!force) {\n    const {\n      accounts: { [address]: data },\n    } = getState()\n    if (data) return { [address]: data }\n  }\n  const { splt } = window.sentre\n  const raw = await splt.getMintData(address)\n  return { [address]: raw }\n})\n\nexport const upsetMint = createAsyncThunk<\n  State,\n  { address: string; data: MintData },\n  { state: any }\n>(`${NAME}/upsetMint`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteMint = createAsyncThunk(\n  `${NAME}/deleteMint`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getMint.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetMint.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteMint.fulfilled,\n        (state, { payload }) => void delete state[payload.address],\n      ),\n})\n\nexport default slice.reducer\n","import { configureStore } from '@reduxjs/toolkit'\nimport { devTools, bigintSerializationMiddleware } from 'shared/devTools'\n\nimport ui from './ui.reducer'\nimport flags from './flags.reducer'\nimport page from './page.reducer'\nimport wallet from './wallet.reducer'\nimport accounts from './accounts.reducer'\nimport mints from './mints.reducer'\nimport pools from './pools.reducer'\n\nconst store = configureStore({\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware(bigintSerializationMiddleware),\n  devTools: devTools('sentre'),\n  reducer: {\n    ui,\n    flags,\n    page,\n    wallet,\n    accounts,\n    mints,\n    pools,\n  },\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type RootDispatch = typeof store.dispatch\nexport default store\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { render } from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\nimport { ConfigProvider } from 'antd'\nimport View from 'os/view'\n\nimport store from 'os/store'\nimport reportWebVitals from 'reportWebVitals'\n\nrender(\n  <Provider store={store}>\n    <ConfigProvider prefixCls=\"sentre\">\n      <BrowserRouter>\n        <View />\n      </BrowserRouter>\n    </ConfigProvider>\n  </Provider>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"names":["Component","component","rest","walletAddress","useSelector","state","wallet","address","render","useCallback","props","pathname","encodeURI","window","location","href","replace","origin","account","Redirect","to","Route","forwardRef","ref","name","className","cln","KEY","driver","localStorage","convert","value","JSON","parse","e","storage","set","key","data","getItem","setItem","stringify","get","clear","net","getNetwork","onSwitchNetwork","reload","SOLVARS","spltAddress","splataAddress","sol","devnet","node","chainId","senAddress","swapAddress","taxmanAddress","testnet","mainnet","initializeWindowSenOs","configs","sentre","lamports","Lamports","splt","SPLT","swap","Swap","destroyWindowSenOs","disconnect","NAME","initialState","visible","BigInt","openWallet","createAsyncThunk","closeWallet","connectWallet","Error","getAddress","getLamports","updateWallet","disconnectWallet","createSlice","reducers","extraReducers","builder","addCase","fulfilled","payload","Object","assign","sessionStorage","session","walletType","getProvider","signTransaction","transaction","rawSignTransaction","signature","publicKey","addSignature","signMessage","message","verifySignature","this","SecretKeyWallet","secretKey","_setSecretKey","keypair","provider","toBase58","confirm","signData","serializeMessage","nacl","Buffer","from","toString","valid","BaseWallet","KeystoreWallet","keystore","password","Coin98Wallet","coin98","request","method","feePayer","params","sig","decode","PhantomWallet","solana","isPhantom","isConnected","connect","Promise","resolve","on","encodedMsg","TextEncoder","encode","bufSig","toBuffer","SolletWallet","connected","sign","WalletAdapter","SlopeWallet","Slope","msg","PublicKey","slopeAddress","dispatch","useDispatch","notify","type","description","unwrap","Card","onClick","style","cursor","bordered","hoverable","Row","gutter","justify","Col","Avatar","size","shape","src","COIN98","span","margin","textAlign","PHANTOM","SOLLET","onClose","useState","setPassword","setKeystore","useEffect","ks","Modal","onCancel","closeIcon","footer","Typography","Input","placeholder","onChange","target","iconRender","Button","icon","fileDownload","disabled","filename","setFilename","setVisible","refFile","useRef","Space","align","rel","xs","md","suffix","marginRight","current","click","readOnly","accept","files","file","reader","FileReader","readAsText","onloadend","result","display","marginTop","setSecretKey","acc","SLOPE","advance","setAdvance","level","flex","Divider","plain","orientation","Tooltip","title","Switch","checked","checkedChildren","unCheckedChildren","height","reconnect","er","block","Fragment","lite","history","useHistory","liteLogo","fullLogo","alt","push","asyncWait","ms","setTimeout","shortenAddress","num","delimiter","substring","length","balance","numbro","utils","format","bodyStyle","padding","color","open","addressOrTxId","ErrorBoundary","support","remoteUrl","failed","error","setState","Boolean","children","RemoteStatic","manifest","useRemoteModule","cloneElement","StaticLoader","url","appId","scope","module","Suspense","fallback","Spin","RemoteComponent","default","PageLoader","Skeleton","active","WidgetLoader","shared","process","senhub","development","staging","production","author","email","register","direction","width","fontSize","Math","floor","index","items","setNodeRef","useDroppable","id","isDroppableZone","transition","background","borderRadius","minHeight","useSortable","attributes","listeners","transform","CSS","getInfix","innerWidth","infix","touchable","navigator","maxTouchPoints","actionCenterVisible","resize","setActionCenterVisible","IPFS","_ipfs","ipfs","create","cid","isCID","cat","stream","raw","chunk","add","path","isIPFS","intervalId","searching","dbName","createInstance","localForage","storeName","dropInstance","instance","all","appIds","flat","concat","iterate","backup","restore","troubleshoot","appPage","Array","isArray","map","row","filter","farvoriteAppIds","loadPage","_","getState","db","PDB","updatePage","pdb","installApp","page","includes","newAppPage","uninstallApp","_appId","mixedStrategy","intersecting","rectIntersection","closestCorners","pages","internalPages","setInternalPages","activeId","setActiveId","actionId","setActionId","sensors","useSensors","useSensor","MouseSensor","TouchSensor","findContainer","pageIndex","appIndex","forEach","i","j","onDragOver","over","startsWith","activePageIndex","activeAppIndex","overPageIndex","overAppIndex","newPages","activePage","overPage","newPage","arrayMove","indexOf","splice","collisionDetection","onDragStart","onDragEnd","pageIdx","val","idx","undefined","opacity","editable","setEditable","setPages","mode","visited","setVisited","prevFlags","flags","setMode","onSwitch","wrap","Select","defaultValue","connection","Connection","parseMessage","status","networkStatus","setNetworkStatus","ping","onLine","start","Date","now","getVersion","end","duration","clearInterval","setInterval","Badge","dot","onBackup","console","log","re","onRestore","ui","Drawer","closable","contentWrapperStyle","maxWidth","destroyOnClose","Tabs","overflow","tabBarExtraContent","destroyInactiveTabPane","tab","useRouteMatch","offset","NavButton","iconName","route","search","URLSearchParams","redirect","decodeURI","useParams","PRESET","tokenize","context","minlength","doc","text","limit","split","word","Document","document","field","keys","loading","setLoading","keywords","setKeywords","setAppIds","useLocation","onSearch","engine","SearchEngine","clearTimeout","scrollTo","parseParams","marginLeft","Markdown","createRef","fetch","txt","Remarkable","html","innerHTML","lineHeight","Image","preview","TitleAndValue","divider","marginBottom","appName","installed","useMemo","goBack","notification","api","contextHolder","toUpperCase","onresize","watchId","watchData","unwatch","warn","watch","getAccounts","owner","ownerPublicKey","getTokenAccountsByOwner","programId","spltProgramId","bulk","pubkey","buf","parseAccountData","getAccount","accounts","getAccountData","upsetAccount","deleteAccount","prevLamports","fetchData","filters","memcmp","bytes","getPools","getProgramAccounts","swapProgramId","dataSize","parsePoolData","getPool","pools","getPoolData","upsetPool","Layout","Affix","exact","Welcome","Dashboard","Page","Market","AppViewer","prototype","toJSON","bigintSerializationMiddleware","serializableCheck","isSerializable","obj","proto","getPrototypeOf","isPlainObject","getMint","force","getMintData","upsetMint","deleteMint","configureStore","middleware","getDefaultMiddleware","devTools","reducer","mints","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Provider","store","ConfigProvider","prefixCls","BrowserRouter","getElementById","reportWebVitals"],"sourceRoot":""}