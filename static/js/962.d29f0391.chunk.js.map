{"version":3,"file":"static/js/962.d29f0391.chunk.js","mappings":"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","sources":["components/ionicon.tsx","helpers/storage.ts","configs/runtime.ts","configs/manifest.config.ts","configs/sol.config.ts","configs/index.ts","store/wallet.reducer.ts","helpers/session.ts","view/header/wallet/lib/baseWallet.ts","view/header/wallet/lib/secretkeyWallet.ts","view/header/wallet/lib/keystoreWallet.ts","view/header/wallet/lib/coin98Wallet.ts","view/header/wallet/lib/phantomWallet.ts","view/header/wallet/lib/solletWallet.ts","view/header/wallet/lib/slopeWallet.ts","view/header/wallet/login/coin98/index.tsx","view/header/wallet/login/phantom/index.tsx","view/header/wallet/login/sollet/index.tsx","view/header/wallet/login/keystore/newKeystore.tsx","view/header/wallet/login/keystore/index.tsx","view/header/wallet/login/secretKey/index.tsx","static/images/slope.svg","view/header/wallet/login/slope/index.tsx","view/header/wallet/login/index.tsx","view/header/wallet/index.tsx","store/flags.reducer.ts","view/header/settings/mode.tsx","view/header/settings/network/netSwitch.tsx","view/header/settings/network/index.tsx","view/header/settings/index.tsx","helpers/util.ts","view/header/wallet/intro.tsx","static/images/sen.svg","view/watcher/ui.watcher.tsx","view/header/index.tsx","view/welcome/appIcon.tsx","senhub.manifest.ts","view/welcome/index.tsx","components/errorBoundary.tsx","components/appLoader.tsx","view/dashboard/index.tsx","view/page/index.tsx","store/ui.reducer.ts","view/watcher/wallet.watcher.ts","store/accounts.reducer.ts","view/watcher/account.watcher.tsx","store/pools.reducer.ts","view/watcher/pool.watcher.tsx","view/watcher/index.tsx","view/index.tsx","store/middleware.ts","store/devTools.ts","store/mints.reducer.ts","store/index.ts","reportWebVitals.ts","bootstrap.tsx"],"sourcesContent":["import { forwardRef, Suspense } from 'react'\nimport { useRemoteModule } from 'react-dynamic-remote-component'\n\nconst IonIcon = forwardRef<HTMLElement, { name: string; className?: string }>(\n  ({ name, className, ...props }, ref) => {\n    const cln = className ? 'anticon ' + className : 'anticon'\n    return (\n      <span className={cln} {...props}>\n        <ion-icon ref={ref} name={name} />\n      </span>\n    )\n  },\n)\n\nexport default IonIcon\n\nexport const RemoteIonIcon = forwardRef<\n  HTMLElement,\n  { name: string; className?: string }\n>((props, ref) => {\n  const { default: Component } = useRemoteModule({\n    url: 'https://descartesnetwork.github.io/senhub/index.js',\n    scope: 'senhub',\n    module: './ionicon',\n  })\n  return (\n    <Suspense fallback=\"ionicon\">\n      <Component {...props} ref={ref} />\n    </Suspense>\n  )\n})\n","const KEY = 'senhub'\nconst driver = window.localStorage\n\nconst convert = (value: string | null) => {\n  if (!value) return null\n  try {\n    return JSON.parse(value)\n  } catch (e) {\n    return null\n  }\n}\n\nconst storage = {\n  set: (key: string, value: any) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') data = {}\n    data[key] = value\n    driver.setItem(KEY, JSON.stringify(data))\n  },\n  get: (key: string) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') return null\n    return data[key]\n  },\n  clear: (key: string) => {\n    storage.set(key, null)\n  },\n}\n\nexport default storage\n","import storage from 'helpers/storage'\n\nexport type Env = 'development' | 'staging' | 'production'\nexport const env: Env = (process.env.REACT_APP_ENV as Env) || 'development'\n\nexport type Net = 'devnet' | 'testnet' | 'mainnet'\nexport const net: Net = (storage.get('network') as Net) || 'devnet'\n","import { Env } from './runtime'\n\nif (\n  typeof process.env.REACT_APP_ID !== 'string' ||\n  typeof process.env.REACT_APP_URL !== 'string' ||\n  typeof process.env.REACT_APP_SENHUB !== 'string'\n)\n  throw new Error('Please add REACT_APP_ID, REACT_APP_URL in .env!')\n\n/**\n * Contructor\n */\n\ntype Conf = {\n  appId: string\n  url: string\n  senhub: string\n}\n\nconst shared = {\n  appId: process.env.REACT_APP_ID,\n  url: process.env.REACT_APP_URL,\n  senhub: process.env.REACT_APP_SENHUB,\n}\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    ...shared,\n  },\n\n  /**\n   * Staging configurations\n   */\n  staging: {\n    ...shared,\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    ...shared,\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { Net } from './runtime'\n\nconst SOLVARS = {\n  spltAddress: 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n  splataAddress: 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n}\n\n/**\n * Contructor\n */\ntype Conf = {\n  node: string\n  chainId: 101 | 102 | 103\n  senAddress: string\n  swapAddress: string\n  taxmanAddress: string\n} & typeof SOLVARS\n\nconst conf: Record<Net, Conf> = {\n  /**\n   * Development configurations\n   */\n  devnet: {\n    ...SOLVARS,\n    node: 'https://api.devnet.solana.com',\n    chainId: 103,\n    senAddress: '5YwUkPdXLoujGkZuo9B4LsLKj3hdkDcfP4derpspifSJ',\n    swapAddress: '4erFSLP7oBFSVC1t35jdxmbfxEhYCKfoM6XdG2BLR3UF',\n    taxmanAddress: '8UaZw2jDhJzv5V53569JbCd3bD4BnyCfBH3sjwgajGS9',\n  },\n\n  /**\n   * Staging configurations\n   */\n  testnet: {\n    ...SOLVARS,\n    node: 'https://api.testnet.solana.com',\n    chainId: 102,\n    senAddress: '',\n    swapAddress: '',\n    taxmanAddress: '',\n  },\n\n  /**\n   * Production configurations\n   */\n  mainnet: {\n    ...SOLVARS,\n    node: 'https://api.mainnet-beta.solana.com',\n    chainId: 101,\n    senAddress: 'SENBBKVCM7homnf5RX9zqpf1GFe935hnbU4uVzY1Y6M',\n    swapAddress: 'SSW7ooZ1EbEognq5GosbygA3uWW1Hq1NsFq6TsftCFV',\n    taxmanAddress: '9doo2HZQEmh2NgfT3Yx12M89aoBheycYqH1eaR5gKb3e',\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { env, net } from './runtime'\nimport manifest from './manifest.config'\nimport sol from './sol.config'\n\nconst configs = {\n  env,\n  net,\n  manifest: manifest[env],\n  sol: sol[net],\n}\n\n/**\n * Module exports\n */\nexport default configs\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { Lamports, SPLT, Swap, WalletInterface } from '@senswap/sen-js'\n\nimport configs from 'configs'\n\n/**\n * Interface & Utility\n */\n\ndeclare global {\n  interface Window {\n    senhub: {\n      wallet: WalletInterface\n      lamports: Lamports\n      splt: SPLT\n      swap: Swap\n    }\n  }\n}\n\nexport type State = {\n  visible: boolean\n  address: string\n  lamports: bigint\n}\n\nconst initializeWindowSenOs = async (wallet: any) => {\n  const {\n    sol: { node, spltAddress, splataAddress, swapAddress },\n  } = configs\n  window.senhub = {\n    wallet: wallet,\n    lamports: new Lamports(node),\n    splt: new SPLT(spltAddress, splataAddress, node),\n    swap: new Swap(swapAddress, spltAddress, splataAddress, node),\n  }\n}\n\nconst destroyWindowSenOs = async () => {\n  if (window.senhub?.wallet) window.senhub.wallet.disconnect()\n  await initializeWindowSenOs(null)\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'wallet'\nconst initialState: State = {\n  visible: false,\n  address: '',\n  lamports: BigInt(0),\n}\n\n/**\n * Actions\n */\n\nexport const openWallet = createAsyncThunk(`${NAME}/openWallet`, async () => {\n  return { visible: true }\n})\n\nexport const closeWallet = createAsyncThunk(`${NAME}/closeWallet`, async () => {\n  return { visible: false }\n})\n\nexport const connectWallet = createAsyncThunk(\n  `${NAME}/connectWallet`,\n  async (wallet: any) => {\n    if (!wallet) throw new Error('Invalid wallet instance')\n    await initializeWindowSenOs(wallet)\n    const address = await wallet.getAddress()\n    const lamports = await window.senhub.lamports.getLamports(address)\n    return { address, lamports: BigInt(lamports), visible: false }\n  },\n)\n\nexport const updateWallet = createAsyncThunk(\n  `${NAME}/updateWallet`,\n  async ({ lamports }: Partial<State>) => {\n    return { lamports }\n  },\n)\n\nexport const disconnectWallet = createAsyncThunk(\n  `${NAME}/disconnectWallet`,\n  async () => {\n    await destroyWindowSenOs()\n    window.location.reload() // Reset all redux store\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        openWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        closeWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        connectWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        updateWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        disconnectWallet.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","const KEY = 'senhub'\nconst driver = window.sessionStorage\n\nconst convert = (value: string | null) => {\n  try {\n    if (!value) return null\n    return JSON.parse(value)\n  } catch (e) {\n    return false\n  }\n}\n\nconst session = {\n  set: (key: string, value: any) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') data = {}\n    data[key] = value\n    driver.setItem(KEY, JSON.stringify(data))\n  },\n\n  get: (key: string) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') return null\n    return data[key]\n  },\n\n  clear: (key: string) => {\n    session.set(key, null)\n  },\n}\n\nexport default session\n","import { Transaction } from '@solana/web3.js'\nimport {\n  WalletInterface,\n  Provider,\n  Signature,\n  SignedMessage,\n} from '@senswap/sen-js'\n\nimport session from 'helpers/session'\n\nclass BaseWallet implements WalletInterface {\n  readonly walletType: string\n\n  constructor(walletType: string) {\n    this.walletType = walletType\n    session.set('WalletType', this.walletType)\n  }\n\n  getProvider = async (): Promise<Provider> => {\n    throw new Error('Wallet is not connected')\n  }\n\n  getAddress = async (): Promise<string> => {\n    throw new Error('Wallet is not connected')\n  }\n\n  signTransaction = async (transaction: Transaction): Promise<Transaction> => {\n    const { signature, publicKey } = await this.rawSignTransaction(transaction)\n    transaction.addSignature(publicKey, signature)\n    return transaction\n  }\n\n  rawSignTransaction = async (transaction: Transaction): Promise<Signature> => {\n    throw new Error('Wallet is not connected')\n  }\n\n  signMessage = async (message: string): Promise<SignedMessage> => {\n    throw new Error('Wallet is not connected')\n  }\n\n  verifySignature = async (\n    signature: string,\n    message: string,\n    address?: string,\n  ): Promise<boolean> => {\n    throw new Error('Wallet is not connected')\n  }\n\n  disconnect = async (): Promise<void> => {\n    session.clear('WalletType')\n    const provider = await this.getProvider()\n    provider.disconnect()\n  }\n}\n\nexport default BaseWallet\n","import { Transaction, Keypair } from '@solana/web3.js'\nimport * as nacl from 'tweetnacl'\nimport { account, Provider, Signature } from '@senswap/sen-js'\n\nimport BaseWallet from './baseWallet'\nimport session from 'helpers/session'\n\ntype ExpanedProvider = Provider & { keypair: Keypair }\n\nclass SecretKeyWallet extends BaseWallet {\n  constructor(secretKey: string) {\n    super('SecretKey')\n\n    this._setSecretKey(secretKey)\n  }\n\n  private _setSecretKey = (secretKey: string): void => {\n    if (!secretKey) throw new Error('Invalid secret key')\n    session.set('SecretKey', secretKey)\n  }\n\n  getProvider = async (): Promise<ExpanedProvider> => {\n    const secretKey = session.get('SecretKey')\n    const keypair = account.fromSecretKey(secretKey)\n    if (!keypair) throw new Error('Cannot get the keystore-based provider')\n    const provider = {\n      keypair,\n      disconnect: () => session.clear('SecretKey'),\n    }\n    return provider\n  }\n\n  getAddress = async () => {\n    const { keypair } = await this.getProvider()\n    return keypair.publicKey.toBase58()\n  }\n\n  rawSignTransaction = async (transaction: Transaction) => {\n    const confirmed = window.confirm('Please confirm to sign the traction!')\n    if (!confirmed) throw new Error('User rejects to sign the transaction')\n    const { keypair } = await this.getProvider()\n    const signData = transaction.serializeMessage()\n    const publicKey = keypair.publicKey\n    const signature = nacl.sign.detached(signData, keypair.secretKey)\n    return { publicKey, signature } as Signature\n  }\n\n  signMessage = async (message: string) => {\n    if (!message) throw new Error('Message must be a non-empty string')\n    const confirmed = window.confirm(\n      `Please confirm to sign the message! Message: ${message}`,\n    )\n    if (!confirmed) throw new Error('User rejects to sign the message')\n    const { keypair } = await this.getProvider()\n    const secretKey = Buffer.from(keypair.secretKey).toString('hex')\n    const data = account.signMessage(message, secretKey)\n    return { ...data }\n  }\n\n  verifySignature = async (\n    signature: string,\n    message: string,\n    address?: string,\n  ) => {\n    address = address || (await this.getAddress())\n    const valid = account.verifySignature(address, signature, message)\n    return valid as boolean\n  }\n}\n\nexport default SecretKeyWallet\n","import { Transaction, Keypair } from '@solana/web3.js'\nimport * as nacl from 'tweetnacl'\nimport { account, Keystore, Provider, Signature } from '@senswap/sen-js'\n\nimport BaseWallet from './baseWallet'\nimport session from 'helpers/session'\n\ntype ExpanedProvider = Provider & { keypair: Keypair }\n\nclass KeystoreWallet extends BaseWallet {\n  constructor(keystore: Keystore, password: string) {\n    super('SecretKey')\n\n    this._setSecretKey(keystore, password)\n  }\n\n  private _setSecretKey = (keystore: Keystore, password: string): void => {\n    const keypair = account.fromKeystore(keystore, password)\n    if (!keypair) throw new Error('Invalid ketstore or password')\n    const secretKey = Buffer.from(keypair.secretKey).toString('hex')\n    session.set('SecretKey', secretKey)\n  }\n\n  getProvider = async (): Promise<ExpanedProvider> => {\n    const secretKey = session.get('SecretKey')\n    const keypair = account.fromSecretKey(secretKey)\n    if (!keypair) throw new Error('Cannot get the keystore-based provider')\n    const provider = {\n      keypair,\n      disconnect: () => session.clear('SecretKey'),\n    }\n    return provider\n  }\n\n  getAddress = async () => {\n    const { keypair } = await this.getProvider()\n    return keypair.publicKey.toBase58()\n  }\n\n  rawSignTransaction = async (transaction: Transaction) => {\n    const confirmed = window.confirm('Please confirm to sign the traction!')\n    if (!confirmed) throw new Error('User rejects to sign the transaction')\n    const { keypair } = await this.getProvider()\n    const signData = transaction.serializeMessage()\n    const publicKey = keypair.publicKey\n    const signature = nacl.sign.detached(signData, keypair.secretKey)\n    return { publicKey, signature } as Signature\n  }\n\n  signMessage = async (message: string) => {\n    if (!message) throw new Error('Message must be a non-empty string')\n    const confirmed = window.confirm(\n      `Please confirm to sign the message! Message: ${message}`,\n    )\n    if (!confirmed) throw new Error('User rejects to sign the message')\n    const { keypair } = await this.getProvider()\n    const secretKey = Buffer.from(keypair.secretKey).toString('hex')\n    const data = account.signMessage(message, secretKey)\n    return { ...data }\n  }\n\n  verifySignature = async (\n    signature: string,\n    message: string,\n    address?: string,\n  ) => {\n    address = address || (await this.getAddress())\n    const valid = account.verifySignature(address, signature, message)\n    return valid as boolean\n  }\n}\n\nexport default KeystoreWallet\n","import { Transaction } from '@solana/web3.js'\nimport { account, Signature, SignedMessage } from '@senswap/sen-js'\nimport { decode } from 'bs58'\n\nimport BaseWallet from './baseWallet'\n\ndeclare global {\n  interface Window {\n    coin98: any\n  }\n}\n\nclass Coin98Wallet extends BaseWallet {\n  constructor() {\n    super('Coin98')\n  }\n\n  getProvider = async () => {\n    const { sol } = window?.coin98 || {}\n    if (!sol) throw new Error('Wallet is not connected')\n    return sol\n  }\n\n  getAddress = async () => {\n    const provider = await this.getProvider()\n    const [address] = (await provider.request({ method: 'sol_accounts' })) || []\n    if (!account.isAddress(address))\n      throw new Error('There is no Solana account')\n    return address\n  }\n\n  rawSignTransaction = async (transaction: Transaction) => {\n    const provider = await this.getProvider()\n    const address = await this.getAddress()\n    const publicKey = account.fromAddress(address)\n    transaction.feePayer = publicKey\n    const { signature: sig } = await provider.request({\n      method: 'sol_sign',\n      params: [transaction],\n    })\n    const signature = decode(sig)\n    return { publicKey, signature } as Signature\n  }\n\n  signMessage = async (message: string) => {\n    if (!message) throw new Error('Message must be a non-empty string')\n    const provider = await this.getProvider()\n    const data = await provider.request({\n      method: 'sol_sign',\n      params: [message],\n    })\n    return data as SignedMessage\n  }\n\n  verifySignature = async (\n    signature: string,\n    message: string,\n    address?: string,\n  ) => {\n    address = address || (await this.getAddress())\n    const valid = await account.verifySignature(address, signature, message)\n    return valid as boolean\n  }\n}\n\nexport default Coin98Wallet\n","import { Transaction } from '@solana/web3.js'\nimport * as nacl from 'tweetnacl'\nimport { account, Signature, SignedMessage } from '@senswap/sen-js'\n\nimport BaseWallet from './baseWallet'\n\ndeclare global {\n  interface Window {\n    solana: any\n  }\n}\n\nclass PhantomWallet extends BaseWallet {\n  constructor() {\n    super('Phantom')\n  }\n\n  getProvider = async () => {\n    const { solana } = window\n    if (!solana?.isPhantom) throw new Error('Wallet is not connected')\n    if (solana.isConnected) return solana\n    solana.connect()\n    return await new Promise((resolve) =>\n      solana.on('connect', () => resolve(solana)),\n    )\n  }\n\n  getAddress = async () => {\n    const provider = await this.getProvider()\n    const address = provider.publicKey.toString()\n    if (!account.isAddress(address))\n      throw new Error('There is no Solana account')\n    return address\n  }\n\n  rawSignTransaction = async (transaction: Transaction) => {\n    const provider = await this.getProvider()\n    const address = await this.getAddress()\n    const publicKey = account.fromAddress(address)\n    transaction.feePayer = publicKey\n    const { signature } = await provider.signTransaction(transaction)\n    return { publicKey, signature } as Signature\n  }\n\n  signMessage = async (message: string) => {\n    if (!message) throw new Error('Message must be a non-empty string')\n    const provider = await this.getProvider()\n    const address = await this.getAddress()\n    const encodedMsg = new TextEncoder().encode(message)\n    const { signature: sig } = await provider.signMessage(encodedMsg, 'utf8')\n    const signature = Buffer.from(sig).toString('hex')\n    const data = { address, signature, message }\n    return data as SignedMessage\n  }\n\n  verifySignature = async (\n    signature: string,\n    message: string,\n    address?: string,\n  ) => {\n    address = address || (await this.getAddress())\n    const publicKey = account.fromAddress(address)\n    const bufSig = Buffer.from(signature, 'hex')\n    const encodedMsg = new TextEncoder().encode(message)\n    const valid = nacl.sign.detached.verify(\n      encodedMsg,\n      bufSig,\n      publicKey.toBuffer(),\n    )\n    return valid\n  }\n}\n\nexport default PhantomWallet\n","import { Transaction } from '@solana/web3.js'\nimport * as nacl from 'tweetnacl'\nimport { account, Provider, Signature, SignedMessage } from '@senswap/sen-js'\nimport WalletAdapter from '@project-serum/sol-wallet-adapter'\n\nimport BaseWallet from './baseWallet'\nimport configs from 'configs'\n\nconst PROVIDER_URL = 'https://www.sollet.io'\n\nclass SolletWallet extends BaseWallet {\n  private provider: WalletAdapter & Provider\n\n  constructor() {\n    super('Sollet')\n\n    const {\n      sol: { node },\n    } = configs\n    this.provider = new WalletAdapter(PROVIDER_URL, node)\n  }\n\n  getProvider = async () => {\n    if (!this.provider.connected) await this.provider.connect()\n    return this.provider\n  }\n\n  getAddress = async () => {\n    const provider = await this.getProvider()\n    if (!provider.publicKey) throw new Error('Cannot connect to Sollet')\n    return provider.publicKey.toBase58()\n  }\n\n  rawSignTransaction = async (transaction: Transaction) => {\n    const provider = await this.getProvider()\n    const address = await this.getAddress()\n    const publicKey = account.fromAddress(address)\n    transaction.feePayer = publicKey\n    const { signature } = await provider.signTransaction(transaction)\n    return { publicKey, signature } as Signature\n  }\n\n  signMessage = async (message: string) => {\n    if (!message) throw new Error('Message must be a non-empty string')\n    const provider = await this.getProvider()\n    const address = await this.getAddress()\n    const encodedMsg = new TextEncoder().encode(message)\n    const { signature: sig } = await provider.sign(encodedMsg, 'utf8')\n    const signature = Buffer.from(sig).toString('hex')\n    const data = { address, signature, message }\n    return data as SignedMessage\n  }\n\n  verifySignature = async (\n    signature: string,\n    message: string,\n    address?: string,\n  ) => {\n    address = address || (await this.getAddress())\n    const publicKey = account.fromAddress(address)\n    const bufSig = Buffer.from(signature, 'hex')\n    const encodedMsg = new TextEncoder().encode(message)\n    const valid = nacl.sign.detached.verify(\n      encodedMsg,\n      bufSig,\n      publicKey.toBuffer(),\n    )\n    return valid\n  }\n}\n\nexport default SolletWallet\n","import { Transaction, PublicKey } from '@solana/web3.js'\nimport * as nacl from 'tweetnacl'\nimport { account, Signature } from '@senswap/sen-js'\nimport { decode, encode } from 'bs58'\n\nimport BaseWallet from './baseWallet'\n\ndeclare global {\n  interface Window {\n    Slope: any\n  }\n}\n\nclass SlopeWallet extends BaseWallet {\n  private provider: any\n  constructor() {\n    super('Slope')\n    this.provider = null\n  }\n\n  getProvider = async () => {\n    const { Slope } = window || {}\n    if (!Slope) throw new Error('Cannot connect to Slope')\n    if (this.provider) return this.provider\n    this.provider = new Slope()\n    await this.provider.connect()\n    return this.provider\n  }\n\n  getAddress = async () => {\n    const provider = await this.getProvider()\n    const { data } = await provider.connect()\n    if (!data.publicKey) throw new Error('Wallet is not connected')\n    return data.publicKey\n  }\n\n  rawSignTransaction = async (transaction: Transaction) => {\n    const provider = await this.getProvider()\n    const message = encode(transaction.serializeMessage())\n    const { msg, data } = await provider.signTransaction(message)\n\n    if (!data.publicKey) throw new Error(msg)\n    const publicKey = new PublicKey(data.publicKey)\n    const signature = decode(data.signature)\n\n    return { publicKey, signature } as Signature\n  }\n\n  verifySignature = async (\n    signature: string,\n    message: string,\n    address?: string,\n  ) => {\n    const slopeAddress = address || (await this.getAddress())\n    const publicKey = account.fromAddress(slopeAddress)\n    const bufSig = Buffer.from(signature, 'hex')\n    const encodedMsg = new TextEncoder().encode(message)\n    const valid = nacl.sign.detached.verify(\n      encodedMsg,\n      bufSig,\n      publicKey.toBuffer(),\n    )\n    return valid\n  }\n}\n\nexport default SlopeWallet\n","import { useDispatch } from 'react-redux'\n\nimport { Row, Card, Col, Avatar } from 'antd'\n\nimport COIN98 from 'static/images/coin98.png'\nimport { RootDispatch } from 'store'\nimport { connectWallet } from 'store/wallet.reducer'\nimport { Coin98Wallet } from '../../lib'\n\nconst Coin98 = () => {\n  const dispatch = useDispatch<RootDispatch>()\n\n  const connect = async () => {\n    const { coin98 } = window\n    if (!coin98)\n      return window.notify({\n        type: 'warning',\n        description:\n          'Coin98 Wallet is not installed. If this is the first time you install Coin98 wallet, please restart your browser to complete the setup.',\n      })\n    const wallet = new Coin98Wallet()\n    try {\n      await dispatch(connectWallet(wallet)).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: (er as Error).message,\n      })\n    }\n  }\n\n  return (\n    <Card\n      onClick={connect}\n      style={{ cursor: 'pointer' }}\n      bordered={false}\n      hoverable\n    >\n      <Row gutter={[16, 16]} justify=\"center\">\n        <Col>\n          <Avatar size={64} shape=\"square\" src={COIN98} />\n        </Col>\n        <Col span={24}>\n          <p style={{ margin: 0, textAlign: 'center' }}>Coin98</p>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default Coin98\n","import { useDispatch } from 'react-redux'\n\nimport { Row, Card, Col, Avatar } from 'antd'\n\nimport PHANTOM from 'static/images/phantom.png'\nimport { RootDispatch } from 'store'\nimport { connectWallet } from 'store/wallet.reducer'\nimport { PhantomWallet } from '../../lib'\n\nconst Phantom = () => {\n  const dispatch = useDispatch<RootDispatch>()\n\n  const connect = async () => {\n    const { solana } = window\n    if (!solana?.isPhantom)\n      return window.notify({\n        type: 'warning',\n        description:\n          'Phantom Wallet is not installed. If this is the first time you install Phantom wallet, please restart your browser to complete the setup.',\n      })\n    const wallet = new PhantomWallet()\n    try {\n      await dispatch(connectWallet(wallet)).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: (er as Error).message,\n      })\n    }\n  }\n\n  return (\n    <Card\n      onClick={connect}\n      style={{ cursor: 'pointer' }}\n      bordered={false}\n      hoverable\n    >\n      <Row gutter={[16, 16]} justify=\"center\">\n        <Col>\n          <Avatar size={64} shape=\"square\" src={PHANTOM} />\n        </Col>\n        <Col span={24}>\n          <p style={{ margin: 0, textAlign: 'center' }}>Phantom</p>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default Phantom\n","import { useDispatch } from 'react-redux'\n\nimport { Row, Card, Col, Avatar } from 'antd'\n\nimport SOLLET from 'static/images/sollet.png'\nimport { RootDispatch } from 'store'\nimport { connectWallet } from 'store/wallet.reducer'\nimport { SolletWallet } from '../../lib'\n\nconst Sollet = () => {\n  const dispatch = useDispatch<RootDispatch>()\n\n  const connect = async () => {\n    const wallet = new SolletWallet()\n    try {\n      await dispatch(connectWallet(wallet)).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: (er as Error).message,\n      })\n    }\n  }\n\n  return (\n    <Card\n      onClick={connect}\n      style={{ cursor: 'pointer' }}\n      bordered={false}\n      hoverable\n    >\n      <Row gutter={[16, 16]} justify=\"center\">\n        <Col>\n          <Avatar size={64} shape=\"square\" src={SOLLET} />\n        </Col>\n        <Col span={24}>\n          <p style={{ margin: 0, textAlign: 'center' }}>Sollet</p>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default Sollet\n","import { ChangeEvent, useState, useEffect } from 'react'\nimport fileDownload from 'js-file-download'\nimport { keystore as ks, Keystore } from '@senswap/sen-js'\n\nimport { Row, Col, Button, Typography, Input, Modal } from 'antd'\nimport IonIcon from 'components/ionicon'\n\nconst NewKeyStore = ({\n  visible = false,\n  onClose = () => {},\n}: {\n  visible: boolean\n  onClose: () => void\n}) => {\n  const [password, setPassword] = useState('')\n  const [keystore, setKeystore] = useState<Keystore | null>(null)\n\n  useEffect(() => {\n    setPassword('')\n    setKeystore(null)\n  }, [visible])\n  useEffect(() => {\n    setKeystore(ks.gen(password))\n  }, [password])\n\n  const onDownload = () => {\n    if (!keystore)\n      return window.notify({\n        type: 'error',\n        description: 'Cannot download a empty keystore',\n      })\n    fileDownload(\n      JSON.stringify(keystore),\n      `senwallet-keystore-${keystore.publicKey}.json`,\n    )\n    return onClose()\n  }\n\n  return (\n    <Modal\n      visible={visible}\n      onCancel={onClose}\n      closeIcon={<IonIcon name=\"close\" />}\n      footer={null}\n    >\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Typography.Title>New Keystore</Typography.Title>\n          <Typography.Text>\n            The password is used to encrypt your keystore. You will need this\n            password to unlock your keystore later.\n          </Typography.Text>\n        </Col>\n        <Col span={24}>\n          <Input.Password\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e: ChangeEvent<HTMLInputElement>) =>\n              setPassword(e.target.value || '')\n            }\n            iconRender={(visible) =>\n              visible ? <IonIcon name=\"eye-off\" /> : <IonIcon name=\"eye\" />\n            }\n          />\n        </Col>\n        <Col span={24}>\n          <Row gutter={[16, 16]} justify=\"end\">\n            <Col>\n              <Button\n                type=\"primary\"\n                icon={<IonIcon name=\"cloud-download\" />}\n                onClick={onDownload}\n                disabled={!keystore || !keystore.publicKey}\n              >\n                Download\n              </Button>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Modal>\n  )\n}\n\nexport default NewKeyStore\n","import { ChangeEvent, useRef, useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { Row, Col, Space, Button, Typography, Input } from 'antd'\nimport IonIcon from 'components/ionicon'\nimport NewKeyStore from './newKeystore'\n\nimport { RootDispatch } from 'store'\nimport { connectWallet } from 'store/wallet.reducer'\nimport { KeystoreWallet } from '../../lib'\n\nconst KeyStore = () => {\n  const [password, setPassword] = useState('')\n  const [filename, setFilename] = useState('')\n  const [keystore, setKeystore] = useState(null)\n  const [visible, setVisible] = useState(false)\n\n  const refFile = useRef<HTMLInputElement>(null)\n  const dispatch = useDispatch<RootDispatch>()\n\n  const onKeystore = (e: ChangeEvent<HTMLInputElement>) => {\n    const [file]: any = e?.target?.files\n    if (file) {\n      const reader = new FileReader()\n      reader.readAsText(file)\n      reader.onloadend = () => {\n        setFilename(file.name)\n        setKeystore(JSON.parse(reader.result as string) || {})\n      }\n    }\n  }\n\n  const connect = async () => {\n    if (!keystore)\n      return window.notify({\n        type: 'warning',\n        description: 'Please upload your keystore',\n      })\n    if (!password)\n      return window.notify({\n        type: 'warning',\n        description: 'Please enter your password to unlock your wallet',\n      })\n    try {\n      const wallet = new KeystoreWallet(keystore as any, password)\n      await dispatch(connectWallet(wallet)).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: (er as Error).message,\n      })\n    }\n  }\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Space align=\"center\">\n          <IonIcon name=\"document-lock\" />\n          <Typography.Text>\n            {`Keystore ( `}\n            <Typography.Link\n              href=\"https://solflare.com\"\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              SolFlare\n            </Typography.Link>{' '}\n            {`compatible )`}\n          </Typography.Text>\n        </Space>\n      </Col>\n      <Col xs={{ span: 24 }} md={{ span: 12 }}>\n        <Input\n          placeholder=\"Filename\"\n          value={filename}\n          suffix={\n            <Button\n              type=\"text\"\n              icon={<IonIcon name=\"cloud-upload\" />}\n              style={{ marginRight: -8 }}\n              onClick={() => refFile.current?.click()}\n            >\n              Upload\n            </Button>\n          }\n          readOnly\n        />\n        <input\n          ref={refFile}\n          type=\"file\"\n          accept=\"application/json\"\n          onChange={onKeystore}\n          style={{ display: 'none' }}\n        />\n      </Col>\n      <Col xs={{ span: 24 }} md={{ span: 12 }}>\n        <Input\n          placeholder=\"Password\"\n          type=\"password\"\n          value={password}\n          onChange={(e: ChangeEvent<HTMLInputElement>) =>\n            setPassword(e.target.value || '')\n          }\n          suffix={\n            <Button\n              type=\"primary\"\n              onClick={connect}\n              icon={<IonIcon name=\"lock-open\" />}\n              style={{ marginRight: -8 }}\n            />\n          }\n        />\n      </Col>\n      <Col span={24} style={{ marginTop: -8 }}>\n        <Typography.Link onClick={() => setVisible(true)}>\n          <Space>\n            <IonIcon name=\"add-circle-outline\" />\n            <span>Create a keystore</span>\n          </Space>\n        </Typography.Link>\n      </Col>\n      <NewKeyStore visible={visible} onClose={() => setVisible(false)} />\n    </Row>\n  )\n}\n\nexport default KeyStore\n","import { ChangeEvent, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { account } from '@senswap/sen-js'\n\nimport { Row, Col, Typography, Input, Button, Space } from 'antd'\nimport IonIcon from 'components/ionicon'\n\nimport { RootDispatch } from 'store'\nimport { connectWallet } from 'store/wallet.reducer'\nimport { SecretKeyWallet } from '../../lib'\n\nconst SecretKey = () => {\n  const [secretKey, setSecretKey] = useState('')\n  const dispatch = useDispatch<RootDispatch>()\n\n  const connect = async () => {\n    if (!secretKey)\n      return window.notify({\n        type: 'warning',\n        description: 'Please enter your secret key',\n      })\n    const wallet = new SecretKeyWallet(secretKey)\n    try {\n      await dispatch(connectWallet(wallet)).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: (er as Error).message,\n      })\n    }\n  }\n\n  const onGen = () => {\n    const acc = account.createAccount()\n    const secretKey = Buffer.from(acc.secretKey).toString('hex')\n    return setSecretKey(secretKey)\n  }\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Space align=\"center\">\n          <IonIcon name=\"key\" />\n          <Typography.Text>Secret Key</Typography.Text>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Input\n          placeholder=\"Secret Key\"\n          onChange={(e: ChangeEvent<HTMLInputElement>) =>\n            setSecretKey(e.target.value || '')\n          }\n          value={secretKey}\n          suffix={\n            <Button\n              type=\"primary\"\n              onClick={connect}\n              icon={<IonIcon name=\"lock-open\" />}\n              style={{ marginRight: -8 }}\n            />\n          }\n        />\n      </Col>\n      <Col span={24} style={{ marginTop: -8 }}>\n        <Typography.Link onClick={onGen}>\n          <Space>\n            <IonIcon name=\"add-circle-outline\" />\n            <span>Create a secret key</span>\n          </Space>\n        </Typography.Link>\n      </Col>\n    </Row>\n  )\n}\n\nexport default SecretKey\n","var _path, _path2, _path3, _path4, _path5, _path6;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSlope(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 100,\n    height: 100,\n    viewBox: \"0 0 100 100\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.1234 42.1235H26.3713V57.8756H42.1234V42.1235Z\",\n    fill: \"#8179F2\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M57.8744 42.1237L42.1223 57.8758V42.1237L57.8744 26.3717V42.1237Z\",\n    fill: \"#7269F0\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M57.8744 57.8756L42.1223 73.6277V57.8756L57.8744 42.1235V57.8756Z\",\n    fill: \"#B6B1FF\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M73.6287 42.1235H57.8766V57.8756H73.6287V42.1235Z\",\n    fill: \"#8179F2\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.1234 26.372L57.8755 10.6199V26.372L42.1234 42.1241H26.3713L42.1234 26.372Z\",\n    fill: \"#B6B1FF\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M57.8729 73.6281L42.1208 89.3802V73.6281L57.8729 57.876H73.625L57.8729 73.6281Z\",\n    fill: \"#7269F0\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSlope);\nexport default __webpack_public_path__ + \"static/media/slope.de08dadb3988dd770e2d0d58acf15a09.svg\";\nexport { ForwardRef as ReactComponent };","import { useDispatch } from 'react-redux'\n\nimport { Row, Card, Col, Avatar } from 'antd'\n\nimport SLOPE from 'static/images/slope.svg'\nimport { RootDispatch } from 'store'\nimport { connectWallet } from 'store/wallet.reducer'\nimport { SlopeWallet } from '../../lib'\n\nconst Slope = () => {\n  const dispatch = useDispatch<RootDispatch>()\n\n  const connect = async () => {\n    const { Slope } = window\n    if (!Slope)\n      return window.notify({\n        type: 'warning',\n        description:\n          'Slope Wallet is not installed. If this is the first time you install Slope wallet, please restart your browser to complete the setup.',\n      })\n    const wallet = new SlopeWallet()\n    try {\n      await dispatch(connectWallet(wallet)).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: (er as Error).message,\n      })\n    }\n  }\n\n  return (\n    <Card\n      onClick={connect}\n      style={{ cursor: 'pointer' }}\n      bordered={false}\n      hoverable\n    >\n      <Row gutter={[16, 16]} justify=\"center\">\n        <Col>\n          <Avatar size={64} shape=\"square\" src={SLOPE} />\n        </Col>\n        <Col span={24}>\n          <p style={{ margin: 0, textAlign: 'center' }}>Slope</p>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default Slope\n","import { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Row, Col, Modal, Tooltip, Switch, Divider, Typography } from 'antd'\nimport IonIcon from 'components/ionicon'\nimport Coin98 from './coin98'\nimport Phantom from './phantom'\nimport Sollet from './sollet'\nimport Keystore from './keystore'\nimport SecretKey from './secretKey'\nimport Slope from './slope'\n\nimport { RootState, RootDispatch } from 'store'\nimport { closeWallet } from 'store/wallet.reducer'\n\nconst Login = () => {\n  const [advance, setAdvance] = useState(false)\n  const { visible } = useSelector((state: RootState) => state.wallet)\n  const dispatch = useDispatch<RootDispatch>()\n\n  return (\n    <Modal\n      visible={visible}\n      onCancel={() => dispatch(closeWallet())}\n      closeIcon={<IonIcon name=\"close\" />}\n      footer={null}\n    >\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Typography.Title level={5}>Wallet Connection</Typography.Title>\n        </Col>\n        <Col xs={{ span: 12 }} md={{ span: 8 }}>\n          <Coin98 />\n        </Col>\n        <Col xs={{ span: 12 }} md={{ span: 8 }}>\n          <Phantom />\n        </Col>\n        <Col xs={{ span: 12 }} md={{ span: 8 }}>\n          <Sollet />\n        </Col>\n        <Col xs={{ span: 12 }} md={{ span: 8 }}>\n          <Slope />\n        </Col>\n        <Col span={24}>\n          <Row gutter={[16, 16]} align=\"middle\">\n            <Col flex=\"auto\">\n              <Divider plain orientation=\"left\">\n                Other methods\n              </Divider>\n            </Col>\n            <Col>\n              <Tooltip title=\"Caution! These methods is not recommended due to lack of cryptographical protection. By switching the button, you agree that you will use this function at your own risk.\">\n                <Switch\n                  size=\"small\"\n                  checked={advance}\n                  onChange={setAdvance}\n                  checkedChildren={<IonIcon name=\"warning\" />}\n                  unCheckedChildren={<IonIcon name=\"help-circle\" />}\n                />\n              </Tooltip>\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          {advance ? (\n            <Row gutter={[16, 16]}>\n              <Col span={24}>\n                <Keystore />\n              </Col>\n              <Col span={24} style={{ height: 16 }} /> {/* Safe space */}\n              <Col span={24}>\n                <SecretKey />\n              </Col>\n            </Row>\n          ) : null}\n        </Col>\n      </Row>\n    </Modal>\n  )\n}\n\nexport default Login\n","import { Fragment, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\n\nimport { Button } from 'antd'\nimport IonIcon from 'components/ionicon'\nimport Login from './login'\n\nimport session from 'helpers/session'\nimport { RootDispatch, RootState } from 'store'\nimport {\n  connectWallet,\n  openWallet,\n  disconnectWallet,\n} from 'store/wallet.reducer'\nimport {\n  Coin98Wallet,\n  PhantomWallet,\n  SecretKeyWallet,\n  SolletWallet,\n  SlopeWallet,\n} from './lib'\n\nconst Wallet = () => {\n  const dispatch = useDispatch<RootDispatch>()\n  const { address } = useSelector((state: RootState) => state.wallet)\n\n  const reconnect = () => {\n    const walletType = session.get('WalletType')\n    if (walletType === 'SecretKey')\n      return new SecretKeyWallet(session.get('SecretKey'))\n    if (walletType === 'Keystore')\n      return new SecretKeyWallet(session.get('SecretKey'))\n    if (walletType === 'Coin98') return new Coin98Wallet()\n    if (walletType === 'Phantom') return new PhantomWallet()\n    if (walletType === 'Sollet') return new SolletWallet()\n    if (walletType === 'Slope') return new SlopeWallet()\n    return null\n  }\n\n  useEffect(() => {\n    const wallet = reconnect()\n    try {\n      if (wallet) dispatch(connectWallet(wallet)).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: (er as Error).message,\n      })\n    }\n  }, [dispatch])\n\n  if (!account.isAddress(address))\n    return (\n      <Fragment>\n        <Button\n          type=\"primary\"\n          icon={<IonIcon name=\"wallet-outline\" />}\n          onClick={() => dispatch(openWallet())}\n        >\n          Connect Wallet\n        </Button>\n        <Login />\n      </Fragment>\n    )\n\n  return (\n    <Button\n      type=\"primary\"\n      icon={<IonIcon name=\"power-outline\" />}\n      onClick={() => dispatch(disconnectWallet())}\n      block\n    >\n      Disconnect\n    </Button>\n  )\n}\n\nexport default Wallet\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account } from '@senswap/sen-js'\n\n/**\n * Interface & Utility\n */\n\nexport type WorkingMode = undefined | 'focus' | 'professional'\n\ntype State = {\n  mode: WorkingMode\n  visited: boolean\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'flags'\nconst initialState: State = {\n  mode: undefined,\n  visited: true,\n}\n\n/**\n * Actions\n */\n\nexport const setVisited = createAsyncThunk<\n  Partial<State>,\n  boolean,\n  { state: any }\n>(`${NAME}/setVisited`, async (visited, { getState }) => {\n  const {\n    wallet: { address },\n    flags: prevFlags,\n  } = getState()\n  if (!account.isAddress(address))\n    throw new Error('Wallet is not connected yet')\n  return { ...prevFlags, visited }\n})\n\nexport const setMode = createAsyncThunk<\n  Partial<State>,\n  WorkingMode,\n  { state: any }\n>(`${NAME}/setMode`, async (mode, { getState }) => {\n  const {\n    wallet: { address },\n    flags: prevFlags,\n  } = getState()\n  if (!account.isAddress(address))\n    throw new Error('Wallet is not connected yet')\n  return { ...prevFlags, mode }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        setVisited.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setMode.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nimport { Row, Col, Switch, Typography } from 'antd'\n\nimport { RootDispatch, RootState } from 'store'\nimport { setMode } from 'store/flags.reducer'\n\nconst Mode = () => {\n  const dispatch = useDispatch<RootDispatch>()\n  const history = useHistory()\n  const { mode } = useSelector((state: RootState) => state.flags)\n\n  const onSwitch = async (checked: boolean) => {\n    const mode = checked ? 'professional' : 'focus'\n    const page = checked ? '/dashboard' : '/page'\n    await dispatch(setMode(mode))\n    return history.push(page)\n  }\n\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Row gutter={[8, 8]} wrap={false}>\n          <Col flex=\"auto\">\n            <Typography.Text>Professional Mode</Typography.Text>\n          </Col>\n          <Col>\n            <Switch\n              size=\"small\"\n              checked={mode === 'professional'}\n              onChange={onSwitch}\n            />\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Typography.Paragraph type=\"secondary\">\n          By enabling the professional mode, your workspace will be a screen of\n          widgets.\n        </Typography.Paragraph>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Mode\n","import { Select } from 'antd'\n\nimport configs from 'configs'\nimport storage from 'helpers/storage'\n\nconst { net } = configs\n\nconst NetSwitch = () => {\n  const onSwitch = (value: string) => {\n    storage.set('network', value)\n    window.location.reload()\n  }\n  return (\n    <Select defaultValue={net} onChange={onSwitch} size=\"small\">\n      <Select.Option value=\"devnet\">Devnet</Select.Option>\n      <Select.Option value=\"testnet\">Testnet</Select.Option>\n      <Select.Option value=\"mainnet\">Mainnet</Select.Option>\n    </Select>\n  )\n}\n\nexport default NetSwitch\n","import { useSelector } from 'react-redux'\n\nimport { Row, Col, Typography, Space, Badge } from 'antd'\nimport NetSwitch from './netSwitch'\n\nimport { RootState } from 'store'\n\nexport const parseType = (status: number) => {\n  return status === 3\n    ? 'success'\n    : status === 2\n    ? 'warning'\n    : status === 1\n    ? 'error'\n    : 'default'\n}\n\nexport const parseMessage = (status: number) => {\n  return status === 3\n    ? 'Good'\n    : status === 2\n    ? 'Moderate'\n    : status === 1\n    ? 'Poor'\n    : 'No'\n}\n\nconst Network = () => {\n  const { networkStatus } = useSelector((state: RootState) => state.ui)\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col flex=\"auto\">\n        <Space direction=\"vertical\">\n          <Typography.Text>Network</Typography.Text>\n          <Space size={0}>\n            <Badge status={parseType(networkStatus)} dot />\n            <Typography.Text type=\"secondary\">\n              {`${parseMessage(networkStatus)} connection`}\n            </Typography.Text>\n          </Space>\n        </Space>\n      </Col>\n      <Col>\n        <NetSwitch />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Network\n","import { useSelector } from 'react-redux'\n\nimport { Row, Col, Button, Popover, Typography, Divider, Badge } from 'antd'\nimport IonIcon from 'components/ionicon'\nimport Wallet from '../wallet'\nimport Mode from './mode'\nimport Network, { parseType } from './network'\n\nimport { RootState } from 'store'\n\nconst Settings = () => {\n  const { networkStatus } = useSelector((state: RootState) => state.ui)\n\n  const content = (\n    <Row gutter={[16, 16]} style={{ maxWidth: 300 }}>\n      <Col span={24}>\n        <Typography.Title level={5} type=\"secondary\">\n          System Settings\n        </Typography.Title>\n      </Col>\n      <Col span={24}>\n        <Mode />\n      </Col>\n      <Col span={24}>\n        <Network />\n      </Col>\n      <Col span={24}>\n        <Divider style={{ margin: 0 }} />\n      </Col>\n      <Col span={24}>\n        <Wallet />\n      </Col>\n    </Row>\n  )\n\n  return (\n    <Popover placement=\"topRight\" trigger=\"click\" content={content}>\n      <Badge status={parseType(networkStatus)} offset={[-4, 4]} dot>\n        <Button\n          type=\"text\"\n          className=\"contained\"\n          icon={<IonIcon name=\"settings-outline\" />}\n        />\n      </Badge>\n    </Popover>\n  )\n}\n\nexport default Settings\n","import { account } from '@senswap/sen-js'\nimport configs from 'configs'\n\nconst { net } = configs\n\nexport const isTouchable = () => {\n  return 'ontouchstart' in window || navigator.maxTouchPoints > 0\n}\n\nexport const asyncWait = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nexport const openNewTab = (href: string) => {\n  return window.open(href, '_blank')\n}\n\nexport const shortenAddress = (address: string, num = 4, delimiter = '...') => {\n  return (\n    address.substring(0, num) +\n    delimiter +\n    address.substring(address.length - num, address.length)\n  )\n}\n\nexport const explorer = (addressOrTxId: string): string => {\n  if (account.isAddress(addressOrTxId)) {\n    return `https://explorer.solana.com/address/${addressOrTxId}?cluster=${net}`\n  }\n  return `https://explorer.solana.com/tx/${addressOrTxId}?cluster=${net}`\n}\n","import { Fragment } from 'react'\nimport { useSelector } from 'react-redux'\nimport { account, utils } from '@senswap/sen-js'\nimport numbro from 'numbro'\n\nimport { Space, Typography, Tooltip, Divider } from 'antd'\nimport IonIcon from 'components/ionicon'\n\nimport { explorer, shortenAddress } from 'helpers/util'\nimport { RootState } from 'store'\n\nconst WalletIntro = () => {\n  const { address, lamports } = useSelector((state: RootState) => state.wallet)\n\n  const balance = numbro(utils.undecimalize(lamports, 9)).format('0.[00]')\n\n  if (!account.isAddress(address)) return <Fragment />\n  return (\n    <Space size={10}>\n      <Typography.Link\n        style={{ color: 'inherit', fontSize: 12 }}\n        href={explorer(address)}\n        target=\"_blank\"\n      >\n        {shortenAddress(address, 3, '...')} <IonIcon name=\"open-outline\" />\n      </Typography.Link>\n      <Divider type=\"vertical\" style={{ margin: 0 }} />\n      <Tooltip title={`${utils.undecimalize(lamports, 9)} SOL`}>\n        <Typography.Text style={{ fontSize: 12 }}>\n          {balance} <span style={{ color: '#03E1FF' }}>◎</span>\n        </Typography.Text>\n      </Tooltip>\n    </Space>\n  )\n}\n\nexport default WalletIntro\n","var _defs, _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSen(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    \"data-name\": \"Layer 1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    viewBox: \"0 0 283.465 283.465\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear-gradient\",\n    x1: -1222.504,\n    y1: -2883.343,\n    x2: -1135.428,\n    y2: -2970.419,\n    gradientTransform: \"translate(1300.837 3068.613)\",\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#f9575e\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.27,\n    stopColor: \"#f8555b\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.486,\n    stopColor: \"#f44f51\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.685,\n    stopColor: \"#ee4540\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.871,\n    stopColor: \"#e63728\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#de2a13\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear-gradient-2\",\n    x1: 1314.111,\n    y1: -895.144,\n    x2: 1389.882,\n    y2: -811.556,\n    gradientTransform: \"translate(1516.988 -707.868) rotate(180)\",\n    xlinkHref: \"#linear-gradient\"\n  }))), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Senswap logo FINAL\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M37.179,85.127H114a92.562,92.562,0,0,1,92.562,92.562v20.648a0,0,0,0,1,0,0H129.741a92.562,92.562,0,0,1-92.562-92.562V85.127A0,0,0,0,1,37.179,85.127Z\",\n    transform: \"translate(107.828 328.128) rotate(-135)\",\n    fill: \"url(#linear-gradient)\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M169.462,85.127h76.823a0,0,0,0,1,0,0v20.648a92.562,92.562,0,0,1-92.562,92.562H76.9a0,0,0,0,1,0,0V177.689a92.562,92.562,0,0,1,92.562-92.562Z\",\n    transform: \"translate(-52.89 155.776) rotate(-45)\",\n    fill: \"url(#linear-gradient-2)\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSen);\nexport default __webpack_public_path__ + \"static/media/sen.f2d012c907167ba613b035621b6423cb.svg\";\nexport { ForwardRef as ReactComponent };","import { Fragment, useEffect, useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Connection } from '@solana/web3.js'\n\nimport { notification } from 'antd'\n\nimport configs from 'configs'\nimport { RootDispatch } from 'store'\nimport { resize, setNetworkStatus } from 'store/ui.reducer'\n\nconst {\n  sol: { node },\n} = configs\nconst connection = new Connection(node)\nlet intervalId: ReturnType<typeof setTimeout> | undefined\n\nexport type Notification = {\n  type: 'error' | 'warning' | 'success' | 'info'\n  description: string\n  onClick?: () => void\n}\n\ndeclare global {\n  interface Window {\n    notify: ({ type, description, onClick }: Notification) => void\n  }\n}\n\nconst UIWatcher = () => {\n  const [api, contextHolder] = notification.useNotification()\n  const dispatch = useDispatch<RootDispatch>()\n\n  // Notification system\n  window.notify = ({ type, description, onClick = () => {} }: Notification) => {\n    return api[type]({\n      message: type.toUpperCase(),\n      description,\n      onClick,\n      style: { cursor: 'pointer' },\n    })\n  }\n\n  // Intervally ping solana cluster\n  const ping = useCallback(async () => {\n    try {\n      if (!window.navigator.onLine) return dispatch(setNetworkStatus(0))\n      const start = Date.now()\n      await connection.getVersion()\n      const end = Date.now()\n      const duration = end - start\n      if (duration < 250) return dispatch(setNetworkStatus(3))\n      if (duration < 1000) return dispatch(setNetworkStatus(2))\n      return dispatch(setNetworkStatus(1))\n    } catch (er) {\n      return dispatch(setNetworkStatus(0))\n    }\n  }, [dispatch])\n  useEffect(() => {\n    if (intervalId) clearInterval(intervalId)\n    ping() // Init the network status\n    intervalId = setInterval(ping, 10000)\n    return () => {\n      if (intervalId) clearInterval(intervalId)\n    }\n  }, [ping])\n\n  // Listen window events\n  useEffect(() => {\n    window.onresize = () => dispatch(resize())\n  }, [dispatch])\n\n  return <Fragment>{contextHolder}</Fragment>\n}\n\nexport default UIWatcher\n","import { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { account } from '@senswap/sen-js'\n\nimport { Row, Col, Typography, Avatar, Space, Affix, Card } from 'antd'\nimport Wallet from 'view/header/wallet'\nimport Settings from 'view/header/settings'\nimport WalletIntro from 'view/header/wallet/intro'\n\nimport logo from 'static/images/sen.svg'\nimport { RootState } from 'store'\n\nconst Header = () => {\n  const history = useHistory()\n  const { address } = useSelector((state: RootState) => state.wallet)\n\n  const home = () => history.push('/')\n\n  return (\n    <Affix offsetTop={12}>\n      <Row gutter={[24, 24]}>\n        <Col span={24}>\n          <Card bodyStyle={{ padding: 16 }} hoverable>\n            <Row gutter={[16, 16]} align=\"middle\">\n              <Col flex=\"auto\">\n                <Space\n                  align=\"center\"\n                  onClick={home}\n                  style={{ cursor: 'pointer' }}\n                >\n                  <Avatar src={logo} alt=\"logo\" />\n                  <Typography.Title level={5} style={{ marginLeft: -4 }}>\n                    Sentre\n                  </Typography.Title>\n                </Space>\n              </Col>\n              <Col>\n                <WalletIntro />\n              </Col>\n              <Col>\n                {!account.isAddress(address) ? <Wallet /> : <Settings />}\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n      </Row>\n    </Affix>\n  )\n}\n\nexport default Header\n","import { Row, Col, Card, Typography } from 'antd'\nimport { useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nconst AppIcon = ({ appId }: { appId: string }) => {\n  const history = useHistory()\n\n  const launch = useCallback(() => {\n    return history.push(`/page/${appId}`)\n  }, [history, appId])\n\n  return (\n    <Card onClick={launch} hoverable>\n      <Row gutter={[24, 24]}>\n        <Col>\n          <Typography.Title level={5}>{appId}</Typography.Title>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default AppIcon\n","import configs from 'configs'\n\nconst {\n  manifest: { url, appId },\n} = configs\n\nexport type ComponentManifest = {\n  url: string\n  scope: string\n  module: string\n}\n\nexport type SenHubManifest = Record<\n  string,\n  Record<'manifest', ComponentManifest> & any\n>\n\nconst manifest: SenHubManifest = {\n  [appId]: {\n    manifest: {\n      url: `${url}/index.js`,\n      scope: appId,\n      module: './',\n    },\n  },\n  bulksender: {\n    manifest: {\n      url: 'https://descartesnetwork.github.io/bulksender/index.js',\n      scope: 'bulksender',\n      module: './',\n    },\n  },\n}\n\nexport default manifest\n","import { useSelector } from 'react-redux'\n\nimport { Row, Col, Typography, Avatar, Space } from 'antd'\nimport AppIcon from './appIcon'\n\nimport logo from 'static/images/sen.svg'\nimport manifest from 'senhub.manifest'\nimport { RootState } from 'store'\n\nconst Welcome = () => {\n  const { width, infix } = useSelector((state: RootState) => state.ui)\n\n  return (\n    <Row gutter={[24, 24]} justify=\"center\">\n      <Col>\n        <Space direction=\"vertical\" align=\"center\">\n          <Avatar size={128} src={logo} alt=\"logo\" />\n          <Typography.Text>\n            Screen Size: <strong>{width}</strong>\n          </Typography.Text>\n          <Typography.Text>\n            Screen Type: <strong>{infix}</strong>\n          </Typography.Text>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Row gutter={[24, 24]}>\n          {Object.keys(manifest).map((appId) => (\n            <Col key={appId}>\n              <AppIcon appId={appId} />\n            </Col>\n          ))}\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Welcome\n","import { Component } from 'react'\n\nimport { Row, Col, Typography, Button } from 'antd'\n\ninterface Props {\n  remoteUrl: string\n}\n\ninterface State {\n  failed: boolean\n}\n\n/**\n * Error Boundary\n */\nclass ErrorBoundary extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      failed: false,\n    }\n  }\n\n  componentDidCatch(error: Error) {\n    return this.setState({ failed: Boolean(error) })\n  }\n\n  support = () => {\n    const { remoteUrl } = this.props\n    return window.open(`mailto:hi@sentre.io?subject=${remoteUrl} has failed`, '_blank')\n  }\n\n  render() {\n    const { failed } = this.state\n    const { remoteUrl, children } = this.props\n\n    if (failed || !children)\n      return (\n        <Row\n          gutter={[8, 8]}\n          style={{ height: '100%' }}\n          align=\"middle\"\n          justify=\"center\"\n        >\n          <Col span={24}>\n            <Typography.Title level={4} style={{ textAlign: 'center' }}>\n              {remoteUrl}\n            </Typography.Title>\n          </Col>\n          <Col span={24}>\n            <p style={{ textAlign: 'center' }}>\n              Oops! The application can't load properly\n            </p>\n          </Col>\n          <Col span={24}>\n            <Button type=\"primary\" onClick={this.support} block>\n              Support\n            </Button>\n          </Col>\n        </Row>\n      )\n    return children\n  }\n}\n\nexport default ErrorBoundary\n","import { Suspense, forwardRef } from 'react'\n\nimport { Skeleton } from 'antd'\nimport ErrorBoundary from 'components/errorBoundary'\nimport { useRemoteModule } from 'react-dynamic-remote-component'\nimport { ComponentManifest } from 'senhub.manifest'\n\n/**\n * App Loading\n */\nconst AppLoading = () => {\n  return <Skeleton active />\n}\n\n/**\n * Remote component\n */\nconst RemoteComponent = forwardRef<\n  HTMLElement,\n  { type?: string } & ComponentManifest & any\n>(({ type = 'default', manifest, ...props }, ref) => {\n  const { [type]: Component } = useRemoteModule(manifest)\n  return <Component {...props} ref={ref} />\n})\n\n/**\n * App Loader\n */\nconst AppLoader = forwardRef<\n  HTMLElement,\n  { type: 'Page' | 'Widget' } & ComponentManifest & any\n>(({ type, manifest, ...props }, ref) => {\n  return (\n    <ErrorBoundary remoteUrl={manifest?.url || 'Unknown'}>\n      <Suspense fallback={<AppLoading />}>\n        <RemoteComponent type={type} manifest={manifest} {...props} ref={ref} />\n      </Suspense>\n    </ErrorBoundary>\n  )\n})\n\nexport default AppLoader\n","import { Row, Col } from 'antd'\nimport AppLoader from 'components/appLoader'\n\nimport manifest from 'senhub.manifest'\n\nconst Dashboard = () => {\n  return (\n    <Row gutter={[24, 24]}>\n      {Object.keys(manifest).map((appId, i) => (\n        <Col key={`#${i}-${appId}`}>\n          <AppLoader type=\"Widget\" {...manifest[appId]} />\n        </Col>\n      ))}\n    </Row>\n  )\n}\n\nexport default Dashboard\n","import { useParams } from 'react-router-dom'\nimport { Row, Col } from 'antd'\nimport AppLoader from 'components/appLoader'\nimport manifest from 'senhub.manifest'\n\nconst Dashboard = () => {\n  const { appId } = useParams<{ appId: string }>()\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <AppLoader type=\"Page\" {...manifest[appId]} />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Dashboard\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\nimport { isTouchable } from 'helpers/util'\n\n/**\n * Interface & Utility\n */\n\nexport type Infix = 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'\n// 0: Failed, 1: Poor, 2: Moderate, 3: Good\nexport type NetworkStatus = 0 | 1 | 2 | 3\n\nexport type State = {\n  width: number\n  infix: Infix\n  touchable: boolean\n  networkStatus: NetworkStatus\n}\n\nconst getInfix = (): Infix => {\n  const width = window.innerWidth\n  if (width < 576) return 'xs'\n  if (width < 768) return 'sm'\n  if (width < 992) return 'md'\n  if (width < 1200) return 'lg'\n  if (width < 1400) return 'xl'\n  return 'xxl'\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'ui'\nconst initialState: State = {\n  width: window.innerWidth,\n  infix: getInfix(),\n  touchable: isTouchable(),\n  networkStatus: 0,\n}\n\n/**\n * Actions\n */\n\nexport const resize = createAsyncThunk(`${NAME}/resize`, async () => {\n  const width = window.innerWidth\n  const infix = getInfix()\n  return { width, infix }\n})\n\nexport const setNetworkStatus = createAsyncThunk(\n  `${NAME}/setNetworkStatus`,\n  async (networkStatus: NetworkStatus) => {\n    return { networkStatus }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        resize.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setNetworkStatus.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { useEffect, useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\n\nimport { updateWallet } from 'store/wallet.reducer'\nimport { RootDispatch, RootState } from 'store'\n\n// Watch id\nlet watchId: any = null\n\nconst WalletWatcher = () => {\n  const dispatch = useDispatch<RootDispatch>()\n  const { address } = useSelector((state: RootState) => state.wallet)\n\n  const watchData = useCallback(async () => {\n    if (!account.isAddress(address)) {\n      try {\n        await window.senhub.lamports.unwatch(watchId)\n      } catch (er) {\n        /* Nothing */\n      }\n      watchId = null\n    } else {\n      if (watchId) return console.warn('Already watched')\n      watchId = window.senhub.lamports.watch(\n        address,\n        (er: string | null, re: number | null) => {\n          if (er) return console.warn(er)\n          return dispatch(updateWallet({ lamports: BigInt(re || 0) }))\n        },\n      )\n    }\n  }, [dispatch, address])\n\n  useEffect(() => {\n    watchData()\n  }, [watchData])\n\n  return null\n}\n\nexport default WalletWatcher\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account, AccountData } from '@senswap/sen-js'\n\n/**\n * Interface & Utility\n */\n\nexport type State = Record<string, AccountData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'accounts'\nconst initialState: State = {}\n\n/**\n * Actions\n */\n\nexport const getAccounts = createAsyncThunk(\n  `${NAME}/getAccounts`,\n  async ({ owner }: { owner: string }) => {\n    if (!account.isAddress(owner))\n      throw new Error('Invalid owner/wallet address')\n    const { splt } = window.senhub\n    const ownerPublicKey = account.fromAddress(owner)\n    const { value } = await splt.connection.getTokenAccountsByOwner(\n      ownerPublicKey,\n      { programId: splt.spltProgramId },\n    )\n    let bulk: State = {}\n    value.forEach(({ pubkey, account: { data: buf } }) => {\n      const address = pubkey.toBase58()\n      const data = splt.parseAccountData(buf)\n      return (bulk[address] = data)\n    })\n    return bulk\n  },\n)\n\nexport const getAccount = createAsyncThunk<\n  State,\n  { address: string },\n  { state: any }\n>(`${NAME}/getAccount`, async ({ address }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid account address')\n  const {\n    accounts: { [address]: data },\n  } = getState()\n  if (data) return { [address]: data }\n  const { splt } = window.senhub\n  const raw = await splt.getAccountData(address)\n  return { [address]: raw }\n})\n\nexport const upsetAccount = createAsyncThunk<\n  State,\n  { address: string; data: AccountData },\n  { state: any }\n>(`${NAME}/upsetAccount`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteAccount = createAsyncThunk(\n  `${NAME}/deleteAccount`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(getAccounts.fulfilled, (state, { payload }) => payload)\n      .addCase(\n        getAccount.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetAccount.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteAccount.fulfilled,\n        (state, { payload }) => void delete state[payload.address],\n      ),\n})\n\nexport default slice.reducer\n","import { Fragment, useCallback, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\n\nimport { RootDispatch, RootState } from 'store'\nimport { getAccounts, upsetAccount } from 'store/accounts.reducer'\n\n// Watch id\nlet watchId = 0\nlet prevLamports: BigInt | undefined = undefined\n\nconst AccountWatcher = () => {\n  const dispatch = useDispatch<RootDispatch>()\n  const { address: walletAddress, lamports } = useSelector(\n    (state: RootState) => state.wallet,\n  )\n\n  // First-time fetching\n  const fetchData = useCallback(async () => {\n    try {\n      if (!account.isAddress(walletAddress)) return\n      await dispatch(getAccounts({ owner: walletAddress })).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: 'Cannot fetch data of accounts',\n      })\n    }\n  }, [dispatch, walletAddress])\n  // Watch account changes\n  const watchData = useCallback(async () => {\n    if (!account.isAddress(walletAddress))\n      return console.warn('Wallet is not connected')\n    if (watchId) return console.warn('Already watched')\n    const { splt } = window.senhub || {}\n    const filters = [{ memcmp: { bytes: walletAddress, offset: 32 } }]\n    watchId = splt?.watch((er: string | null, re: any) => {\n      if (er) return console.error(er)\n      const { address, data } = re\n      return dispatch(upsetAccount({ address, data }))\n    }, filters)\n  }, [dispatch, walletAddress])\n\n  // When we close accounts, there a high chance\n  // that the next balance will be greater than the current balance\n  // We use this trick to reload relevant list\n  useEffect(() => {\n    if (typeof prevLamports !== 'undefined' && lamports > prevLamports) {\n      dispatch(getAccounts({ owner: walletAddress }))\n    }\n    prevLamports = lamports\n  }, [dispatch, walletAddress, lamports])\n\n  useEffect(() => {\n    fetchData()\n    watchData()\n    // Unwatch (cancel socket)\n    return () => {\n      ;(async () => {\n        try {\n          await window.senhub.splt.unwatch(watchId)\n        } catch (er) {}\n      })()\n      watchId = 0\n    }\n  }, [fetchData, watchData])\n\n  return <Fragment />\n}\n\nexport default AccountWatcher\n","import { AccountInfo, PublicKey } from '@solana/web3.js'\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account, PoolData } from '@senswap/sen-js'\nimport configs from 'configs'\n\nconst {\n  sol: { taxmanAddress },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type State = Record<string, PoolData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'pools'\nconst initialState: State = {}\n\n/**\n * Actions\n */\n\nexport const getPools = createAsyncThunk(`${NAME}/getPools`, async () => {\n  const { swap } = window.senhub\n  // Get all pools\n  const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n    await swap.connection.getProgramAccounts(swap.swapProgramId, {\n      filters: [\n        { dataSize: 257 },\n        { memcmp: { bytes: taxmanAddress, offset: 65 } },\n      ],\n    })\n  let bulk: State = {}\n  value.forEach(({ pubkey, account: { data: buf } }) => {\n    const address = pubkey.toBase58()\n    const data = swap.parsePoolData(buf)\n    bulk[address] = data\n  })\n  return bulk\n})\n\nexport const getPool = createAsyncThunk<\n  State,\n  { address: string },\n  { state: any }\n>(`${NAME}/getPool`, async ({ address }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid pool address')\n  const {\n    pools: { [address]: data },\n  } = getState()\n  if (data) return { [address]: data }\n  const { swap } = window.senhub\n  const raw = await swap.getPoolData(address)\n  return { [address]: raw }\n})\n\nexport const upsetPool = createAsyncThunk<\n  State,\n  { address: string; data: PoolData },\n  { state: any }\n>(`${NAME}/upsetPool`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid pool address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(getPools.fulfilled, (state, { payload }) => payload)\n      .addCase(\n        getPool.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetPool.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { Fragment, useCallback, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\n\nimport { RootDispatch, RootState } from 'store'\nimport { getPools, upsetPool } from 'store/pools.reducer'\nimport configs from 'configs'\n\nconst {\n  sol: { taxmanAddress },\n} = configs\n\n// Watch id\nlet watchId = 0\n\nconst PoolWatcher = () => {\n  const dispatch = useDispatch<RootDispatch>()\n  const { address: walletAddress } = useSelector(\n    (state: RootState) => state.wallet,\n  )\n\n  // First-time fetching\n  const fetchData = useCallback(async () => {\n    try {\n      if (!account.isAddress(walletAddress)) return\n      await dispatch(getPools()).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: 'Cannot fetch data of pools',\n      })\n    }\n  }, [dispatch, walletAddress])\n  // Watch account changes\n  const watchData = useCallback(async () => {\n    if (watchId) return console.warn('Already watched')\n    const { swap } = window.senhub || {}\n    const filters = [{ memcmp: { bytes: taxmanAddress, offset: 65 } }]\n    watchId = swap?.watch((er: string | null, re: any) => {\n      if (er) return console.error(er)\n      const { address, data } = re\n      return dispatch(upsetPool({ address, data }))\n    }, filters)\n  }, [dispatch])\n\n  useEffect(() => {\n    fetchData()\n    watchData()\n    // Unwatch (cancel socket)\n    return () => {\n      ;(async () => {\n        try {\n          await window.senhub.swap.unwatch(watchId)\n        } catch (er) {}\n      })()\n      watchId = 0\n    }\n  }, [fetchData, watchData])\n\n  return <Fragment />\n}\n\nexport default PoolWatcher\n","import { Fragment } from 'react'\nimport UIWatcher from './ui.watcher'\nimport WalletWatcher from './wallet.watcher'\nimport AccountWatcher from './account.watcher'\nimport PoolWatcher from './pool.watcher'\n\nconst Watcher = () => {\n  return (\n    <Fragment>\n      <UIWatcher />\n      <WalletWatcher />\n      <AccountWatcher />\n      <PoolWatcher />\n    </Fragment>\n  )\n}\n\nexport default Watcher\n","import { Route, Switch, Redirect } from 'react-router-dom'\nimport { Layout, Row, Col } from 'antd'\nimport Header from 'view/header'\nimport Welcome from 'view/welcome'\nimport Dashboard from 'view/dashboard'\nimport Page from 'view/page'\n\nimport Watcher from 'view/watcher'\n\nimport 'static/styles/index.less'\n\nconst View = () => {\n  return (\n    <Layout style={{ padding: 12, minHeight: '100vh' }}>\n      <Row gutter={[24, 24]}>\n        <Col span={24}>\n          <Header />\n        </Col>\n        <Col span={24}>\n          <Switch>\n            <Route exact path=\"/welcome\" component={Welcome} />\n            <Route exact path=\"/dashboard\" component={Dashboard} />\n            <Route exact path=\"/page/:appId\" component={Page} />\n            <Redirect from=\"*\" to=\"/welcome\" />\n          </Switch>\n        </Col>\n      </Row>\n      {/* In-Background Run Jobs */}\n      <Watcher />\n    </Layout>\n  )\n}\n\nexport default View\n","import { getDefaultMiddleware } from '@reduxjs/toolkit'\n\n// Need it cause https://github.com/GoogleChromeLabs/jsbi/issues/30\ndeclare global {\n  interface BigInt {\n    toJSON: (this: bigint) => string\n  }\n}\nBigInt.prototype.toJSON = function () {\n  return this.toString()\n}\n\nfunction isPlainObject(obj: object): boolean {\n  if (obj === null) return false\n  const proto = Object.getPrototypeOf(obj)\n  return proto !== null && Object.getPrototypeOf(proto) === null\n}\n\nfunction isPlain(val: any): boolean {\n  return (\n    typeof val === 'undefined' ||\n    val === null ||\n    typeof val === 'string' ||\n    typeof val === 'boolean' ||\n    typeof val === 'number' ||\n    Array.isArray(val) ||\n    isPlainObject(val) ||\n    typeof val === 'bigint'\n  )\n}\n\nconst middleware = getDefaultMiddleware({\n  serializableCheck: {\n    isSerializable: isPlain,\n  },\n})\n\nexport default middleware\n","// Bugfix performance\n// https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/Troubleshooting.md#excessive-use-of-memory-and-cpu\nconst devTools = (appName: string): any => {\n  if ((process.env.REACT_APP_ENV || 'development') !== 'development')\n    return false\n  return {\n    name: appName,\n    actionSanitizer: ({ payload, type }: { payload: any; type: string }) => ({\n      payload,\n      type,\n    }),\n  }\n}\n\nexport default devTools\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account, MintData } from '@senswap/sen-js'\n\n/**\n * Interface & Utility\n */\n\nexport type State = Record<string, MintData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'mints'\nconst initialState: State = {}\n\n/**\n * Actions\n */\n\nexport const getMint = createAsyncThunk<\n  State,\n  { address: string; force: boolean },\n  { state: any }\n>(`${NAME}/getMint`, async ({ address, force }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid mint address')\n  if (!force) {\n    const {\n      accounts: { [address]: data },\n    } = getState()\n    if (data) return { [address]: data }\n  }\n  const { splt } = window.senhub\n  const raw = await splt.getMintData(address)\n  return { [address]: raw }\n})\n\nexport const upsetMint = createAsyncThunk<\n  State,\n  { address: string; data: MintData },\n  { state: any }\n>(`${NAME}/upsetMint`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteMint = createAsyncThunk(\n  `${NAME}/deleteMint`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getMint.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetMint.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteMint.fulfilled,\n        (state, { payload }) => void delete state[payload.address],\n      ),\n})\n\nexport default slice.reducer\n","import { configureStore } from '@reduxjs/toolkit'\nimport middleware from './middleware'\nimport devTools from './devTools'\n\nimport ui from './ui.reducer'\nimport flags from './flags.reducer'\nimport wallet from './wallet.reducer'\nimport accounts from './accounts.reducer'\nimport mints from './mints.reducer'\nimport pools from './pools.reducer'\n\nconst store = configureStore({\n  middleware,\n  devTools: devTools('senhub'),\n  reducer: {\n    ui,\n    flags,\n    wallet,\n    accounts,\n    mints,\n    pools,\n  },\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type RootDispatch = typeof store.dispatch\nexport default store\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { render } from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\nimport { ConfigProvider } from 'antd'\nimport View from 'view'\n\nimport configs from 'configs'\nimport store from 'store'\nimport reportWebVitals from 'reportWebVitals'\n\nconst {\n  manifest: { appId },\n} = configs\n\nrender(\n  <Provider store={store}>\n    <ConfigProvider prefixCls={appId}>\n      <BrowserRouter>\n        <View />\n      </BrowserRouter>\n    </ConfigProvider>\n  </Provider>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"names":["forwardRef","ref","name","className","props","cln","KEY","driver","window","localStorage","convert","value","JSON","parse","e","storage","set","key","data","getItem","setItem","stringify","get","clear","env","process","net","shared","appId","url","senhub","development","staging","production","SOLVARS","spltAddress","splataAddress","conf","devnet","node","chainId","senAddress","swapAddress","taxmanAddress","testnet","mainnet","manifest","sol","initializeWindowSenOs","wallet","configs","lamports","Lamports","splt","SPLT","swap","Swap","destroyWindowSenOs","disconnect","NAME","initialState","visible","address","BigInt","openWallet","createAsyncThunk","closeWallet","connectWallet","Error","getAddress","getLamports","updateWallet","disconnectWallet","location","reload","createSlice","reducers","extraReducers","builder","addCase","fulfilled","state","payload","Object","assign","sessionStorage","session","walletType","getProvider","signTransaction","transaction","rawSignTransaction","signature","publicKey","addSignature","signMessage","message","verifySignature","this","SecretKeyWallet","secretKey","_setSecretKey","keypair","account","provider","toBase58","confirm","signData","serializeMessage","nacl","Buffer","from","toString","valid","BaseWallet","KeystoreWallet","keystore","password","Coin98Wallet","coin98","request","method","feePayer","params","sig","decode","PhantomWallet","solana","isPhantom","isConnected","connect","Promise","resolve","on","encodedMsg","TextEncoder","encode","bufSig","toBuffer","SolletWallet","connected","sign","WalletAdapter","SlopeWallet","Slope","msg","PublicKey","slopeAddress","dispatch","useDispatch","notify","type","description","unwrap","Card","onClick","style","cursor","bordered","hoverable","Row","gutter","justify","Col","Avatar","size","shape","src","COIN98","span","margin","textAlign","PHANTOM","SOLLET","onClose","useState","setPassword","setKeystore","useEffect","ks","Modal","onCancel","closeIcon","footer","Typography","Input","placeholder","onChange","target","iconRender","Button","icon","fileDownload","disabled","filename","setFilename","setVisible","refFile","useRef","Space","align","href","rel","xs","md","suffix","marginRight","current","click","readOnly","accept","files","file","reader","FileReader","readAsText","onloadend","result","display","marginTop","setSecretKey","acc","SLOPE","advance","setAdvance","useSelector","level","flex","Divider","plain","orientation","Tooltip","title","Switch","checked","checkedChildren","unCheckedChildren","height","reconnect","er","block","Fragment","mode","undefined","visited","setVisited","getState","prevFlags","flags","setMode","history","useHistory","onSwitch","page","push","wrap","Select","defaultValue","parseType","status","networkStatus","ui","direction","Badge","dot","content","maxWidth","Popover","placement","trigger","offset","shortenAddress","num","delimiter","substring","length","addressOrTxId","balance","numbro","utils","format","color","fontSize","intervalId","Affix","offsetTop","bodyStyle","padding","logo","alt","marginLeft","launch","useCallback","scope","module","width","infix","keys","map","ErrorBoundary","support","remoteUrl","open","failed","error","setState","Boolean","children","Component","AppLoading","Skeleton","active","RemoteComponent","useRemoteModule","AppLoader","Suspense","fallback","i","useParams","getInfix","innerWidth","touchable","navigator","maxTouchPoints","resize","setNetworkStatus","connection","Connection","notification","api","contextHolder","toUpperCase","ping","onLine","start","Date","now","getVersion","end","duration","clearInterval","setInterval","onresize","watchId","watchData","unwatch","console","warn","watch","re","getAccounts","owner","ownerPublicKey","getTokenAccountsByOwner","programId","spltProgramId","bulk","forEach","pubkey","buf","parseAccountData","getAccount","accounts","getAccountData","raw","upsetAccount","deleteAccount","prevLamports","walletAddress","fetchData","filters","memcmp","bytes","getPools","getProgramAccounts","swapProgramId","dataSize","parsePoolData","getPool","pools","getPoolData","upsetPool","Layout","minHeight","Route","exact","path","component","Welcome","Dashboard","Page","Redirect","to","prototype","toJSON","getDefaultMiddleware","serializableCheck","isSerializable","val","Array","isArray","obj","proto","getPrototypeOf","isPlainObject","appName","getMint","force","getMintData","upsetMint","deleteMint","configureStore","middleware","devTools","reducer","mints","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","Provider","store","ConfigProvider","prefixCls","BrowserRouter","document","getElementById","reportWebVitals"],"sourceRoot":""}